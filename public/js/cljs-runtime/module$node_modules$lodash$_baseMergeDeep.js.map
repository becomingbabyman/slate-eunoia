{
"version":3,
"file":"module$node_modules$lodash$_baseMergeDeep.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/lodash/_baseMergeDeep.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseMergeDeep\"] = function(global,process,require,module,exports,shadow$shims) {\nvar assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","assignMergeValue","cloneBuffer","cloneTypedArray","copyArray","initCloneObject","isArguments","isArray","isArrayLikeObject","isBuffer","isFunction","isObject","isPlainObject","isTypedArray","safeGet","toPlainObject","baseMergeDeep","object","source","key","srcIndex","mergeFunc","customizer","stack","objValue","srcValue","stacked","get","newValue","undefined","isCommon","isArr","isBuff","isTyped","set"]
}

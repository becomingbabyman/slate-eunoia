{"version":3,"file":"lib.plugins.features.bold.js","sources":["lib/plugins/features/bold.cljs"],"mappings":";;;;;;AAMA,wDAAA,xDAAMc,wHAA6Bb;AACjC,iEAAA,1DAACD,6CAAKC,iBAAe,iCAAA,hCAAG,AAACC,gBAAMD,tFADjC;;AAGA,sCAAA,tCAAMc,oFAAWR,OAAOiB,MAAMC;AAA9B,AACE,oBAAIA;AACF,IAAMP,OAAK,AAACI,gBAAMC;IACZf,aAAW,AAACM,sDAA4BI;AAC5C,OAAaX,kBAAOC,WAAW,qBAAA,mFAAA,xGAACC,pCAFlC;;AAGA,yBAAA,lBAAaF;;;AAEjB,wCAAA,xCAAMmB,wFAAaC;AACjB,GAAM,6CAAA,7CAACX,oDAASC,vDADlB;AACE,eAEG,AAACG,mDAAQC,lEADV,IAAAO;eAECzB,XAFD0B;AAAA,AAAA,kHAAAD,SAAAC,4CAAAD,SAAAC,xKAACC,sDAAAA,yEAAAA;;AADH;;;AAKF,AAAA;;;iCAAA,yCAAApB,1EAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,6DAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;0EAEIR,1EAFJ,AAAA,+DAAA,/DAAMO;qNAKA,8CAAA,2CAAA,0DAAA,KAAA,0DAAA,aAAA,/NAACR,2UAID,8CAAA,2CAAA,0DAAA,KAAA,0DAAA,aAAA,/NAACA,hiBATP,AAAA,kDAAA,4wBAYmBW,6CACb,kCAAA,2CAAA,oDAAA,QAAA,zIAACI,9vBATH,qBAAA,89BAAA,2CAAA,9hCAACV,8lCAYciB,xtBARAX,gkBAOAA;;;AAfnB,AAAA,+DAAA,/DAAMH;AAkBH,oEAAA,7DAACN,PAlBJ;;;AAAA,AAAA,yDAAA,zDAAMM;;AAAN","names":["cljs.core.subs.cljs$core$IFn$_invoke$arity$3","matched-text","cljs.core/count","props/children","lib.plugins.helpers.auto-replace/auto-replace","options","lib.plugins.features.bold.bold.cljs$core$IFn$_invoke$arity$1","change","clean-text","cljs.core/clj->js","var_args","G__38482","lib.plugins.features.bold/bold","js/Error","lib.plugins.features.bold/strip-auto-replace-triggers","lib.plugins.features.bold/transform","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","props/mark.type","text","lib.plugins.helpers.hotkey/hotkey","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","props/attributes","cljs.core/first","matches/before","event","matches","lib.plugins.features.bold/render-mark","props","G__38479","G__38480","lib.components.core/b"],"sourcesContent":["(ns lib.plugins.features.bold\n  (:require [reagent.core :as r]\n            [lib.components.core :as c]\n            [lib.plugins.helpers.auto-replace :refer [auto-replace]]\n            [lib.plugins.helpers.hotkey :refer [hotkey]]))\n\n(defn strip-auto-replace-triggers [matched-text]\n  (subs matched-text 2 (- (count matched-text) 1)))\n\n(defn transform [change event matches]\n  (if matches\n    (let [text (first matches.before)\n          clean-text (strip-auto-replace-triggers text)]\n      (.insertText change clean-text (clj->js [\"bold\"])))\n    (.toggleMark change \"bold\")))\n\n(defn render-mark [props]\n  (when (= \"bold\" props.mark.type)\n    (c/b\n     (js->clj props.attributes)\n     props.children)))\n\n(defn bold\n  \"Adds bold support to editor\"\n  ([options]\n   {:plugins\n    (clj->js\n     [(auto-replace\n       {:trigger #\"\\*\"\n        :before #\"(\\*\\*.+\\*)\"\n        :transform transform})\n      (auto-replace\n       {:trigger #\"\\_\"\n        :before #\"(\\_\\_.+\\*)\"\n        :transform transform})\n      (hotkey\n       {:key \"cmd+b\"\n        :transform transform})\n      {:renderMark render-mark}])})\n  ([]\n   (bold {})))\n"]}
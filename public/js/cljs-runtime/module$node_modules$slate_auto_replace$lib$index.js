shadow$provide.module$node_modules$slate_auto_replace$lib$index=function(global,process,require,module,exports,shadow$shims){function normalizeTrigger(trigger){switch((0,_typeOf2.default)(trigger)){case "function":return trigger;case "regexp":return function(event){return!(!event.key||!event.key.match(trigger))};case "string":return(0,_isHotkey2.default)(trigger)}}function normalizeMatcher(matcher){switch((0,_typeOf2.default)(matcher)){case "function":return matcher;case "array":return function(node){return matcher.includes(node)};
case "string":return function(node){return node==matcher}}}Object.defineProperty(exports,"__esModule",{value:!0});var _isHotkey2=(global=require("module$node_modules$is_hotkey$lib$index"))&&global.__esModule?global:{default:global},_typeOf2=(require=require("module$node_modules$type_of$index"))&&require.__esModule?require:{default:require};exports.default=function(){function replace(event,change,editor){var value=change.value;if(!value.isExpanded){var startBlock=value.startBlock;if(startBlock&&(startBlock=
startBlock.type,!onlyIn||onlyIn(startBlock))&&(!ignoreIn||!ignoreIn(startBlock))&&(startBlock=getMatches(value))){event.preventDefault();value=value.startOffset;var totalRemoved=0;getOffsets(startBlock,value).forEach(function(offset){change.moveOffsetsTo(offset.start,offset.end).delete();totalRemoved+=offset.total});value-=totalRemoved;change.moveOffsetsTo(value,value);return change.call(transform,event,startBlock,editor)}}}function getMatches(value){var startOffset=value.startOffset;value=value.startText.text;
var after=null,before=null;opts.after&&(after=value.slice(startOffset).match(opts.after));opts.before&&(before=value.slice(0,startOffset).match(opts.before));opts.before&&opts.after&&!before&&(after=null);opts.before&&opts.after&&!after&&(before=null);if(!before&&!after)return null;after&&(after[0]=after[0].replace(/\s+$/,""));before&&(before[0]=before[0].replace(/^\s+/,""));return{before:before,after:after}}function getOffsets(matches,start){var before=matches.before;matches=matches.after;var offsets=
[],totalRemoved=0;if(before){var match=before[0],startOffset=0,matchIndex=0;before.slice(1,before.length).forEach(function(current){void 0!==current&&(matchIndex=match.indexOf(current,matchIndex),startOffset=start-totalRemoved+matchIndex-match.length,offsets.push({start:startOffset,end:startOffset+current.length,total:current.length}),totalRemoved+=current.length,matchIndex+=current.length)})}if(matches){var _match=matches[0],_startOffset=0,_matchIndex=0;matches.slice(1,matches.length).forEach(function(current){void 0!==
current&&(_matchIndex=_match.indexOf(current,_matchIndex),_startOffset=start-totalRemoved+_matchIndex,offsets.push({start:_startOffset,end:_startOffset+current.length,total:0}),totalRemoved+=current.length,_matchIndex+=current.length)})}return offsets}var opts=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},transform=opts.transform,trigger=normalizeTrigger(opts.trigger),ignoreIn=void 0,onlyIn=void 0;opts.ignoreIn&&(ignoreIn=normalizeMatcher(opts.ignoreIn));opts.onlyIn&&(onlyIn=normalizeMatcher(opts.onlyIn));
if(!transform)throw Error("You must provide a `transform` option.");if(!trigger)throw Error("You must provide a `trigger` option.");return{onKeyDown:function(event,change,editor){if(trigger(event))return replace(event,change,editor)}}}}
//# sourceMappingURL=module$node_modules$slate_auto_replace$lib$index.js.map

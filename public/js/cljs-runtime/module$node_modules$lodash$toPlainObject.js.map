{
"version":3,
"file":"module$node_modules$lodash$toPlainObject.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IACtHC,WAAaJ,OAAA,CAAQ,wCAAR,CADyG,CAEtHK,OAASL,OAAA,CAAQ,mCAAR,CA8BbC,OAAAC,QAAA,CAJAI,QAAsB,CAACC,KAAD,CAAQ,CAC5B,MAAOH,WAAA,CAAWG,KAAX,CAAkBF,MAAA,CAAOE,KAAP,CAAlB,CADqB,CA5B4F;",
"sources":["node_modules/lodash/toPlainObject.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$toPlainObject\"] = function(global,process,require,module,exports,shadow$shims) {\nvar copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","copyObject","keysIn","toPlainObject","value"]
}

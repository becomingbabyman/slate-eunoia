{
"version":3,
"file":"module$node_modules$fbjs$lib$containsNode.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAmB3HC,QAASA,aAAY,CAACC,SAAD,CAAYC,SAAZ,CAAuB,CAC1C,MAAKD,UAAL,EAAmBC,SAAnB,CAEWD,SAAJ,GAAkBC,SAAlB,CACE,CAAA,CADF,CAEIC,UAAA,CAAWF,SAAX,CAAJ,CACE,CAAA,CADF,CAEIE,UAAA,CAAWD,SAAX,CAAJ,CACEF,YAAA,CAAaC,SAAb,CAAwBC,SAAAE,WAAxB,CADF,CAEI,UAAJ,EAAkBH,UAAlB,CACEA,SAAAI,SAAA,CAAmBH,SAAnB,CADF,CAEID,SAAAK,wBAAJ,CACE,CAAC,EAAEL,SAAAK,wBAAA,CAAkCJ,SAAlC,CAAF,CAAiD,EAAjD,CADH,CAGE,CAAA,CAbT,CACS,CAAA,CAFiC,CAP5C,IAAIC,WAAaP,OAAA,CAAQ,yCAAR,CAyBjBC;MAAAC,QAAA,CAAiBE,YArC0G;",
"sources":["node_modules/fbjs/lib/containsNode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$containsNode\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","containsNode","outerNode","innerNode","isTextNode","parentNode","contains","compareDocumentPosition"]
}

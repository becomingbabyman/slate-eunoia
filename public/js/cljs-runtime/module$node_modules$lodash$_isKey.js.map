{
"version":3,
"file":"module$node_modules$lodash$_isKey.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,kCAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAC/GC,QAAUJ,OAAA,CAAQ,oCAAR,CADqG,CAE/GK,SAAWL,OAAA,CAAQ,qCAAR,CAFoG,CAK/GM,aAAe,kDALgG,CAM/GC,cAAgB,OAuBpBN,OAAAC,QAAA,CAbAM,QAAc,CAACC,KAAD,CAAQC,MAAR,CAAgB,CAC5B,GAAIN,OAAA,CAAQK,KAAR,CAAJ,CACE,MAAO,CAAA,CAET,KAAIE,KAAO,MAAOF,MAClB,OAAY,QAAZ,EAAIE,IAAJ,EAAgC,QAAhC,EAAwBA,IAAxB,EAAoD,SAApD,EAA4CA,IAA5C,EACa,IADb,EACIF,KADJ,EACqBJ,QAAA,CAASI,KAAT,CADrB,CAES,CAAA,CAFT,CAIOF,aAAAK,KAAA,CAAmBH,KAAnB,CAJP;AAIoC,CAACH,YAAAM,KAAA,CAAkBH,KAAlB,CAJrC,EAKa,IALb,EAKGC,MALH,EAKqBD,KALrB,GAK8BI,OAAA,CAAOH,MAAP,CAVF,CAhBqF;",
"sources":["node_modules/lodash/_isKey.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_isKey\"] = function(global,process,require,module,exports,shadow$shims) {\nvar isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","isArray","isSymbol","reIsDeepProp","reIsPlainProp","isKey","value","object","type","test","Object"]
}

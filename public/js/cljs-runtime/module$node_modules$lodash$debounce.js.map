{
"version":3,
"file":"module$node_modules$lodash$debounce.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/lodash/debounce.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$debounce\"] = function(global,process,require,module,exports,shadow$shims) {\nvar isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","debounce","func","wait","options","invokeFunc","time","args","lastArgs","thisArg","lastThis","undefined","lastInvokeTime","result","apply","shouldInvoke","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","timerExpired","trailingEdge","setTimeout","timeWaiting","timerId","trailing","debounced","isInvoking","arguments","leading","TypeError","FUNC_ERROR_TEXT","cancel","clearTimeout","flush"]
}

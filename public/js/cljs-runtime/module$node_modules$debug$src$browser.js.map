{
"version":3,
"file":"module$node_modules$debug$src$browser.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/debug/src/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$debug$src$browser\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","load","r","storage","debug","e","env","DEBUG","log","console","Function","prototype","apply","call","arguments","formatArgs","args","useColors","namespace","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","removeItem","window","type","document","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","toLowerCase","parseInt","RegExp","$1","chrome","local","localStorage","colors","formatters","j","exports.formatters.j","v","JSON","stringify","err","message","enable"]
}

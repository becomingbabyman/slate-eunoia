{"version":3,"file":"lib.core.js","sources":["lib/core.cljs"],"mappings":";;;;;;;;;;AAUA,wBAAA,2CAAA,yDAAA,iBAAA,2DAAA,KAAA,yDAAA,tQAAKA;AAEL,uCAAA,2CAAA,8DAAA,2CAAA,wDAAA,mFAAA,2CAAA,yDAAA,QAAA,qDAAA,YAAA,wDAAA,mFAAA,2CAAA,yDAAA,OAAA,0DAAA,mFAAA,2CAAA,sDAAA,kEAAA,2CAAA,yDAAA,QAAA,qDAAA,oBAAA,2CAAA,yDAAA,QAAA,qDAAA,aAAA,wDAAA,mFAAA,2CAAA,yDAAA,OAAA,0DAAA,mFAAA,2CAAA,sDAAA,h2DAAKC;AAiBL,AAAKC,uBAAY,AAACC,gDAAO,AAACC,0BAAiBH;AAE3C,2BAAA,3BAAMI,8DAAiBC;AAAvB,AACE,OAACC,sBAAOL,qBAAYM;;AAEtB,AAAKC,mBAAQ,AAACC,qBACA,sDAAA,wqBAAA,9tBAACC,yIACC,AAACC,wEACF,AAAA,yFAAU,AAACC,kHACX,AAAA,yFAAU,AAACC,oEACX,AAAA,yFAAU,AAACC,+JACV,AAACC,kFACD,AAACC;AAEjB,AAAKC,kBACH,qBAAA,2CAAA,8DAAA,2CAAA,wDAAA,mFAAA,2CAAA,sDAAA,mFAAA,8DAAA,wEAAA,kDAAA,4BAAA,yDAAA,2CAAA,gEAAA,2CAAA,wDAAA,mFAAA,thCAACR;AAUH,yBAAA,zBAAMU;AAAN,AAAA,6GAAA,2CAAA,6EAAA,sDAAA,AAAAD,sCAAA,4EAAA,0EAAA,7XACGE,qHAAqBrB,4FACCE,iFACCO,2EACDS,+EACGb","names":["lib.core/editor-style","lib.core/sample-value-TODO:-rm","lib.core/slate-value","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","utils.slate/edn->slate","lib.core/on-slate-change","change","cljs.core/reset!","change/value","lib.core/plugins","cljs.core/clj->js","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","lib.plugins.backspace.backspace.cljs$core$IFn$_invoke$arity$0","lib.plugins.features.bold.bold.cljs$core$IFn$_invoke$arity$0","lib.plugins.features.italic.italic.cljs$core$IFn$_invoke$arity$0","lib.plugins.features.blockquote.blockquote.cljs$core$IFn$_invoke$arity$0","lib.plugins.collapse_on_escape.collapse_on_escape.cljs$core$IFn$_invoke$arity$0","lib.plugins.trailing_block.trailing_block.cljs$core$IFn$_invoke$arity$0","lib.core/schema","cljs.core/deref","lib.core/eunoia-editor","utils.slate/editor"],"sourcesContent":["(ns lib.core\n  (:require [reagent.core :as r]\n            [utils.slate :as slate]\n            [lib.plugins.features.blockquote :refer [blockquote]]\n            [lib.plugins.features.bold :refer [bold]]\n            [lib.plugins.features.italic :refer [italic]]\n            [lib.plugins.collapse-on-escape :refer [collapse-on-escape]]\n            [lib.plugins.trailing-block :refer [trailing-block]]\n            [lib.plugins.backspace :refer [backspace]]))\n\n(def editor-style {:border \"1px solid #ddd\" :padding 10 :margin 20})\n\n(def sample-value-TODO:-rm {:document\n                            {:nodes\n                             [{:object \"block\"\n                               :type \"paragraph\"\n                               :nodes\n                               [{:object \"text\"\n                                 :leaves\n                                 [{:text \"paragraph example block\"}]}]}\n                              {:object \"block\"\n                               :type \"paragraph\"}\n                              {:object \"block\"\n                               :type \"blockquote\"\n                               :nodes\n                               [{:object \"text\"\n                                 :leaves\n                                 [{:text \"blockquote example block\"}]}]}]}})\n\n(def slate-value (r/atom (slate/edn->slate sample-value-TODO:-rm)))\n\n(defn on-slate-change [change]\n  (reset! slate-value change.value))\n\n(def plugins (clj->js\n              (concat\n               [(backspace)]\n               (:plugins (bold))\n               (:plugins (italic))\n               (:plugins (blockquote))\n               [(collapse-on-escape)\n                (trailing-block)])))\n\n(def schema\n  (clj->js\n   {:document\n    {:nodes\n     [{:types\n       [:paragraph\n        :blockquote]\n       :min 1}]}\n    :blocks\n    {:blockquote {:marks [\"\"]}}}))\n\n(defn eunoia-editor []\n  [slate/editor {:style editor-style\n                 :value @slate-value\n                 :plugins plugins\n                 :schema schema\n                 :on-change on-slate-change}])\n"]}
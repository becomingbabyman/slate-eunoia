{
"version":3,
"file":"module$node_modules$lodash$_baseIsNative.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IACtHC,WAAaJ,OAAA,CAAQ,uCAAR,CADyG,CAEtHK,SAAWL,OAAA,CAAQ,sCAAR,CAF2G,CAGtHM,SAAWN,OAAA,CAAQ,qCAAR,CAH2G,CAItHO,SAAWP,OAAA,CAAQ,sCAAR,CAJ2G,CAatHQ,aAAe,6BAbuG,CA0BtHC,WAAaC,MAAA,CAAO,GAAP,CAVDC,QAAAC,UAIGC,SAOjBC,KAAA,CAVgBC,MAAAH,UAMGI,eAInB,CAAAC,QAAA,CAjBiBC,qBAiBjB;AAAwD,SAAxD,CAAAD,QAAA,CACS,wDADT,CACmE,OADnE,CADe,CAE+D,GAF/D,CAqBjBhB,OAAAC,QAAA,CARAiB,QAAqB,CAACC,KAAD,CAAQ,CAC3B,MAAI,CAACd,QAAA,CAASc,KAAT,CAAL,EAAwBf,QAAA,CAASe,KAAT,CAAxB,CACS,CAAA,CADT,CAIOC,CADOjB,UAAA,CAAWgB,KAAX,CAAAE,CAAoBb,UAApBa,CAAiCd,YACxCa,MAAA,CAAad,QAAA,CAASa,KAAT,CAAb,CALoB,CAvC6F;",
"sources":["node_modules/lodash/_baseIsNative.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseIsNative\"] = function(global,process,require,module,exports,shadow$shims) {\nvar isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","isFunction","isMasked","isObject","toSource","reIsHostCtor","reIsNative","RegExp","Function","prototype","toString","call","Object","hasOwnProperty","replace","reRegExpChar","baseIsNative","value","test","pattern"]
}

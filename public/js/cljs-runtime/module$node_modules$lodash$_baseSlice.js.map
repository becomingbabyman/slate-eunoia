{
"version":3,
"file":"module$node_modules$lodash$_baseSlice.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA+BvHF,MAAAC,QAAA,CArBAE,QAAkB,CAACC,KAAD,CAAQC,KAAR,CAAeC,GAAf,CAAoB,CAAA,IAChCC,MAAS,EADuB,CAEhCC,OAASJ,KAAAI,OAED,EAAZ,CAAIH,KAAJ,GACEA,KADF,CACU,CAACA,KAAD,CAASG,MAAT,CAAkB,CAAlB,CAAuBA,MAAvB,CAAgCH,KAD1C,CAGAC,IAAA,CAAMA,GAAA,CAAME,MAAN,CAAeA,MAAf,CAAwBF,GACpB,EAAV,CAAIA,GAAJ,GACEA,GADF,EACSE,MADT,CAGAA,OAAA,CAASH,KAAA,CAAQC,GAAR,CAAc,CAAd,CAAoBA,GAApB,CAA0BD,KAA1B,GAAqC,CAC9CA,MAAA,IAAW,CAGX,KADII,GACJ,CADaC,KAAA,CAAMF,MAAN,CACb,CAAO,EAAED,KAAT,CAAiBC,MAAjB,CAAA,CACEC,GAAA,CAAOF,KAAP,CAAA,CAAgBH,KAAA,CAAMG,KAAN,CAAcF,KAAd,CAElB,OAAOI,IAlB6B,CAViF;",
"sources":["node_modules/lodash/_baseSlice.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseSlice\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","baseSlice","array","start","end","index","length","result","Array"]
}

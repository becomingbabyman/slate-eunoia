{
"version":3,
"file":"module$node_modules$lodash$_cloneDataView.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAC3H,IAAIC,iBAAmBJ,OAAA,CAAQ,8CAAR,CAevBC,OAAAC,QAAA,CALAG,QAAsB,CAACC,QAAD,CAAWC,MAAX,CAAmB,CACnCC,MAAAA,CAASD,MAAA,CAASH,gBAAA,CAAiBE,QAAAE,OAAjB,CAAT,CAA6CF,QAAAE,OAC1D,OAAO,KAAIF,QAAAG,YAAJ,CAAyBD,MAAzB,CAAiCF,QAAAI,WAAjC,CAAsDJ,QAAAK,WAAtD,CAFgC,CAXkF;",
"sources":["node_modules/lodash/_cloneDataView.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_cloneDataView\"] = function(global,process,require,module,exports,shadow$shims) {\nvar cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","cloneArrayBuffer","cloneDataView","dataView","isDeep","buffer","constructor","byteOffset","byteLength"]
}

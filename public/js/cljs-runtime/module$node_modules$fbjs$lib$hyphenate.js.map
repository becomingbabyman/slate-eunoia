{
"version":3,
"file":"module$node_modules$fbjs$lib$hyphenate.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAYxH,IAAIC,kBAAoB,UAkBxBH,OAAAC,QAAA,CAJAG,QAAkB,CAACC,MAAD,CAAS,CACzB,MAAOA,OAAAC,QAAA,CAAeH,iBAAf,CAAkC,KAAlC,CAAAI,YAAA,EADkB,CA1B6F;",
"sources":["node_modules/fbjs/lib/hyphenate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$hyphenate\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_uppercasePattern","hyphenate","string","replace","toLowerCase"]
}

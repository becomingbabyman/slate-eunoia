{
"version":3,
"file":"module$node_modules$lodash$isSymbol.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,oCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IACjHC,WAAaJ,OAAA,CAAQ,wCAAR,CADoG,CAEjHK,aAAeL,OAAA,CAAQ,yCAAR,CA2BnBC,OAAAC,QAAA,CALAI,QAAiB,CAACC,KAAD,CAAQ,CACvB,MAAuB,QAAvB,EAAO,MAAOA,MAAd,EACGF,YAAA,CAAaE,KAAb,CADH,EApBcC,iBAoBd,EAC0BJ,UAAA,CAAWG,KAAX,CAFH,CAxB4F;",
"sources":["node_modules/lodash/isSymbol.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$isSymbol\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","baseGetTag","isObjectLike","isSymbol","value","symbolTag"]
}

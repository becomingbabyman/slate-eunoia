{
"version":3,
"file":"module$node_modules$lodash$_isFlattenable.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACvHC,MAAAA,CAASJ,OAAA,CAAQ,oCAAR,CAD8G,KAEvHK,YAAcL,OAAA,CAAQ,wCAAR,CAFyG,CAGvHM,QAAUN,OAAA,CAAQ,oCAAR,CAH6G,CAMvHO,iBAAmBH,MAAA,CAASA,MAAAI,mBAAT,CAAqCC,IAAAA,EAc5DR,OAAAC,QAAA,CALAQ,QAAsB,CAACC,KAAD,CAAQ,CAC5B,MAAOL,QAAA,CAAQK,KAAR,CAAP,EAAyBN,WAAA,CAAYM,KAAZ,CAAzB,EACE,CAAC,EAAEJ,gBAAF,EAAsBI,KAAtB,EAA+BA,KAAA,CAAMJ,gBAAN,CAA/B,CAFyB,CAf6F;",
"sources":["node_modules/lodash/_isFlattenable.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_isFlattenable\"] = function(global,process,require,module,exports,shadow$shims) {\nvar Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","isFlattenable","value"]
}

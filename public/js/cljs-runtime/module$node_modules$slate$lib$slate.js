shadow$provide.module$node_modules$slate$lib$slate=function(global,process,require,module,exports,shadow$shims){function _interopDefault(ex){return ex&&"object"===typeof ex&&"default"in ex?ex["default"]:ex}function isType(type,any){return!(!any||!any[MODEL_TYPES[type]])}function resetGenerator(){n$jscomp$0=0;generate=function(){return""+n$jscomp$0++}}function memoize(object,properties){var _loop=function(property){var original=object[property];if(!original)throw Error('Object does not have a property named "'+
property+'".');object[property]=function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];if(!ENABLED)return original.apply(this,args);CACHE_KEY!==this.__cache_key&&(this.__cache_key=CACHE_KEY,this.__cache=new Map,this.__cache_no_args={});this.__cache||(this.__cache=new Map);this.__cache_no_args||(this.__cache_no_args={});_key=0!==args.length;var cachedValue=void 0;_len=void 0;if(_key){_len=[property].concat(args);a:{var map=this.__cache,_iteratorNormalCompletion2=
!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=_len[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0)if(map=map.get(_step2.value),void 0===map){cachedValue=void 0;break a}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{!_iteratorNormalCompletion2&&_iterator2.return&&_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2;}}cachedValue=map.get(LEAF)}}else cachedValue=this.__cache_no_args[property];
if(void 0!==cachedValue)return cachedValue===UNDEFINED?void 0:cachedValue;args=original.apply(this,args);_iterator2=void 0===args?UNDEFINED:args;if(_key){_step2=_key=this.__cache;cachedValue=void 0;map=!0;_iteratorNormalCompletion2=!1;_didIteratorError2=void 0;try{for(var _iterator3=_len[Symbol.iterator](),_step3;!(map=(_step3=_iterator3.next()).done);map=!0){var key=_step3.value;cachedValue=_step2.get(key);void 0===cachedValue&&(cachedValue=new Map,_step2.set(key,cachedValue));_step2=cachedValue}}catch(err){_iteratorNormalCompletion2=
!0,_didIteratorError2=err}finally{try{!map&&_iterator3.return&&_iterator3.return()}finally{if(_iteratorNormalCompletion2)throw _didIteratorError2;}}cachedValue.set(LEAF,_iterator2);this.__cache=_key}else this.__cache_no_args[property]=_iterator2;return args}},_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=properties[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0)_loop(_step.value)}catch(err){_didIteratorError=
!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError;}}}function resetMemoization(){CACHE_KEY++;CACHE_KEY>=Number.MAX_SAFE_INTEGER&&(CACHE_KEY=0)}function useMemoization(enabled){ENABLED=enabled}function compare(a,b){if(a.size!==b.size)return null;for(var i=0;i<a.size;i++){var av=a.get(i),bv=b.get(i);if(av<bv)return-1;if(av>bv)return 1}return 0}function create$1(attrs){if(null==attrs)return null;if(immutable.List.isList(attrs))return attrs;
if(Array.isArray(attrs))return immutable.List(attrs);throw Error("Paths can only be created from arrays or lists, but you passed: "+attrs);}function crop(a,b){var size=2<arguments.length&&void 0!==arguments[2]?arguments[2]:min(a,b),ca=a.slice(0,size);size=b.slice(0,size);return[ca,size]}function increment(path){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,index=2<arguments.length&&void 0!==arguments[2]?arguments[2]:path.size-1,value=path.get(index);return path.set(index,value+n)}
function min(a,b){return Math.min(a.size,b.size)}function getFirstText(node){return"text"==node.object?node:node.getFirstText()}function getLastText(node){return"text"==node.object?node:node.getLastText()}function isSurrogate(code){return 55296<=code&&57343>=code}function isWord(char,remaining){if(SPACE.test(char))return!1;if(CHAMELEON.test(char)){var next=remaining.charAt(0),length=getCharLength(next);next=remaining.slice(0,length);remaining=remaining.slice(length);if(isWord(next,remaining))return!0}return PUNCTUATION.test(char)?
!1:!0}function getCharLength(char){return isSurrogate(char.charCodeAt(0))?2:1}function getCharOffset(text){text=text.charAt(0);return getCharLength(text)}function getWordOffset(text){for(var length=0,i=0,started=!1,char;char=text.charAt(i);){var l=getCharLength(char);char=text.slice(i,i+l);var rest=text.slice(i+l);if(isWord(char,rest))started=!0,length+=l;else if(started)break;else length+=l;i+=l}return length}function defaultNormalize(change,error){switch(error.code){case slateSchemaViolations.CHILD_OBJECT_INVALID:case slateSchemaViolations.CHILD_TYPE_INVALID:case slateSchemaViolations.CHILD_UNKNOWN:case slateSchemaViolations.FIRST_CHILD_OBJECT_INVALID:case slateSchemaViolations.FIRST_CHILD_TYPE_INVALID:case slateSchemaViolations.LAST_CHILD_OBJECT_INVALID:case slateSchemaViolations.LAST_CHILD_TYPE_INVALID:var child$jscomp$0=
error.child;error=error.node;return"text"==child$jscomp$0.object&&"block"==error.object&&1==error.nodes.size?change.removeNodeByKey(error.key):change.removeNodeByKey(child$jscomp$0.key);case slateSchemaViolations.CHILD_REQUIRED:case slateSchemaViolations.NODE_TEXT_INVALID:case slateSchemaViolations.PARENT_OBJECT_INVALID:case slateSchemaViolations.PARENT_TYPE_INVALID:return error=error.node,"document"==error.object?error.nodes.forEach(function(child){return change.removeNodeByKey(child.key)}):change.removeNodeByKey(error.key);
case slateSchemaViolations.NODE_DATA_INVALID:return child$jscomp$0=error.node,error=error.key,void 0===child$jscomp$0.data.get(error)&&"document"!=child$jscomp$0.object?change.removeNodeByKey(child$jscomp$0.key):change.setNodeByKey(child$jscomp$0.key,{data:child$jscomp$0.data.delete(error)});case slateSchemaViolations.NODE_IS_VOID_INVALID:return error=error.node,change.setNodeByKey(error.key,{isVoid:!error.isVoid});case slateSchemaViolations.NODE_MARK_INVALID:var mark=error.mark;return error.node.getTexts().forEach(function(t){return change.removeMarkByKey(t.key,
0,t.text.length,mark)});default:return change.removeNodeByKey(error.node.key)}}function validateRules(node,rule,rules){var _options$every=(3<arguments.length&&void 0!==arguments[3]?arguments[3]:{}).every;_options$every=void 0===_options$every?!1:_options$every;if(Array.isArray(rule)){var array=rule.length?rule:[{}],first=void 0,_iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=array[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=
!0){var _error=validateRules(node,_step2.value,rules);first=first||_error;if(_options$every&&_error)return _error;if(!_options$every&&!_error)return}}catch(err$5){_didIteratorError2=!0,_iteratorError2=err$5}finally{try{!_iteratorNormalCompletion2&&_iterator2.return&&_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2;}}return first}rule.objects&&logger.warn("The `objects` schema validation rule was changed. Please use the new `match` syntax with `object`.");_iterator2=null==rule.object?
void 0:rule.object===node.object?void 0:fail(slateSchemaViolations.NODE_OBJECT_INVALID,{rule:rule,node:node});_iterator2||(rule.types&&logger.warn("The `types` schema validation rule was changed. Please use the new `match` syntax with `type`."),_iterator2=null==rule.type?void 0:rule.type===node.type?void 0:fail(slateSchemaViolations.NODE_TYPE_INVALID,{rule:rule,node:node}));_iterator2||(_iterator2=null==rule.isVoid?void 0:rule.isVoid===node.isVoid?void 0:fail(slateSchemaViolations.NODE_IS_VOID_INVALID,
{rule:rule,node:node}));if(!_iterator2)a:{if(null!=rule.data&&null!=node.data)for(array in rule.data)if(_iterator2=rule.data[array],_step2=node.data&&node.data.get(array),"function"===typeof _iterator2?!_iterator2(_step2):_iterator2!==_step2){_iterator2=fail(slateSchemaViolations.NODE_DATA_INVALID,{rule:rule,node:node,key:array,value:_step2});break a}_iterator2=void 0}(array=_iterator2||validateMarks(node,rule))||(null==rule.text?array=void 0:(array=node.text,array=rule.text.test(array)?void 0:fail(slateSchemaViolations.NODE_TEXT_INVALID,
{rule:rule,node:node,text:array})));if(!array)a:{if(null!=rule.first&&(array=node.nodes.first())&&(_iterator2=validateRules(array,rule.first))){_iterator2.rule=rule;_iterator2.node=node;_iterator2.child=array;_iterator2.code=_iterator2.code.replace("node_","first_child_");array=_iterator2;break a}array=void 0}if(!array)a:{if(null!=rule.last&&(array=node.nodes.last())&&(_iterator2=validateRules(array,rule.last))){_iterator2.rule=rule;_iterator2.node=node;_iterator2.child=array;_iterator2.code=_iterator2.code.replace("node_",
"last_child_");array=_iterator2;break a}array=void 0}return array||validateNodes(node,rule,rules)}function validateMarks(node,rule){if(null!=rule.marks){var marks=node.getMarks().toArray(),_loop=function(mark){return rule.marks.some(function(def){return def.type===mark.type})?"continue":{v:fail(slateSchemaViolations.NODE_MARK_INVALID,{rule:rule,node:node,mark:mark})}},_iteratorNormalCompletion3=!0,_didIteratorError3=!1,_iteratorError3=void 0;try{for(var _iterator3=marks[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=
(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=!0){var _ret=_loop(_step3.value);switch(_ret){case "continue":continue;default:if("object"===("undefined"===typeof _ret?"undefined":_typeof(_ret)))return _ret.v}}}catch(err$6){_didIteratorError3=!0,_iteratorError3=err$6}finally{try{!_iteratorNormalCompletion3&&_iterator3.return&&_iterator3.return()}finally{if(_didIteratorError3)throw _iteratorError3;}}}}function validateNodes(node,rule){function nextDef(){offset=null==offset?null:0;min=(def=
defs.shift())&&def.min;max=def&&def.max;return!!def}function nextChild(){index=null==index?0:index+1;offset=null==offset?0:offset+1;previous=child;child=children[index];next=children[index+1];null!=max&&offset==max&&nextDef();return!!child}var rules=2<arguments.length&&void 0!==arguments[2]?arguments[2]:[];if(null!=node.nodes){var children=node.nodes.toArray(),defs=null!=rule.nodes?rule.nodes.slice():[],offset=void 0,min=void 0,index=void 0,def=void 0,max=void 0,child=void 0,previous=void 0,next=
void 0;for(null!=rule.nodes&&nextDef();nextChild();){var err=validateParent(node,child,rules)||validatePrevious(node,child,previous,index,rules)||validateNext(node,child,next,index,rules);if(err)return err;if(null!=rule.nodes){if(!def)return fail(slateSchemaViolations.CHILD_UNKNOWN,{rule:rule,node:node,child:child,index:index});def&&(def.objects&&logger.warn("The `objects` schema validation rule was changed. Please use the new `match` syntax with `object`."),def.types&&logger.warn("The `types` schema validation rule was changed. Please use the new `match` syntax with `type`."));
if(def.match)if((err=validateRules(child,def.match))&&offset>=min&&nextDef())--offset,--index;else if(err)return err.rule=rule,err.node=node,err.child=child,err.index=index,err.code=err.code.replace("node_","child_"),err}}if(null!=rule.nodes)for(;null!=min;){if(offset<min)return fail(slateSchemaViolations.CHILD_REQUIRED,{rule:rule,node:node,index:index});nextDef()}}}function validateParent(node,child,rules){var _iteratorNormalCompletion4=!0,_didIteratorError4=!1,_iteratorError4=void 0;try{for(var _iterator4=
rules[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=!0){var rule=_step4.value;if(null!=rule.parent&&!validateRules(child,rule.match)){var error=validateRules(node,rule.parent);if(error)return error.rule=rule,error.parent=node,error.node=child,error.code=error.code.replace("node_","parent_"),error}}}catch(err$7){_didIteratorError4=!0,_iteratorError4=err$7}finally{try{!_iteratorNormalCompletion4&&_iterator4.return&&_iterator4.return()}finally{if(_didIteratorError4)throw _iteratorError4;
}}}function validatePrevious(node,child,previous,index,rules){if(previous){var _iteratorNormalCompletion5=!0,_didIteratorError5=!1,_iteratorError5=void 0;try{for(var _iterator5=rules[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=!0){var rule=_step5.value;if(null!=rule.previous&&!validateRules(child,rule.match)){var error=validateRules(previous,rule.previous);if(error)return error.rule=rule,error.node=node,error.child=child,error.index=
index,error.previous=previous,error.code=error.code.replace("node_","previous_sibling_"),error}}}catch(err$8){_didIteratorError5=!0,_iteratorError5=err$8}finally{try{!_iteratorNormalCompletion5&&_iterator5.return&&_iterator5.return()}finally{if(_didIteratorError5)throw _iteratorError5;}}}}function validateNext(node,child,next,index,rules){if(next){var _iteratorNormalCompletion6=!0,_didIteratorError6=!1,_iteratorError6=void 0;try{for(var _iterator6=rules[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=
(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=!0){var rule=_step6.value;if(null!=rule.next&&!validateRules(child,rule.match)){var error=validateRules(next,rule.next);if(error)return error.rule=rule,error.node=node,error.child=child,error.index=index,error.next=next,error.code=error.code.replace("node_","next_sibling_"),error}}}catch(err$9){_didIteratorError6=!0,_iteratorError6=err$9}finally{try{!_iteratorNormalCompletion6&&_iterator6.return&&_iterator6.return()}finally{if(_didIteratorError6)throw _iteratorError6;
}}}}function fail(code,attrs){return _extends({code:code},attrs)}function invertOperation(op){op=Operation.create(op);var type=op.type;debug$2(type,op);switch(type){case "insert_node":return op.set("type","remove_node");case "remove_node":return op.set("type","insert_node");case "move_node":var _op2=op;type=_op2.newPath;_op2=_op2.path;var inversePath=type,inverseNewPath=_op2,pathLast=_op2.size-1,newPathLast=type.size-1;_op2.size<inversePath.size&&_op2.slice(0,pathLast).every(function(e,i){return e==
inversePath.get(i)})&&_op2.last()<inversePath.get(pathLast)&&(inversePath=inversePath.slice(0,pathLast).concat(inversePath.get(pathLast)-1).concat(inversePath.slice(pathLast+1,inversePath.size)));type.size<inverseNewPath.size&&type.slice(0,newPathLast).every(function(e,i){return e==inverseNewPath.get(i)})&&type.last()<=inverseNewPath.get(newPathLast)&&(inverseNewPath=inverseNewPath.slice(0,newPathLast).concat(inverseNewPath.get(newPathLast)+1).concat(inverseNewPath.slice(newPathLast+1,inverseNewPath.size)));
return op.set("path",inversePath).set("newPath",inverseNewPath);case "merge_node":return type=PathUtils.decrement(op.path),op.set("type","split_node").set("path",type);case "split_node":return type=PathUtils.increment(op.path),op.set("type","merge_node").set("path",type);case "set_node":return _op2=op,type=_op2.properties,pathLast=_op2.node,_op2=pathLast.merge(type),type=pick(pathLast,Object.keys(type)),op.set("node",_op2).set("properties",type);case "insert_text":return op.set("type","remove_text");
case "remove_text":return op.set("type","insert_text");case "add_mark":return op.set("type","remove_mark");case "remove_mark":return op.set("type","add_mark");case "set_mark":return _op2=op,type=_op2.properties,pathLast=_op2.mark,_op2=pathLast.merge(type),type=pick(pathLast,Object.keys(type)),op.set("mark",_op2).set("properties",type);case "set_selection":return _op2=op,type=_op2.properties,pathLast=_op2.selection,_op2=pathLast.merge(type),type=pick(pathLast,Object.keys(type)),op.set("selection",
_op2).set("properties",type);case "set_value":return _op2=op,type=_op2.properties,pathLast=_op2.value,_op2=pathLast.merge(type),type=pick(pathLast,Object.keys(type)),op.set("value",_op2).set("properties",type);default:throw Error('Unknown operation type: "'+type+'".');}}function normalizeNodeAndChildren(change,node,schema){if("text"==node.object)normalizeNode(change,node,schema);else{for(var child=node.getFirstInvalidDescendant(schema),path=change.value.document.getPath(node.key);node&&child;)normalizeNodeAndChildren(change,
child,schema),(node=change.value.document.refindNode(path,node.key))?(path=change.value.document.refindPath(path,node.key),child=node.getFirstInvalidDescendant(schema)):(path=[],child=null);node&&normalizeNode(change,node,schema)}}function normalizeNode(change,node,schema){function iterate(c,n){var normalize=n.normalize(schema);if(normalize){var path=c.value.document.getPath(n.key);normalize(c);if(n=c.value.document.refindNode(path,n.key)){c.value.document.refindPath(path,n.key);iterations++;if(iterations>
max)throw Error("A schema rule could not be normalized after sufficient iterations. This is usually due to a `rule.normalize` or `plugin.normalizeNode` function of a schema being incorrectly written, causing an infinite loop.");iterate(c,n)}}}var max=schema.stack.plugins.length+schema.rules.length+1,iterations=0;iterate(change,node)}function applyOperation(value,op){op=Operation.create(op);var type=op.type;debug$3(type,op);switch(type){case "add_mark":return value.addMark(op.path,op.offset,op.length,
op.mark);case "insert_node":return value.insertNode(op.path,op.node);case "insert_text":return value.insertText(op.path,op.offset,op.text,op.marks);case "merge_node":return value.mergeNode(op.path);case "move_node":return value.moveNode(op.path,op.newPath);case "remove_mark":return value.removeMark(op.path,op.offset,op.length,op.mark);case "remove_node":return value.removeNode(op.path);case "remove_text":return value.removeText(op.path,op.offset,op.text);case "set_mark":return value.setMark(op.path,
op.offset,op.length,op.mark,op.properties);case "set_node":return value.setNode(op.path,op.properties);case "set_selection":return value.setSelection(op.properties);case "set_value":return value.merge(op.properties);case "split_node":return value.splitNode(op.path,op.position,op.properties);default:throw Error('Unknown operation type: "'+type+'".');}}function setKeyGenerator(fn){logger.deprecate("0.35.0","The `setKeyGenerator()` util is deprecrated. Use the `KeyUtils.setGenerator()` helper instead.");
return KeyUtils.setGenerator(fn)}function resetKeyGenerator(){logger.deprecate("0.35.0","The `resetKeyGenerator()` util is deprecrated. Use the `KeyUtils.resetGenerator()` helper instead.");return KeyUtils.resetGenerator()}Object.defineProperty(exports,"__esModule",{value:!0});var isPlainObject=_interopDefault(require("module$node_modules$is_plain_object$index")),logger=_interopDefault(require("module$node_modules$slate_dev_logger$lib$slate_dev_logger")),immutable=require("module$node_modules$immutable$dist$immutable"),
direction=_interopDefault(require("module$node_modules$direction$index")),esrever=require("module$node_modules$esrever$esrever"),Debug=_interopDefault(require("module$node_modules$debug$src$browser")),isEqual=_interopDefault(require("module$node_modules$lodash$isEqual")),slateSchemaViolations=require("module$node_modules$slate_schema_violations$lib$slate_schema_violations"),pick=_interopDefault(require("module$node_modules$lodash$pick")),omit=_interopDefault(require("module$node_modules$lodash$omit")),
isEmpty=_interopDefault(require("module$node_modules$is_empty$lib$index")),MODEL_TYPES={BLOCK:"@@__SLATE_BLOCK__@@",CHANGE:"@@__SLATE_CHANGE__@@",CHARACTER:"@@__SLATE_CHARACTER__@@",DOCUMENT:"@@__SLATE_DOCUMENT__@@",HISTORY:"@@__SLATE_HISTORY__@@",INLINE:"@@__SLATE_INLINE__@@",LEAF:"@@__SLATE_LEAF__@@",MARK:"@@__SLATE_MARK__@@",OPERATION:"@@__SLATE_OPERATION__@@",RANGE:"@@__SLATE_RANGE__@@",SCHEMA:"@@__SLATE_SCHEMA__@@",STACK:"@@__SLATE_STACK__@@",TEXT:"@@__SLATE_TEXT__@@",VALUE:"@@__SLATE_VALUE__@@"},
n$jscomp$0=void 0,generate=void 0;resetGenerator();var KeyUtils={create:function(key){if(null==key)return generate();if("string"===typeof key)return key;throw Error("Keys must be strings, but you passed: "+key);},setGenerator:function(func){generate=func},resetGenerator:resetGenerator},_typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"===typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":
typeof obj},classCallCheck=function(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function");},createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1;descriptor.configurable=!0;"value"in descriptor&&(descriptor.writable=!0);Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){protoProps&&
defineProperties(Constructor.prototype,protoProps);staticProps&&defineProperties(Constructor,staticProps);return Constructor}}(),defineProperty=function(obj,key,value){key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value;return obj},_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},
inherits=function(subClass,superClass){if("function"!==typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}});superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)},possibleConstructorReturn=function(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
return!call||"object"!==typeof call&&"function"!==typeof call?self:call},slicedToArray=function(){return function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr)){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&_i["return"])_i["return"]()}finally{if(_d)throw _e;}}return _arr}throw new TypeError("Invalid attempt to destructure non-iterable instance");
}}(),toConsumableArray=function(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)},DEFAULTS={data:new immutable.Map,isVoid:!1,key:void 0,nodes:new immutable.List,type:void 0},Block=function(_Record){function Block(){classCallCheck(this,Block);return possibleConstructorReturn(this,(Block.__proto__||Object.getPrototypeOf(Block)).apply(this,arguments))}inherits(Block,_Record);createClass(Block,[{key:"toJSON",value:function(){var options=
0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},object={object:this.object,type:this.type,isVoid:this.isVoid,data:this.data.toJSON(),nodes:this.nodes.toArray().map(function(n){return n.toJSON(options)})};options.preserveKeys&&(object.key=this.key);return object}},{key:"toJS",value:function(options){return this.toJSON(options)}},{key:"object",get:function(){return"block"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");
return this.object}},{key:"isEmpty",get:function(){return!this.isVoid&&!this.nodes.some(function(child){return!child.isEmpty})}},{key:"text",get:function(){return this.getText()}}],[{key:"create",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Block.isBlock(attrs))return attrs;"string"==typeof attrs&&(attrs={type:attrs});if(isPlainObject(attrs))return Block.fromJSON(attrs);throw Error("`Block.create` only accepts objects, strings or blocks, but you passed it: "+
attrs);}},{key:"createList",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];if(immutable.List.isList(attrs)||Array.isArray(attrs))return new immutable.List(attrs.map(Block.create));throw Error("`Block.createList` only accepts arrays or lists, but you passed it: "+attrs);}},{key:"fromJSON",value:function(object){if(Block.isBlock(object))return object;var _object$data=object.data;_object$data=void 0===_object$data?{}:_object$data;var _object$isVoid=object.isVoid;
_object$isVoid=void 0===_object$isVoid?!1:_object$isVoid;var _object$key=object.key;_object$key=void 0===_object$key?KeyUtils.create():_object$key;var _object$nodes=object.nodes;_object$nodes=void 0===_object$nodes?[]:_object$nodes;object=object.type;if("string"!=typeof object)throw Error("`Block.fromJSON` requires a `type` string.");return new Block({key:_object$key,type:object,isVoid:!!_object$isVoid,data:immutable.Map(_object$data),nodes:Block.createChildren(_object$nodes)})}},{key:"isBlockList",
value:function(any){return immutable.List.isList(any)&&any.every(function(item){return Block.isBlock(item)})}}]);return Block}(immutable.Record(DEFAULTS));Block.fromJS=Block.fromJSON;Block.isBlock=isType.bind(null,"BLOCK");Block.prototype[MODEL_TYPES.BLOCK]=!0;var DEFAULTS$1={data:new immutable.Map,isVoid:!1,key:void 0,nodes:new immutable.List,type:void 0},Inline=function(_Record){function Inline(){classCallCheck(this,Inline);return possibleConstructorReturn(this,(Inline.__proto__||Object.getPrototypeOf(Inline)).apply(this,
arguments))}inherits(Inline,_Record);createClass(Inline,[{key:"toJSON",value:function(){var options=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},object={object:this.object,type:this.type,isVoid:this.isVoid,data:this.data.toJSON(),nodes:this.nodes.toArray().map(function(n){return n.toJSON(options)})};options.preserveKeys&&(object.key=this.key);return object}},{key:"toJS",value:function(options){return this.toJSON(options)}},{key:"object",get:function(){return"inline"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0",
"The `kind` property of Slate objects has been renamed to `object`.");return this.object}},{key:"isEmpty",get:function(){return!this.isVoid&&!this.nodes.some(function(child){return!child.isEmpty})}},{key:"text",get:function(){return this.getText()}}],[{key:"create",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Inline.isInline(attrs))return attrs;"string"==typeof attrs&&(attrs={type:attrs});if(isPlainObject(attrs))return Inline.fromJSON(attrs);throw Error("`Inline.create` only accepts objects, strings or inlines, but you passed it: "+
attrs);}},{key:"createList",value:function(){var elements=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];if(immutable.List.isList(elements)||Array.isArray(elements))return new immutable.List(elements.map(Inline.create));throw Error("`Inline.createList` only accepts arrays or lists, but you passed it: "+elements);}},{key:"fromJSON",value:function(object){if(Inline.isInline(object))return object;var _object$data=object.data;_object$data=void 0===_object$data?{}:_object$data;var _object$isVoid=
object.isVoid;_object$isVoid=void 0===_object$isVoid?!1:_object$isVoid;var _object$key=object.key;_object$key=void 0===_object$key?KeyUtils.create():_object$key;var _object$nodes=object.nodes;_object$nodes=void 0===_object$nodes?[]:_object$nodes;object=object.type;if("string"!=typeof object)throw Error("`Inline.fromJS` requires a `type` string.");return new Inline({key:_object$key,type:object,isVoid:!!_object$isVoid,data:new immutable.Map(_object$data),nodes:Inline.createChildren(_object$nodes)})}},
{key:"isInlineList",value:function(any){return immutable.List.isList(any)&&any.every(function(item){return Inline.isInline(item)})}}]);return Inline}(immutable.Record(DEFAULTS$1));Inline.fromJS=Inline.fromJSON;Inline.isInline=isType.bind(null,"INLINE");Inline.prototype[MODEL_TYPES.INLINE]=!0;var Data=function(){function Data(){classCallCheck(this,Data)}createClass(Data,null,[{key:"create",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(immutable.Map.isMap(attrs))return attrs;
if(isPlainObject(attrs))return Data.fromJSON(attrs);throw Error("`Data.create` only accepts objects or maps, but you passed it: "+attrs);}},{key:"fromJSON",value:function(object){return new immutable.Map(object)}}]);return Data}();Data.fromJS=Data.fromJSON;var ENABLED=!0,CACHE_KEY=0,LEAF={},UNDEFINED={},DEFAULTS$2={data:new immutable.Map,type:void 0},Mark=function(_Record){function Mark(){classCallCheck(this,Mark);return possibleConstructorReturn(this,(Mark.__proto__||Object.getPrototypeOf(Mark)).apply(this,
arguments))}inherits(Mark,_Record);createClass(Mark,[{key:"getComponent",value:function(schema){return schema.__getComponent(this)}},{key:"toJSON",value:function(){return{object:this.object,type:this.type,data:this.data.toJSON()}}},{key:"toJS",value:function(){return this.toJSON()}},{key:"object",get:function(){return"mark"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}}],[{key:"create",value:function(){var attrs=
0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Mark.isMark(attrs))return attrs;"string"==typeof attrs&&(attrs={type:attrs});if(isPlainObject(attrs))return Mark.fromJSON(attrs);throw Error("`Mark.create` only accepts objects, strings or marks, but you passed it: "+attrs);}},{key:"createSet",value:function(elements){if(immutable.Set.isSet(elements)||Array.isArray(elements))return new immutable.Set(elements.map(Mark.create));if(null==elements)return immutable.Set();throw Error("`Mark.createSet` only accepts sets, arrays or null, but you passed it: "+
elements);}},{key:"createProperties",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Mark.isMark(attrs))return{data:attrs.data,type:attrs.type};if("string"==typeof attrs)return{type:attrs};if(isPlainObject(attrs)){var props={};"type"in attrs&&(props.type=attrs.type);"data"in attrs&&(props.data=Data.create(attrs.data));return props}throw Error("`Mark.createProperties` only accepts objects, strings or marks, but you passed it: "+attrs);}},{key:"fromJSON",value:function(object){var _object$data=
object.data;_object$data=void 0===_object$data?{}:_object$data;object=object.type;if("string"!=typeof object)throw Error("`Mark.fromJS` requires a `type` string.");return new Mark({type:object,data:new immutable.Map(_object$data)})}},{key:"isMarkSet",value:function(any){return immutable.Set.isSet(any)&&any.every(function(item){return Mark.isMark(item)})}}]);return Mark}(immutable.Record(DEFAULTS$2));Mark.fromJS=Mark.fromJSON;Mark.isMark=isType.bind(null,"MARK");Mark.prototype[MODEL_TYPES.MARK]=!0;
memoize(Mark.prototype,["getComponent"]);var Changes={};"deleteBackward deleteCharBackward deleteLineBackward deleteWordBackward deleteForward deleteCharForward deleteWordForward deleteLineForward setBlocks setInlines splitInline unwrapBlock unwrapInline wrapBlock wrapInline".split(" ").forEach(function(method){Changes[method]=function(change){for(var _len=arguments.length,args=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];change[method+"AtRange"].apply(change,[change.value.selection].concat(args));
method.match(/Backward$/)?change.collapseToStart():method.match(/Forward$/)&&change.collapseToEnd()}});Changes.setBlock=function(){logger.deprecate("slate@0.33.0","The `setBlock` method of Slate changes has been renamed to `setBlocks`.");Changes.setBlocks.apply(Changes,arguments)};Changes.setInline=function(){logger.deprecate("slate@0.33.0","The `setInline` method of Slate changes has been renamed to `setInlines`.");Changes.setInlines.apply(Changes,arguments)};Changes.addMark=function(change,mark){mark=
Mark.create(mark);var value=change.value,document=value.document;value=value.selection;value.isExpanded?change.addMarkAtRange(value,mark):value.marks?(mark=value.marks.add(mark),value=value.set("marks",mark),change.select(value)):(mark=document.getActiveMarksAtRange(value).add(mark),value=value.set("marks",mark),change.select(value))};Changes.addMarks=function(change,marks){marks.forEach(function(mark){return change.addMark(mark)})};Changes.delete=function(change){change.deleteAtRange(change.value.selection);
change.collapseToStart()};Changes.insertBlock=function(change,block){block=Block.create(block);change.insertBlockAtRange(change.value.selection,block);(block=change.value.document.getNode(block.key))&&change.collapseToEndOf(block)};Changes.insertFragment=function(change,fragment){if(fragment.nodes.size){var value=change.value,_value=value,document=_value.document;_value=_value.selection;var _value2=value,startText=_value2.startText,endText=_value2.endText,startInline=_value2.startInline;_value2=fragment.getLastText();
var lastInline=fragment.getClosestInline(_value2.key);value=fragment.nodes.first();var lastChild=fragment.nodes.last(),keys=document.getTexts().map(function(text){return text.key});startText=!startInline||_value.hasEdgeAtStartOf(startText)||_value.hasEdgeAtEndOf(endText);endText=value.hasBlockChildren()||lastChild.hasBlockChildren();change.insertFragmentAtRange(_value,fragment);value=change.value;document=value.document;fragment=document.getTexts().filter(function(n){return!keys.includes(n.key)});
(fragment=startText?fragment.last():fragment.takeLast(2).first())&&(lastInline||endText)?change.select(_value.collapseToEndOf(fragment)):fragment?change.select(_value.collapseToStartOf(fragment).move(_value2.text.length)):change.select(_value.collapseToStart().move(_value2.text.length))}};Changes.insertInline=function(change,inline){inline=Inline.create(inline);change.insertInlineAtRange(change.value.selection,inline);(inline=change.value.document.getNode(inline.key))&&change.collapseToEndOf(inline)};
Changes.insertText=function(change,text,marks){var value=change.value,document=value.document;value=value.selection;marks=marks||value.marks||document.getInsertMarksAtRange(value);change.insertTextAtRange(value,text,marks);value.marks&&document!=change.value.document&&change.select({marks:null})};Changes.splitBlock=function(change){var depth=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,value=change.value,selection=value.selection;value=value.document;value=selection.marks||value.getInsertMarksAtRange(selection);
change.splitBlockAtRange(selection,depth).collapseToEnd();value&&0!==value.size&&change.select({marks:value})};Changes.removeMark=function(change,mark){mark=Mark.create(mark);var value=change.value,document=value.document;value=value.selection;value.isExpanded?change.removeMarkAtRange(value,mark):value.marks?(mark=value.marks.remove(mark),value=value.set("marks",mark),change.select(value)):(mark=document.getActiveMarksAtRange(value).remove(mark),value=value.set("marks",mark),change.select(value))};
Changes.replaceMark=function(change,oldMark,newMark){change.removeMark(oldMark);change.addMark(newMark)};Changes.toggleMark=function(change,mark){mark=Mark.create(mark);change.value.activeMarks.has(mark)?change.removeMark(mark):change.addMark(mark)};Changes.wrapText=function(change,prefix){var suffix=2<arguments.length&&void 0!==arguments[2]?arguments[2]:prefix,selection=change.value.selection;change.wrapTextAtRange(selection,prefix,suffix);selection.isCollapsed&&change.moveStart(0-prefix.length);
change.moveEnd(0-suffix.length);selection.isForward!=change.value.selection.isForward&&change.flip()};var DEFAULTS$3={data:new immutable.Map,key:void 0,nodes:new immutable.List},Document$jscomp$0=function(_Record){function Document(){classCallCheck(this,Document);return possibleConstructorReturn(this,(Document.__proto__||Object.getPrototypeOf(Document)).apply(this,arguments))}inherits(Document,_Record);createClass(Document,[{key:"toJSON",value:function(){var options=0<arguments.length&&void 0!==arguments[0]?
arguments[0]:{},object={object:this.object,data:this.data.toJSON(),nodes:this.nodes.toArray().map(function(n){return n.toJSON(options)})};options.preserveKeys&&(object.key=this.key);return object}},{key:"toJS",value:function(options){return this.toJSON(options)}},{key:"object",get:function(){return"document"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}},{key:"isEmpty",get:function(){return!this.nodes.some(function(child){return!child.isEmpty})}},
{key:"text",get:function(){return this.getText()}}],[{key:"create",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Document.isDocument(attrs))return attrs;if(immutable.List.isList(attrs)||Array.isArray(attrs))attrs={nodes:attrs};if(isPlainObject(attrs))return Document.fromJSON(attrs);throw Error("`Document.create` only accepts objects, arrays, lists or documents, but you passed it: "+attrs);}},{key:"fromJSON",value:function(object){if(Document.isDocument(object))return object;
var _object$data=object.data;_object$data=void 0===_object$data?{}:_object$data;var _object$key=object.key;_object$key=void 0===_object$key?KeyUtils.create():_object$key;object=object.nodes;object=void 0===object?[]:object;return new Document({key:_object$key,data:new immutable.Map(_object$data),nodes:Document.createChildren(object)})}}]);return Document}(immutable.Record(DEFAULTS$3));Document$jscomp$0.fromJS=Document$jscomp$0.fromJSON;Document$jscomp$0.isDocument=isType.bind(null,"DOCUMENT");Document$jscomp$0.prototype[MODEL_TYPES.DOCUMENT]=
!0;var PathUtils={compare:compare,create:create$1,crop:crop,decrement:function(path){return increment(path,0-(1<arguments.length&&void 0!==arguments[1]?arguments[1]:1),2<arguments.length&&void 0!==arguments[2]?arguments[2]:path.size-1)},increment:increment,isAbove:function(path,target){var _crop=crop(path,target),_crop2=slicedToArray(_crop,2);_crop=_crop2[0];_crop2=_crop2[1];return path.size<target.size&&0===compare(_crop,_crop2)},isAfter:function(path,target){path=crop(path,target);path=slicedToArray(path,
2);return 1===compare(path[0],path[1])},isBefore:function(path,target){path=crop(path,target);path=slicedToArray(path,2);return-1===compare(path[0],path[1])},lift:function(path){return path.slice(0,-1)},max:function(a,b){return Math.max(a.size,b.size)},min:min,relate:function(a,b){for(var array=[],i=0;i<a.size&&i<b.size;i++){var av=a.get(i),bv=b.get(i);if(av!==bv)break;array.push(av)}return create$1(array)}},Range$jscomp$0=function(_Record){function Range(){classCallCheck(this,Range);return possibleConstructorReturn(this,
(Range.__proto__||Object.getPrototypeOf(Range)).apply(this,arguments))}inherits(Range,_Record);createClass(Range,[{key:"hasAnchorAtStartOf",value:function(node){if(0!=this.anchorOffset)return!1;node=getFirstText(node);return this.anchorKey==node.key}},{key:"hasAnchorAtEndOf",value:function(node){node=getLastText(node);return this.anchorKey==node.key&&this.anchorOffset==node.text.length}},{key:"hasAnchorBetween",value:function(node,start,end){return this.anchorOffset<=end&&start<=this.anchorOffset&&
this.hasAnchorIn(node)}},{key:"hasAnchorIn",value:function(node){return"text"==node.object?node.key==this.anchorKey:null!=this.anchorKey&&node.hasDescendant(this.anchorKey)}},{key:"hasFocusAtEndOf",value:function(node){node=getLastText(node);return this.focusKey==node.key&&this.focusOffset==node.text.length}},{key:"hasFocusAtStartOf",value:function(node){if(0!=this.focusOffset)return!1;node=getFirstText(node);return this.focusKey==node.key}},{key:"hasFocusBetween",value:function(node,start,end){return start<=
this.focusOffset&&this.focusOffset<=end&&this.hasFocusIn(node)}},{key:"hasFocusIn",value:function(node){return"text"==node.object?node.key==this.focusKey:null!=this.focusKey&&node.hasDescendant(this.focusKey)}},{key:"isAtStartOf",value:function(node){return this.isCollapsed&&this.hasAnchorAtStartOf(node)}},{key:"isAtEndOf",value:function(node){return this.isCollapsed&&this.hasAnchorAtEndOf(node)}},{key:"focus",value:function(){return this.merge({isFocused:!0})}},{key:"blur",value:function(){return this.merge({isFocused:!1})}},
{key:"deselect",value:function(){return this.merge({anchorKey:null,anchorOffset:0,anchorPath:null,focusKey:null,focusOffset:0,focusPath:null,isFocused:!1,isBackward:!1})}},{key:"flip",value:function(){return this.merge({anchorKey:this.focusKey,anchorOffset:this.focusOffset,anchorPath:this.focusPath,focusKey:this.anchorKey,focusOffset:this.anchorOffset,focusPath:this.anchorPath,isBackward:null==this.isBackward?null:!this.isBackward})}},{key:"moveAnchor",value:function(){var focusOffset=this.focusOffset,
isBackward=this.isBackward,anchorOffset=this.anchorOffset+(0<arguments.length&&void 0!==arguments[0]?arguments[0]:1);return this.merge({anchorOffset:anchorOffset,isBackward:this.anchorKey==this.focusKey?anchorOffset>focusOffset:isBackward})}},{key:"moveFocus",value:function(){var anchorOffset=this.anchorOffset,isBackward=this.isBackward,focusOffset=this.focusOffset+(0<arguments.length&&void 0!==arguments[0]?arguments[0]:1);return this.merge({focusOffset:focusOffset,isBackward:this.focusKey==this.anchorKey?
anchorOffset>focusOffset:isBackward})}},{key:"moveAnchorTo",value:function(key,offset){var anchorKey=this.anchorKey,focusKey=this.focusKey,focusOffset=this.focusOffset,anchorPath=this.anchorPath,focusPath=this.focusPath,isBackward=this.isBackward;if("string"===typeof key)return anchorKey=key===anchorKey,focusKey=key===focusKey,this.merge({anchorKey:key,anchorPath:focusKey?focusPath:anchorKey?anchorPath:null,anchorOffset:offset,isBackward:focusKey?offset>focusOffset:anchorKey?isBackward:null});anchorPath=
key&&key.equals(anchorPath);focusPath=key&&key.equals(focusPath);return this.merge({anchorPath:key,anchorKey:anchorPath?anchorKey:focusPath?focusKey:null,anchorOffset:offset,isBackward:focusPath?offset>focusOffset:anchorPath?isBackward:null})}},{key:"moveFocusTo",value:function(key,offset){var focusKey=this.focusKey,anchorKey=this.anchorKey,anchorOffset=this.anchorOffset,anchorPath=this.anchorPath,focusPath=this.focusPath,isBackward=this.isBackward;if("string"===typeof key)return anchorKey=key===
anchorKey,focusKey=key===focusKey,this.merge({focusKey:key,focusPath:anchorKey?anchorPath:focusKey?focusPath:null,focusOffset:offset,isBackward:anchorKey?offset<anchorOffset:focusKey?isBackward:null});anchorPath=key&&key.equals(anchorPath);focusPath=key&&key.equals(focusPath);return this.merge({focusPath:key,focusKey:focusPath?focusKey:anchorPath?anchorKey:null,focusOffset:offset,isBackward:anchorPath?offset<anchorOffset:focusPath?isBackward:null})}},{key:"moveAnchorOffsetTo",value:function(anchorOffset){return this.merge({anchorOffset:anchorOffset,
isBackward:this.anchorKey==this.focusKey?anchorOffset>this.focusOffset:this.isBackward})}},{key:"moveFocusOffsetTo",value:function(focusOffset){return this.merge({focusOffset:focusOffset,isBackward:this.anchorKey==this.focusKey?this.anchorOffset>focusOffset:this.isBackward})}},{key:"moveOffsetsTo",value:function(anchorOffset){var focusOffset=1<arguments.length&&void 0!==arguments[1]?arguments[1]:anchorOffset;return this.moveAnchorOffsetTo(anchorOffset).moveFocusOffsetTo(focusOffset)}},{key:"moveToAnchor",
value:function(){return this.moveFocusTo(this.anchorKey,this.anchorOffset)}},{key:"moveToFocus",value:function(){return this.moveAnchorTo(this.focusKey,this.focusOffset)}},{key:"moveAnchorToStartOf",value:function(node){node=getFirstText(node);return this.moveAnchorTo(node.key,0)}},{key:"moveAnchorToEndOf",value:function(node){node=getLastText(node);return this.moveAnchorTo(node.key,node.text.length)}},{key:"moveFocusToStartOf",value:function(node){node=getFirstText(node);return this.moveFocusTo(node.key,
0)}},{key:"moveFocusToEndOf",value:function(node){node=getLastText(node);return this.moveFocusTo(node.key,node.text.length)}},{key:"moveToRangeOf",value:function(start){var end=1<arguments.length&&void 0!==arguments[1]?arguments[1]:start;return(this.isBackward?this.flip():this).moveAnchorToStartOf(start).moveFocusToEndOf(end)}},{key:"normalize",value:function(node){var anchorKey=this.anchorKey,anchorOffset=this.anchorOffset,anchorPath=this.anchorPath,focusKey=this.focusKey,focusOffset=this.focusOffset,
focusPath=this.focusPath,isBackward=this.isBackward,anchorOffsetType="undefined"===typeof anchorOffset?"undefined":_typeof(anchorOffset),focusOffsetType="undefined"===typeof focusOffset?"undefined":_typeof(focusOffset);"number"==anchorOffsetType&&"number"==focusOffsetType||logger.warn('The range offsets should be numbers, but they were of type "'+anchorOffsetType+'" and "'+focusOffsetType+'".');if(null==anchorKey&&null==anchorPath||null==focusKey&&null==focusPath)return this.merge({anchorKey:null,
anchorOffset:0,anchorPath:null,focusKey:null,focusOffset:0,focusPath:null,isBackward:!1});anchorKey=node.getNode(anchorKey||anchorPath);focusKey=node.getNode(focusKey||focusPath);if(!anchorKey||!focusKey)return logger.warn("The range was invalid and was reset. The range in question was:",this),node=(anchorOffset=node.getFirstText())&&node.getPath(anchorOffset.key),this.merge({anchorKey:anchorOffset?anchorOffset.key:null,anchorOffset:0,anchorPath:anchorOffset?node:null,focusKey:anchorOffset?anchorOffset.key:
null,focusOffset:0,focusPath:anchorOffset?node:null,isBackward:!1});"text"!=anchorKey.object&&(logger.warn("The range anchor was set to a Node that is not a Text node. This should not happen and can degrade performance. The node in question was:",anchorKey),focusPath=anchorKey.getTextAtOffset(anchorOffset),anchorKey=anchorKey.getOffset(focusPath.key),anchorOffset-=anchorKey,anchorKey=focusPath);"text"!=focusKey.object&&(logger.warn("The range focus was set to a Node that is not a Text node. This should not happen and can degrade performance. The node in question was:",
focusKey),focusPath=focusKey.getTextAtOffset(focusOffset),focusKey=focusKey.getOffset(focusPath.key),focusOffset-=focusKey,focusKey=focusPath);anchorKey=anchorKey.key;focusKey=focusKey.key;anchorPath=node.getPath(anchorKey);focusPath=node.getPath(focusKey);null==isBackward&&(node=PathUtils.compare(anchorPath,focusPath),isBackward=0===node?anchorOffset>focusOffset:1===node);return this.merge({anchorKey:anchorKey,anchorOffset:anchorOffset,anchorPath:anchorPath,focusKey:focusKey,focusOffset:focusOffset,
focusPath:focusPath,isBackward:isBackward})}},{key:"toJSON",value:function(){var options=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},object={object:this.object,anchorKey:this.anchorKey,anchorOffset:this.anchorOffset,anchorPath:this.anchorPath&&this.anchorPath.toArray(),focusKey:this.focusKey,focusOffset:this.focusOffset,focusPath:this.focusPath&&this.focusPath.toArray(),isAtomic:this.isAtomic,isBackward:this.isBackward,isFocused:this.isFocused,marks:null==this.marks?null:this.marks.toArray().map(function(m){return m.toJSON()})};
options.preserveKeys||(delete object.anchorKey,delete object.focusKey);return object}},{key:"toJS",value:function(){return this.toJSON()}},{key:"object",get:function(){return"range"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}},{key:"isBlurred",get:function(){return!this.isFocused}},{key:"isCollapsed",get:function(){return this.anchorKey==this.focusKey&&this.anchorOffset==this.focusOffset}},{key:"isExpanded",
get:function(){return!this.isCollapsed}},{key:"isForward",get:function(){return null==this.isBackward?null:!this.isBackward}},{key:"isSet",get:function(){return null!=this.anchorKey&&null!=this.focusKey||null!=this.anchorPath&&null!=this.focusPath}},{key:"isUnset",get:function(){return!this.isSet}},{key:"startKey",get:function(){return this.isBackward?this.focusKey:this.anchorKey}},{key:"startOffset",get:function(){return this.isBackward?this.focusOffset:this.anchorOffset}},{key:"startPath",get:function(){return this.isBackward?
this.focusPath:this.anchorPath}},{key:"endKey",get:function(){return this.isBackward?this.anchorKey:this.focusKey}},{key:"endOffset",get:function(){return this.isBackward?this.anchorOffset:this.focusOffset}},{key:"endPath",get:function(){return this.isBackward?this.anchorPath:this.focusPath}}],[{key:"create",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Range.isRange(attrs))return attrs;if(isPlainObject(attrs))return Range.fromJSON(attrs);throw Error("`Range.create` only accepts objects or ranges, but you passed it: "+
attrs);}},{key:"createList",value:function(){var elements=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];if(immutable.List.isList(elements)||Array.isArray(elements))return new immutable.List(elements.map(Range.create));throw Error("`Range.createList` only accepts arrays or lists, but you passed it: "+elements);}},{key:"createProperties",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Range.isRange(a))return{anchorKey:a.anchorKey,anchorOffset:a.anchorOffset,
anchorPath:a.anchorPath,focusKey:a.focusKey,focusOffset:a.focusOffset,focusPath:a.focusPath,isAtomic:a.isAtomic,isBackward:a.isBackward,isFocused:a.isFocused,marks:a.marks};if(isPlainObject(a)){var p={};"anchorKey"in a&&(p.anchorKey=a.anchorKey);"anchorOffset"in a&&(p.anchorOffset=a.anchorOffset);"anchorPath"in a&&(p.anchorPath=PathUtils.create(a.anchorPath));"focusKey"in a&&(p.focusKey=a.focusKey);"focusOffset"in a&&(p.focusOffset=a.focusOffset);"focusPath"in a&&(p.focusPath=PathUtils.create(a.focusPath));
"isAtomic"in a&&(p.isAtomic=a.isAtomic);"isBackward"in a&&(p.isBackward=a.isBackward);"isFocused"in a&&(p.isFocused=a.isFocused);"marks"in a&&(p.marks=null==a.marks?null:Mark.createSet(a.marks));"anchorPath"in a&&!("anchorKey"in a)&&(p.anchorKey=null);"anchorKey"in a&&!("anchorPath"in a)&&(p.anchorPath=null);"focusPath"in a&&!("focusKey"in a)&&(p.focusKey=null);"focusKey"in a&&!("focusPath"in a)&&(p.focusPath=null);return p}throw Error("`Range.createProperties` only accepts objects or ranges, but you passed it: "+
a);}},{key:"fromJSON",value:function(object){var _object$anchorKey=object.anchorKey,_object$anchorOffset=object.anchorOffset,_object$anchorPath=object.anchorPath,_object$focusKey=object.focusKey;_object$focusKey=void 0===_object$focusKey?null:_object$focusKey;var _object$focusOffset=object.focusOffset;_object$focusOffset=void 0===_object$focusOffset?0:_object$focusOffset;var _object$focusPath=object.focusPath;_object$focusPath=void 0===_object$focusPath?null:_object$focusPath;var _object$isAtomic=
object.isAtomic;_object$isAtomic=void 0===_object$isAtomic?!1:_object$isAtomic;var _object$isBackward=object.isBackward;_object$isBackward=void 0===_object$isBackward?null:_object$isBackward;var _object$isFocused=object.isFocused;_object$isFocused=void 0===_object$isFocused?!1:_object$isFocused;object=object.marks;object=void 0===object?null:object;return new Range({anchorKey:void 0===_object$anchorKey?null:_object$anchorKey,anchorOffset:void 0===_object$anchorOffset?0:_object$anchorOffset,anchorPath:PathUtils.create(void 0===
_object$anchorPath?null:_object$anchorPath),focusKey:_object$focusKey,focusOffset:_object$focusOffset,focusPath:PathUtils.create(_object$focusPath),isAtomic:_object$isAtomic,isBackward:_object$isBackward,isFocused:_object$isFocused,marks:null==object?null:new immutable.Set(object.map(Mark.fromJSON))})}},{key:"isRange",value:function(obj){return!(!obj||!obj[MODEL_TYPES.RANGE])}}]);return Range}(immutable.Record({anchorKey:null,anchorOffset:0,anchorPath:null,focusKey:null,focusOffset:0,focusPath:null,
isAtomic:!1,isBackward:null,isFocused:!1,marks:null}));Range$jscomp$0.fromJS=Range$jscomp$0.fromJSON;Range$jscomp$0.prototype[MODEL_TYPES.RANGE]=!0;[["move",""],["move","To"],["move","ToStartOf"],["move","ToEndOf"]].forEach(function(_ref){_ref=slicedToArray(_ref,2);var p=_ref[0],s=_ref[1];Range$jscomp$0.prototype[""+p+s]=function(){var _ref3;return(_ref3=this[p+"Anchor"+s].apply(this,arguments))[p+"Focus"+s].apply(_ref3,arguments)}});[["has","AtStartOf",!0],["has","AtEndOf",!0],["has","Between",!0],
["has","In",!0],["collapseTo",""],["move",""],["moveTo",""],["move","To"],["move","OffsetTo"]].forEach(function(_ref4){var _ref5=slicedToArray(_ref4,3);_ref4=_ref5[0];var s=_ref5[1];_ref5=_ref5[2];var anchor=_ref4+"Anchor"+s,focus=_ref4+"Focus"+s;Range$jscomp$0.prototype[_ref4+"Start"+s]=function(){return this.isBackward?this[focus].apply(this,arguments):this[anchor].apply(this,arguments)};Range$jscomp$0.prototype[_ref4+"End"+s]=function(){return this.isBackward?this[anchor].apply(this,arguments):
this[focus].apply(this,arguments)};_ref5&&(Range$jscomp$0.prototype[_ref4+"Edge"+s]=function(){return this[anchor].apply(this,arguments)||this[focus].apply(this,arguments)})});[["collapseTo","moveTo"],["collapseToAnchor","moveToAnchor"],["collapseToFocus","moveToFocus"],["collapseToStart","moveToStart"],["collapseToEnd","moveToEnd"],["collapseToStartOf","moveToStartOf"],["collapseToEndOf","moveToEndOf"],["extend","moveFocus"],["extendTo","moveFocusTo"],["extendToStartOf","moveFocusToStartOf"],["extendToEndOf",
"moveFocusToEndOf"]].forEach(function(_ref6){_ref6=slicedToArray(_ref6,2);var method=_ref6[1];Range$jscomp$0.prototype[_ref6[0]]=function(){return this[method].apply(this,arguments)}});var DEFAULTS$5={marks:new immutable.Set,text:""},Character=function(_Record){function Character(){classCallCheck(this,Character);return possibleConstructorReturn(this,(Character.__proto__||Object.getPrototypeOf(Character)).apply(this,arguments))}inherits(Character,_Record);createClass(Character,[{key:"toJSON",value:function(){return{object:this.object,
text:this.text,marks:this.marks.toArray().map(function(m){return m.toJSON()})}}},{key:"toJS",value:function(){return this.toJSON()}},{key:"object",get:function(){return"character"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}}],[{key:"create",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Character.isCharacter(attrs))return attrs;"string"==typeof attrs&&
(attrs={text:attrs});if(isPlainObject(attrs))return Character.fromJSON(attrs);throw Error("`Character.create` only accepts objects, strings or characters, but you passed it: "+attrs);}},{key:"createList",value:function(){var elements=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];"string"==typeof elements&&(elements=elements.split(""));if(immutable.List.isList(elements)||Array.isArray(elements))return new immutable.List(elements.map(Character.create));throw Error("`Block.createList` only accepts strings, arrays or lists, but you passed it: "+
elements);}},{key:"fromJSON",value:function(object){var text=object.text;object=object.marks;object=void 0===object?[]:object;if("string"!=typeof text)throw Error("`Character.fromJSON` requires a block `text` string.");return new Character({text:text,marks:new immutable.Set(object)})}},{key:"isCharacterList",value:function(any){return immutable.List.isList(any)&&any.every(function(item){return Character.isCharacter(item)})}}]);return Character}(immutable.Record(DEFAULTS$5));Character.fromJS=Character.fromJSON;
Character.isCharacter=isType.bind(null,"CHARACTER");Character.prototype[MODEL_TYPES.CHARACTER]=!0;var DEFAULTS$6={marks:immutable.Set(),text:""},Leaf=function(_Record){function Leaf(){classCallCheck(this,Leaf);return possibleConstructorReturn(this,(Leaf.__proto__||Object.getPrototypeOf(Leaf)).apply(this,arguments))}inherits(Leaf,_Record);createClass(Leaf,[{key:"getCharacters",value:function(){logger.deprecate("slate@0.34.0","The `characters` property of Slate objects is deprecated");var marks=this.marks;
return Character.createList(this.text.split("").map(function(char){return Character.create({text:char,marks:marks})}))}},{key:"updateMark",value:function(mark,newMark){var marks=this.marks;if(newMark.equals(mark)||!marks.has(mark))return this;marks=marks.withMutations(function(collection){collection.remove(mark).add(newMark)});return this.set("marks",marks)}},{key:"addMarks",value:function(set$$1){return this.set("marks",this.marks.union(set$$1))}},{key:"removeMark",value:function(mark){return this.set("marks",
this.marks.remove(mark))}},{key:"toJSON",value:function(){return{object:this.object,text:this.text,marks:this.marks.toArray().map(function(m){return m.toJSON()})}}},{key:"toJS",value:function(){return this.toJSON()}},{key:"object",get:function(){return"leaf"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}}],[{key:"create",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:
{};if(Leaf.isLeaf(attrs))return attrs;"string"==typeof attrs&&(attrs={text:attrs});if(isPlainObject(attrs))return Leaf.fromJSON(attrs);throw Error("`Leaf.create` only accepts objects, strings or leaves, but you passed it: "+attrs);}},{key:"createLeaves",value:function(leaves){if(1>=leaves.size)return leaves;var invalid=!1,result=immutable.List().withMutations(function(cache){leaves.findLast(function(leaf,index){if(index=cache.first()){if(index.marks.equals(leaf.marks)){invalid=!0;cache.set(0,index.set("text",
""+leaf.text+index.text));return}if(""===index.text){invalid=!0;cache.set(0,leaf);return}if(""===leaf.text){invalid=!0;return}}cache.unshift(leaf)})});return invalid?result:leaves}},{key:"splitLeaves",value:function(leaves,offset){if(0>offset)return[immutable.List(),leaves];if(0===leaves.size)return[immutable.List(),immutable.List()];var endOffset=0,index=-1,left=void 0,right=void 0;leaves.find(function(leaf){index++;var startOffset=endOffset,text=leaf.text;endOffset+=text.length;if(endOffset<offset||
startOffset>offset)return!1;startOffset=offset-startOffset;left=leaf.set("text",text.slice(0,startOffset));right=leaf.set("text",text.slice(startOffset));return!0});return left?""===left.text?0===index?[immutable.List.of(left),leaves]:[leaves.take(index),leaves.skip(index)]:""===right.text?index===leaves.size-1?[leaves,immutable.List.of(right)]:[leaves.take(index+1),leaves.skip(index+1)]:[leaves.take(index).push(left),leaves.skip(index+1).unshift(right)]:[leaves,immutable.List()]}},{key:"createList",
value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];if(immutable.List.isList(attrs)||Array.isArray(attrs))return new immutable.List(attrs.map(Leaf.create));throw Error("`Leaf.createList` only accepts arrays or lists, but you passed it: "+attrs);}},{key:"fromJSON",value:function(object){var _object$text=object.text;object=object.marks;return new Leaf({text:void 0===_object$text?"":_object$text,marks:immutable.Set((void 0===object?[]:object).map(Mark.fromJSON))})}},
{key:"isLeafList",value:function(any){return immutable.List.isList(any)&&any.every(function(item){return Leaf.isLeaf(item)})}}]);return Leaf}(immutable.Record(DEFAULTS$6));Leaf.fromJS=Leaf.fromJSON;Leaf.isLeaf=isType.bind(null,"LEAF");Leaf.prototype[MODEL_TYPES.LEAF]=!0;var DEFAULTS$7={leaves:immutable.List(),key:void 0},Text$jscomp$0=function(_Record){function Text(){classCallCheck(this,Text);return possibleConstructorReturn(this,(Text.__proto__||Object.getPrototypeOf(Text)).apply(this,arguments))}
inherits(Text,_Record);createClass(Text,[{key:"getString",value:function(){return this.leaves.reduce(function(string,leaf){return string+leaf.text},"")}},{key:"searchLeafAtOffset",value:function(offset){var endOffset=0,startOffset=0,index=-1;return{leaf:this.leaves.find(function(l){index++;startOffset=endOffset;endOffset=startOffset+l.text.length;return endOffset>=offset}),endOffset:endOffset,index:index,startOffset:startOffset}}},{key:"addMark",value:function(index,length,mark){mark=immutable.Set.of(mark);
return this.addMarks(index,length,mark)}},{key:"addMarks",value:function(index,length,set$$1){if(""===this.text&&0===length&&0===index){index=this.leaves.first();if(!index)return this.set("leaves",immutable.List.of(Leaf.fromJSON({text:"",marks:set$$1})));length=index.addMarks(set$$1);return length===index?this:this.set("leaves",immutable.List.of(length))}if(""===this.text||0===length||index>=this.text.length)return this;index=Leaf.splitLeaves(this.leaves,index);var _Leaf$splitLeaves2=slicedToArray(index,
2);index=_Leaf$splitLeaves2[0];length=Leaf.splitLeaves(_Leaf$splitLeaves2[1],length);length=slicedToArray(length,2);_Leaf$splitLeaves2=length[1];index=index.concat(length[0].map(function(x){return x.addMarks(set$$1)}),_Leaf$splitLeaves2);return this.setLeaves(index)}},{key:"getDecorations",value:function(schema){return schema.__getDecorations(this)}},{key:"getLeaves",value:function(){var _this2=this,decorations=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],leaves=this.leaves;if(0===leaves.size)return immutable.List.of(Leaf.create({}));
if(!decorations||0===decorations.length||0===this.text.length)return leaves;var key=this.key;decorations.forEach(function(range){var startOffset=range.startOffset,endOffset=range.endOffset,marks=range.marks,hasStart=range.startKey==key;range=range.endKey==key;if(hasStart&&range){hasStart=hasStart?startOffset:0;startOffset=range?endOffset-hasStart:_this2.text.length-hasStart;if(1>startOffset||hasStart>=_this2.text.length)return;if(0!==hasStart||startOffset<_this2.text.length){endOffset=Leaf.splitLeaves(leaves,
hasStart);hasStart=slicedToArray(endOffset,2);endOffset=hasStart[0];startOffset=Leaf.splitLeaves(hasStart[1],startOffset);startOffset=slicedToArray(startOffset,2);hasStart=startOffset[1];leaves=endOffset.concat(startOffset[0].map(function(x){return x.addMarks(marks)}),hasStart);return}}leaves=leaves.map(function(x){return x.addMarks(marks)})});return leaves===this.leaves?leaves:Leaf.createLeaves(leaves)}},{key:"getActiveMarksBetweenOffsets",value:function(startOffset,endOffset){if(0>=startOffset&&
endOffset>=this.text.length)return this.getActiveMarks();if(startOffset>=endOffset)return immutable.Set();if(""===this.text)return this.getActiveMarks();var result=null,leafEnd=0;this.leaves.forEach(function(leaf){var leafStart=leafEnd;leafEnd=leafStart+leaf.text.length;if(!(leafEnd<=startOffset)){if(leafStart>=endOffset)return!1;if(result)return result=result.intersect(leaf.marks),!1;result=leaf.marks}});return result||immutable.Set()}},{key:"getActiveMarks",value:function(){var _this3=this;if(0===
this.leaves.size)return immutable.Set();var result=this.leaves.first().marks;return 0===result.size?result:result.withMutations(function(x){_this3.leaves.forEach(function(c){x.intersect(c.marks);if(0===x.size)return!1})})}},{key:"getFirstText",value:function(){return this}},{key:"getLastText",value:function(){return this}},{key:"getMarksBetweenOffsets",value:function(startOffset,endOffset){if(0>=startOffset&&endOffset>=this.text.length)return this.getMarks();if(startOffset>=endOffset)return immutable.Set();
if(""===this.text)return this.getActiveMarks();var result=null,leafEnd=0;this.leaves.forEach(function(leaf){var leafStart=leafEnd;leafEnd=leafStart+leaf.text.length;if(!(leafEnd<=startOffset)){if(leafStart>=endOffset)return!1;result=result?result.union(leaf.marks):leaf.marks}});return result||immutable.Set()}},{key:"getMarks",value:function(){var array=this.getMarksAsArray();return new immutable.OrderedSet(array)}},{key:"getMarksAsArray",value:function(){if(0===this.leaves.size)return[];var first=
this.leaves.first().marks;if(1===this.leaves.size)return first.toArray();var result=[];this.leaves.forEach(function(leaf){result.push(leaf.marks.toArray())});return Array.prototype.concat.apply(first.toArray(),result)}},{key:"getMarksAtIndex",value:function(index){return(index=this.searchLeafAtOffset(index).leaf)?index.marks:immutable.Set()}},{key:"getNode",value:function(key){return this.key==key?this:null}},{key:"hasNode",value:function(key){return!!this.getNode(key)}},{key:"insertText",value:function(offset,
text,marks){if(""===this.text)return this.set("leaves",immutable.List.of(Leaf.create({text:text,marks:marks})));if(0===text.length)return this;marks||(marks=immutable.Set());var _searchLeafAtOffset2=this.searchLeafAtOffset(offset),leaf=_searchLeafAtOffset2.leaf,index=_searchLeafAtOffset2.index;_searchLeafAtOffset2=offset-_searchLeafAtOffset2.startOffset;offset=leaf.text.slice(0,_searchLeafAtOffset2);_searchLeafAtOffset2=leaf.text.slice(_searchLeafAtOffset2);var leaves=this.leaves;if(leaf.marks.equals(marks))return this.set("leaves",
leaves.set(index,leaf.set("text",offset+text+_searchLeafAtOffset2)));text=leaves.splice(index,1,leaf.set("text",offset),Leaf.create({text:text,marks:marks}),leaf.set("text",_searchLeafAtOffset2));return this.setLeaves(text)}},{key:"regenerateKey",value:function(){var key=KeyUtils.create();return this.set("key",key)}},{key:"removeMark",value:function(index,length,mark){if(""===this.text&&0===index&&0===length){index=this.leaves.first();if(!index)return this;length=index.removeMark(mark);return length===
index?this:this.set("leaves",immutable.List.of(length))}if(0>=length||index>=this.text.length)return this;index=Leaf.splitLeaves(this.leaves,index);var _Leaf$splitLeaves10=slicedToArray(index,2);index=_Leaf$splitLeaves10[0];length=Leaf.splitLeaves(_Leaf$splitLeaves10[1],length);length=slicedToArray(length,2);_Leaf$splitLeaves10=length[1];index=index.concat(length[0].map(function(x){return x.removeMark(mark)}),_Leaf$splitLeaves10);return this.setLeaves(index)}},{key:"removeText",value:function(start,
length){if(0>=length||start>=this.text.length)return this;if(1===length){var _searchLeafAtOffset3=this.searchLeafAtOffset(start+1),leaf=_searchLeafAtOffset3.leaf,index=_searchLeafAtOffset3.index,offset=start-_searchLeafAtOffset3.startOffset;if(leaf){if(1===leaf.text.length)return length=this.leaves.remove(index),this.setLeaves(length);_searchLeafAtOffset3=leaf.text.slice(0,offset);offset=leaf.text.slice(offset+length);_searchLeafAtOffset3+=offset;if(0<_searchLeafAtOffset3.length)return this.set("leaves",
this.leaves.set(index,leaf.set("text",_searchLeafAtOffset3)))}}start=Leaf.splitLeaves(this.leaves,start);leaf=slicedToArray(start,2);start=leaf[0];length=Leaf.splitLeaves(leaf[1],length)[1];length=Leaf.createLeaves(start.concat(length));return 1===length.size&&(start=length.first(),""===start.text)?this.set("leaves",immutable.List.of(start.set("marks",this.getActiveMarks()))):this.set("leaves",length)}},{key:"toJSON",value:function(){var options=0<arguments.length&&void 0!==arguments[0]?arguments[0]:
{},object={object:this.object,leaves:this.getLeaves().toArray().map(function(r){return r.toJSON()})};options.preserveKeys&&(object.key=this.key);return object}},{key:"toJS",value:function(options){return this.toJSON(options)}},{key:"updateMark",value:function(index,length,mark,properties){var newMark=mark.merge(properties);if(""===this.text&&0===length&&0===index){length=this.leaves.first();if(!length)return this;index=length.updateMark(mark,newMark);return index===length?this:this.set("leaves",immutable.List.of(index))}if(0>=
length||index>=this.text.length)return this;index=Leaf.splitLeaves(this.leaves,index);properties=slicedToArray(index,2);index=properties[0];length=Leaf.splitLeaves(properties[1],length);length=slicedToArray(length,2);properties=length[1];length=index.concat(length[0].map(function(x){return x.updateMark(mark,newMark)}),properties);return this.setLeaves(length)}},{key:"splitText",value:function(offset){var splitted=Leaf.splitLeaves(this.leaves,offset);offset=this.set("leaves",splitted[0]);splitted=
this.set("leaves",splitted[1]).regenerateKey();return[offset,splitted]}},{key:"mergeText",value:function(text){text=this.leaves.concat(text.leaves);return this.setLeaves(text)}},{key:"normalize",value:function(schema){return schema.normalizeNode(this)}},{key:"validate",value:function(schema){return schema.validateNode(this)}},{key:"getFirstInvalidDescendant",value:function(schema){return this.validate(schema)?this:null}},{key:"setLeaves",value:function(leaves){var result=Leaf.createLeaves(leaves);
return 1!==result.size||(result=result.first(),result.marks&&0!==result.marks.size||""!==result.text)?this.set("leaves",Leaf.createLeaves(leaves)):this.set("leaves",immutable.List())}},{key:"object",get:function(){return"text"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}},{key:"isEmpty",get:function(){return""==this.text}},{key:"text",get:function(){return this.getString()}},{key:"characters",
get:function(){return this.leaves.flatMap(function(x){return x.getCharacters()})}}],[{key:"create",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"";if(Text.isText(attrs))return attrs;"string"==typeof attrs&&(attrs={leaves:[{text:attrs}]});if(isPlainObject(attrs))return attrs.text&&(attrs={key:attrs.key,leaves:[{text:attrs.text,marks:attrs.marks}]}),Text.fromJSON(attrs);throw Error("`Text.create` only accepts objects, arrays, strings or texts, but you passed it: "+
attrs);}},{key:"createList",value:function(){var elements=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];if(immutable.List.isList(elements)||Array.isArray(elements))return new immutable.List(elements.map(Text.create));throw Error("`Text.createList` only accepts arrays or lists, but you passed it: "+elements);}},{key:"fromJSON",value:function(object){if(Text.isText(object))return object;var _object$key=object.key;_object$key=void 0===_object$key?KeyUtils.create():_object$key;var leaves=
object.leaves;leaves||(object.ranges?(logger.deprecate("slate@0.27.0","The `ranges` property of Slate objects has been renamed to `leaves`."),leaves=object.ranges):leaves=immutable.List());if(Array.isArray(leaves))leaves=immutable.List(leaves.map(function(x){return Leaf.create(x)}));else if(immutable.List.isList(leaves))leaves=leaves.map(function(x){return Leaf.create(x)});else throw Error("leaves must be either Array or Immutable.List");return new Text({leaves:Leaf.createLeaves(leaves),key:_object$key})}},
{key:"isTextList",value:function(any){return immutable.List.isList(any)&&any.every(function(item){return Text.isText(item)})}}]);return Text}(immutable.Record(DEFAULTS$7));Text$jscomp$0.fromJS=Text$jscomp$0.fromJSON;Text$jscomp$0.isText=isType.bind(null,"TEXT");Text$jscomp$0.prototype[MODEL_TYPES.TEXT]=!0;memoize(Text$jscomp$0.prototype,"getDecorations getActiveMarks getMarks getMarksAsArray normalize validate getString".split(" "));var Node$jscomp$0=function(){function Node(){classCallCheck(this,
Node)}createClass(Node,[{key:"addMark",value:function(path,offset,length,mark){var node=this.assertDescendant(path);path=this.resolvePath(path);node=node.addMark(offset,length,mark);return this.replaceNode(path,node)}},{key:"filterDescendants",value:function(iterator){var matches=[];this.forEachDescendant(function(node,i,nodes){iterator(node,i,nodes)&&matches.push(node)});return immutable.List(matches)}},{key:"findDescendant",value:function(iterator){var found=null;this.forEachDescendant(function(node,
i,nodes){if(iterator(node,i,nodes))return found=node,!1});return found}},{key:"forEachDescendant",value:function(iterator){var ret=void 0;this.nodes.forEach(function(child,i,nodes){if(!1===iterator(child,i,nodes))return ret=!1;if("text"!=child.object)return ret=child.forEachDescendant(iterator)});return ret}},{key:"getActiveMarksAtRange",value:function(range){range=range.normalize(this);if(range.isUnset)return immutable.Set();if(range.isCollapsed)return this.getMarksAtPosition(range.startKey,range.startOffset).toSet();
var _range2=range,startKey=_range2.startKey;range=_range2.endKey;var startOffset=_range2.startOffset;_range2=_range2.endOffset;var startText=this.getDescendant(startKey);if(startKey!==range){for(;startKey!==range&&0===_range2;)_range2=this.getPreviousText(range),range=_range2.key,_range2=_range2.text.length;for(;startKey!==range&&startOffset===startText.text.length;)startText=this.getNextText(startKey),startKey=startText.key,startOffset=0}if(startKey===range)return startText.getActiveMarksBetweenOffsets(startOffset,
_range2);startOffset=startText.getActiveMarksBetweenOffsets(startOffset,startText.text.length);if(0===startOffset.size)return immutable.Set();_range2=this.getDescendant(range).getActiveMarksBetweenOffsets(0,_range2);startOffset=startOffset.intersect(_range2);if(0===startOffset.size)return startOffset;for(startKey=this.getNextText(startKey);startKey.key!==range;){if(0!==startKey.text.length&&(startOffset=startOffset.intersect(startKey.getActiveMarks()),0===startOffset.size))return immutable.Set();
startKey=this.getNextText(startKey.key)}return startOffset}},{key:"getAncestors",value:function(path){var _this=this;path=this.resolvePath(path);if(!path)return null;var ancestors=[];path.forEach(function(p,i){p=path.slice(0,i);p=_this.getNode(p);ancestors.push(p)});return immutable.List(ancestors)}},{key:"getBlocks",value:function(){var array=this.getBlocksAsArray();return new immutable.List(array)}},{key:"getBlocksAsArray",value:function(){return this.nodes.reduce(function(array,child){if("block"!=
child.object)return array;if(!child.isLeafBlock())return array.concat(child.getBlocksAsArray());array.push(child);return array},[])}},{key:"getBlocksAtRange",value:function(range){range=this.getBlocksAtRangeAsArray(range);return new immutable.List(new immutable.OrderedSet(range))}},{key:"getBlocksAtRangeAsArray",value:function(range){range=range.normalize(this);if(range.isUnset)return[];var startKey=range.startKey,endKey=range.endKey;range=this.getClosestBlock(startKey);if(startKey===endKey)return[range];
endKey=this.getClosestBlock(endKey);startKey=this.getBlocksAsArray();range=startKey.indexOf(range);endKey=startKey.indexOf(endKey);return startKey.slice(range,endKey+1)}},{key:"getBlocksByType",value:function(type){type=this.getBlocksByTypeAsArray(type);return new immutable.List(type)}},{key:"getBlocksByTypeAsArray",value:function(type){return this.nodes.reduce(function(array,node){return"block"!=node.object?array:node.isLeafBlock()&&node.type==type?(array.push(node),array):array.concat(node.getBlocksByTypeAsArray(type))},
[])}},{key:"getCharacters",value:function(){return this.getTexts().flatMap(function(t){return t.characters})}},{key:"getCharactersAtRange",value:function(range){range=range.normalize(this);if(range.isUnset)return immutable.List();var _range4=range,startKey=_range4.startKey,endKey=_range4.endKey,startOffset=_range4.startOffset,endOffset=_range4.endOffset;return startKey===endKey?this.getDescendant(endKey).characters.slice(startOffset,endOffset):this.getTextsAtRange(range).flatMap(function(t){return t.key===
startKey?t.characters.slice(startOffset):t.key===endKey?t.characters.slice(0,endOffset):t.characters})}},{key:"getChild",value:function(path){return(path=this.resolvePath(path))?1===path.size?this.nodes.get(path.first()):null:null}},{key:"getClosest",value:function(path,iterator){var _this2=this;return(path=this.getAncestors(path))?path.findLast(function(node){for(var _len=arguments.length,args=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];return node===_this2?!1:iterator.apply(void 0,
[node].concat(args))})||null:null}},{key:"getClosestBlock",value:function(path){return this.getClosest(path,function(n){return"block"===n.object})}},{key:"getClosestInline",value:function(path){return this.getClosest(path,function(n){return"inline"===n.object})}},{key:"getClosestVoid",value:function(path){return this.getClosest(path,function(p){return p.isVoid})}},{key:"getCommonAncestor",value:function(a,b){a=this.resolvePath(a);b=this.resolvePath(b);if(!a||!b)return null;a=PathUtils.relate(a,b);
return this.getNode(a)}},{key:"getDecorations",value:function(stack){stack=stack.find("decorateNode",this);return Range$jscomp$0.createList(stack||[])}},{key:"getDepth",value:function(path){var startAt=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1;return(path=this.resolvePath(path))?this.getNode(path)?path.size-1+startAt:null:null}},{key:"getDescendant",value:function(path){path=this.resolvePath(path);if(!path)return null;path=path.toArray();var descendant=this,_iteratorNormalCompletion=
!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=path[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){if(!descendant||!descendant.nodes)return null;descendant=descendant.nodes.get(_step.value)}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError;}}return descendant}},{key:"getFirstInvalidDescendant",
value:function(schema){var result=null;this.nodes.find(function(n){return result=n.validate(schema)?n:n.getFirstInvalidDescendant(schema)});return result}},{key:"getFirstText",value:function(){var descendant=null,found=this.nodes.find(function(node){if("text"===node.object)return!0;descendant=node.getFirstText();return!!descendant});return descendant||found}},{key:"getFragmentAtRange",value:function(range){range=range.normalize(this);if(range.isUnset)return Document$jscomp$0.create();var node=this,
_range5=range;range=_range5.startKey;var startOffset=_range5.startOffset,endKey=_range5.endKey;_range5=_range5.endOffset;for(var startText=node.assertDescendant(range),endText=node.assertDescendant(endKey),child=startText,previous=void 0;startText=node.getParent(child.key);){var index=startText.nodes.indexOf(child);child="text"==child.object?startOffset:child.nodes.indexOf(previous);startText=startText.splitNode(index,child);node=node.replaceNode(startText.key,startText);previous=startText.nodes.get(index+
1);child=startText}for(child=range==endKey?node.getNextText(range):endText;startText=node.getParent(child.key);)endText=startText.nodes.indexOf(child),child="text"==child.object?range==endKey?_range5-startOffset:_range5:child.nodes.indexOf(previous),startText=startText.splitNode(endText,child),node=node.replaceNode(startText.key,startText),previous=startText.nodes.get(endText+1),child=startText;startOffset=node.getNextSibling(node.getFurthestAncestor(range).key);range=range==endKey?node.getNextSibling(node.getNextSibling(node.getFurthestAncestor(endKey).key).key):
node.getNextSibling(node.getFurthestAncestor(endKey).key);endKey=node.nodes.indexOf(startOffset);range=node.nodes.indexOf(range);node=node.nodes.slice(endKey,range);return Document$jscomp$0.create({nodes:node})}},{key:"getFurthest",value:function(path,iterator){var _this3=this;return(path=this.getAncestors(path))?path.find(function(node){for(var _len2=arguments.length,args=Array(1<_len2?_len2-1:0),_key2=1;_key2<_len2;_key2++)args[_key2-1]=arguments[_key2];return node===_this3?!1:iterator.apply(void 0,
[node].concat(args))})||null:null}},{key:"getFurthestAncestor",value:function(path){return(path=this.resolvePath(path))?path.size?this.nodes.get(path.first()):null:null}},{key:"getFurthestBlock",value:function(path){return this.getFurthest(path,function(n){return"block"===n.object})}},{key:"getFurthestInline",value:function(path){return this.getFurthest(path,function(n){return"inline"===n.object})}},{key:"getFurthestOnlyChildAncestor",value:function(path){return(path=this.getAncestors(path))?path.rest().reverse().takeUntil(function(p){return 1<
p.nodes.size}).last()||null:null}},{key:"getInlines",value:function(){var array=this.getInlinesAsArray();return new immutable.List(array)}},{key:"getInlinesAsArray",value:function(){var array=[];this.nodes.forEach(function(child){"text"!=child.object&&(child.isLeafInline()?array.push(child):array=array.concat(child.getInlinesAsArray()))});return array}},{key:"getInlinesAtRange",value:function(range){range=this.getInlinesAtRangeAsArray(range);return new immutable.List(new immutable.OrderedSet(range))}},
{key:"getInlinesAtRangeAsArray",value:function(range){var _this4=this;range=range.normalize(this);return range.isUnset?[]:this.getTextsAtRangeAsArray(range).map(function(text){return _this4.getClosestInline(text.key)}).filter(function(exists){return exists})}},{key:"getInlinesByType",value:function(type){type=this.getInlinesByTypeAsArray(type);return new immutable.List(type)}},{key:"getInlinesByTypeAsArray",value:function(type){return this.nodes.reduce(function(inlines,node){return"text"==node.object?
inlines:node.isLeafInline()&&node.type==type?(inlines.push(node),inlines):inlines.concat(node.getInlinesByTypeAsArray(type))},[])}},{key:"getInsertMarksAtRange",value:function(range){range=range.normalize(this);if(range.isUnset)return immutable.Set();if(range.isCollapsed)return this.getMarksAtPosition(range.startKey,range.startOffset);var startOffset=range.startOffset;return this.getDescendant(range.startKey).getMarksAtIndex(startOffset+1)}},{key:"getKeysToPathsTable",value:function(){var ret=defineProperty({},
this.key,[]);this.nodes.forEach(function(node,i){ret[node.key]=[i];if("text"!==node.object){node=node.getKeysToPathsTable();for(var key in node)ret[key]=[i].concat(toConsumableArray(node[key]))}});return ret}},{key:"getLastText",value:function(){var descendant=null,found=this.nodes.findLast(function(node){return"text"==node.object?!0:descendant=node.getLastText()});return descendant||found}},{key:"getMarks",value:function(){var array=this.getMarksAsArray();return new immutable.Set(array)}},{key:"getMarksAsArray",
value:function(){var _ref,result=[];this.nodes.forEach(function(node){result.push(node.getMarksAsArray())});return(_ref=[]).concat.apply(_ref,result)}},{key:"getMarksAtPosition",value:function(key,offset){var currentMarks=this.getDescendant(key).getMarksAtIndex(offset);if(0!==offset)return currentMarks;offset=this.getClosestBlock(key);return""===offset.text?currentMarks:(key=this.getPreviousText(key))?offset.hasDescendant(key.key)?key.getMarksAtIndex(key.text.length):currentMarks:immutable.Set()}},
{key:"getMarksAtRange",value:function(range){return new immutable.Set(this.getOrderedMarksAtRange(range))}},{key:"getMarksByType",value:function(type){type=this.getMarksByTypeAsArray(type);return new immutable.Set(type)}},{key:"getMarksByTypeAsArray",value:function(type){return this.nodes.reduce(function(memo,node){return"text"==node.object?memo.concat(node.getMarksAsArray().filter(function(m){return m.type==type})):memo.concat(node.getMarksByTypeAsArray(type))},[])}},{key:"getNextBlock",value:function(key){var child=
this.assertDescendant(key);key="block"==child.object?child.getLastText():this.getClosestBlock(key).getLastText();return(key=this.getNextText(key.key))?this.getClosestBlock(key.key):null}},{key:"getNextNode",value:function(path){path=this.resolvePath(path);if(!path||!path.size)return null;for(var i=path.size;0<i;i--){var p=path.slice(0,i);p=PathUtils.increment(p);if(p=this.getNode(p))return p}return null}},{key:"getNextSibling",value:function(path){path=this.resolvePath(path);if(!path||!path.size)return null;
path=PathUtils.increment(path);return this.getNode(path)}},{key:"getNextText",value:function(path){path=this.resolvePath(path);return path&&path.size?(path=this.getNextNode(path))?path.getFirstText():null:null}},{key:"getNode",value:function(path){return(path=this.resolvePath(path))?path.size?this.getDescendant(path):this:null}},{key:"getOffset",value:function(key){this.assertDescendant(key);var child=this.getFurthestAncestor(key),offset=this.nodes.takeUntil(function(n){return n==child}).reduce(function(memo,
n){return memo+n.text.length},0);return this.hasChild(key)?offset:offset+child.getOffset(key)}},{key:"getOffsetAtRange",value:function(range){range=range.normalize(this);if(range.isUnset)throw Error("The range cannot be unset to calculcate its offset.");if(range.isExpanded)throw Error("The range must be collapsed to calculcate its offset.");var startOffset=range.startOffset;return this.getOffset(range.startKey)+startOffset}},{key:"getOrderedMarks",value:function(){var array=this.getMarksAsArray();
return new immutable.OrderedSet(array)}},{key:"getOrderedMarksAtRange",value:function(range){range=range.normalize(this);return range.isUnset?immutable.OrderedSet():range.isCollapsed?this.getMarksAtPosition(range.startKey,range.startOffset):this.getOrderedMarksBetweenPositions(range.startKey,range.startOffset,range.endKey,range.endOffset)}},{key:"getOrderedMarksBetweenPositions",value:function(startKey,startOffset,endKey,endOffset){if(startKey===endKey)return this.getDescendant(startKey).getMarksBetweenOffsets(startOffset,
endOffset);var texts=this.getTextsBetweenPositionsAsArray(startKey,endKey);return immutable.OrderedSet().withMutations(function(result){texts.forEach(function(text){text.key===startKey?result.union(text.getMarksBetweenOffsets(startOffset,text.text.length)):text.key===endKey?result.union(text.getMarksBetweenOffsets(0,endOffset)):result.union(text.getMarks())})})}},{key:"getOrderedMarksByType",value:function(type){type=this.getMarksByTypeAsArray(type);return new immutable.OrderedSet(type)}},{key:"getParent",
value:function(path){path=this.resolvePath(path);if(!path||!path.size)return null;path=PathUtils.lift(path);return this.getNode(path)}},{key:"getPath",value:function(key){return immutable.List.isList(key)?key:(key=this.getKeysToPathsTable()[key])?immutable.List(key):null}},{key:"getPreviousBlock",value:function(key){var child=this.assertDescendant(key);key="block"==child.object?child.getFirstText():this.getClosestBlock(key).getFirstText();return(key=this.getPreviousText(key.key))?this.getClosestBlock(key.key):
null}},{key:"getPreviousNode",value:function(path){path=this.resolvePath(path);if(!path||!path.size)return null;for(var i=path.size;0<i;i--){var p=path.slice(0,i);if(0!==p.last()&&(p=PathUtils.decrement(p),p=this.getNode(p)))return p}return null}},{key:"getPreviousSibling",value:function(path){path=this.resolvePath(path);if(!path||!path.size||0===path.last())return null;path=PathUtils.decrement(path);return this.getNode(path)}},{key:"getPreviousText",value:function(path){path=this.resolvePath(path);
return path&&path.size?(path=this.getPreviousNode(path))?path.getLastText():null:null}},{key:"getSelectionIndexes",value:function(range){var isSelected=1<arguments.length&&void 0!==arguments[1]?arguments[1]:!0,startKey=range.startKey,endKey=range.endKey;if(!isSelected||range.isUnset)return null;if(startKey==endKey)return isSelected=(isSelected=this.getFurthestAncestor(startKey))?this.nodes.indexOf(isSelected):null,{start:isSelected,end:isSelected+1};var start=null,end=null;this.nodes.forEach(function(child,
i){"text"==child.object?(null==start&&child.key==startKey&&(start=i),null==end&&child.key==endKey&&(end=i+1)):(null==start&&child.hasDescendant(startKey)&&(start=i),null==end&&child.hasDescendant(endKey)&&(end=i+1));return null==start||null==end});isSelected&&null==start&&(start=0);isSelected&&null==end&&(end=this.nodes.size);return null==start?null:{start:start,end:end}}},{key:"getText",value:function(){return this.nodes.reduce(function(string,node){return string+node.text},"")}},{key:"getTextAtOffset",
value:function(offset){if(0===offset)return this.getFirstText();if(offset===this.text.length)return this.getLastText();if(0>offset||offset>this.text.length)return null;var length=0;return this.getTexts().find(function(node,i,nodes){length+=node.text.length;return length>offset})}},{key:"getTextDirection",value:function(){var dir=direction(this.text);return"neutral"===dir?null:dir}},{key:"getTexts",value:function(){var array=this.getTextsAsArray();return new immutable.List(array)}},{key:"getTextsAsArray",
value:function(){var array=[];this.nodes.forEach(function(node){"text"==node.object?array.push(node):array=array.concat(node.getTextsAsArray())});return array}},{key:"getTextsAtRange",value:function(range){range=range.normalize(this);return range.isUnset?immutable.List():new immutable.List(this.getTextsBetweenPositionsAsArray(range.startKey,range.endKey))}},{key:"getTextsAtRangeAsArray",value:function(range){range=range.normalize(this);return range.isUnset?[]:this.getTextsBetweenPositionsAsArray(range.startKey,
range.endKey)}},{key:"getTextsBetweenPositionsAsArray",value:function(startKey,endKey){var startText=this.getDescendant(startKey);if(startKey==endKey)return[startText];endKey=this.getDescendant(endKey);startKey=this.getTextsAsArray();startText=startKey.indexOf(startText);endKey=startKey.indexOf(endKey,startText);return startKey.slice(startText,endKey+1)}},{key:"hasBlockChildren",value:function(){return!(!this.nodes||!this.nodes.find(function(n){return"block"===n.object}))}},{key:"hasChild",value:function(path){return!!this.getChild(path)}},
{key:"hasInlineChildren",value:function(){return!(!this.nodes||!this.nodes.find(function(n){return"inline"===n.object||"text"===n.object}))}},{key:"hasDescendant",value:function(path){return!!this.getDescendant(path)}},{key:"hasNode",value:function(path){return!!this.getNode(path)}},{key:"hasVoidParent",value:function(path){return!!this.getClosestVoid(path)}},{key:"insertNode",value:function(path,node){path=this.resolvePath(path);var index=path.last();path=PathUtils.lift(path);var parent=this.assertNode(path);
node=parent.nodes.splice(index,0,node);parent=parent.set("nodes",node);return this.replaceNode(path,parent)}},{key:"insertText",value:function(path,offset,text,marks){var node=this.assertDescendant(path);path=this.resolvePath(path);node=node.insertText(offset,text,marks);return this.replaceNode(path,node)}},{key:"isLeafBlock",value:function(){return"block"===this.object&&this.nodes.every(function(n){return"block"!==n.object})}},{key:"isLeafInline",value:function(){return"inline"===this.object&&this.nodes.every(function(n){return"inline"!==
n.object})}},{key:"mapChildren",value:function(iterator){var _this5=this,nodes=this.nodes;nodes.forEach(function(node,i){i=iterator(node,i,_this5.nodes);i!==node&&(nodes=nodes.set(i.key,i))});return this.set("nodes",nodes)}},{key:"mapDescendants",value:function(iterator){var _this6=this,nodes=this.nodes;nodes.forEach(function(node,index){var ret=node;"text"!==ret.object&&(ret=ret.mapDescendants(iterator));ret=iterator(ret,index,_this6.nodes);ret!==node&&(nodes=nodes.set(index,ret))});return this.set("nodes",
nodes)}},{key:"mergeNode",value:function(path){var b=this.assertNode(path);path=this.resolvePath(path);if(0===path.last())throw Error("Unable to merge node because it has no previous sibling: "+b);var withPath=PathUtils.decrement(path),a=this.assertNode(withPath);if(a.object!==b.object)throw Error("Unable to merge two different kinds of nodes: "+a+" and "+b);b="text"===a.object?a.mergeText(b):a.set("nodes",a.nodes.concat(b.nodes));path=this.removeNode(path);path=path.removeNode(withPath);return path=
path.insertNode(withPath,b)}},{key:"moveNode",value:function(path,newPath){var newIndex=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,node=this.assertNode(path);path=this.resolvePath(path);newPath=this.resolvePath(newPath,newIndex);newIndex=PathUtils.lift(newPath);this.assertNode(newIndex);newIndex=PathUtils.crop(path,newPath);var _PathUtils$crop2=slicedToArray(newIndex,2);newIndex=_PathUtils$crop2[0];_PathUtils$crop2=PathUtils.compare(newIndex,_PathUtils$crop2[1]);path.size<newPath.size&&
-1===_PathUtils$crop2&&(newPath=PathUtils.decrement(newPath,1,newIndex.size-1));newIndex=this.removeNode(path);return newIndex=newIndex.insertNode(newPath,node)}},{key:"refindNode",value:function(path,key){return(path=this.getDescendant(path))&&path.key===key?path:this.getDescendant(key)}},{key:"refindPath",value:function(path,key){var node=this.getDescendant(path);return node&&node.key===key?path:this.getPath(key)}},{key:"regenerateKey",value:function(){var key=KeyUtils.create();return this.set("key",
key)}},{key:"removeMark",value:function(path,offset,length,mark){var node=this.assertDescendant(path);path=this.resolvePath(path);node=node.removeMark(offset,length,mark);return this.replaceNode(path,node)}},{key:"removeNode",value:function(path){this.assertDescendant(path);path=this.resolvePath(path);path=path.flatMap(function(x){return immutable.List(["nodes",x])});return this.deleteIn(path)}},{key:"removeText",value:function(path,offset,text){var node=this.assertDescendant(path);node=node.removeText(offset,
text.length);return this.replaceNode(path,node)}},{key:"replaceNode",value:function(path,node){path=this.resolvePath(path);if(!path)throw Error("Unable to replace a node because it could not be found in the first place: "+path);if(!path.size)return node;this.assertNode(path);path=path.flatMap(function(x){return immutable.List(["nodes",x])});return this.setIn(path,node)}},{key:"resolvePath",value:function(path,index){"string"===typeof path?(path=this.getPath(path),null!=index&&(path=path.concat(index))):
path=PathUtils.create(path);return path}},{key:"setNode",value:function(path,properties){var node=this.assertNode(path);node=node.merge(properties);return this.replaceNode(path,node)}},{key:"setMark",value:function(path,offset,length,mark,properties){var node=this.assertNode(path);node=node.updateMark(offset,length,mark,properties);return this.replaceNode(path,node)}},{key:"splitNode",value:function(path,position,properties){var child=this.assertNode(path);path=this.resolvePath(path);if("text"===
child.object){var a=child.splitText(position);position=slicedToArray(a,2);a=position[0];position=position[1]}else a=child.nodes.take(position),position=child.nodes.skip(position),a=child.set("nodes",a),position=child.set("nodes",position).regenerateKey();properties&&"text"!==child.object&&(position=position.merge(properties));properties=this.removeNode(path);properties=properties.insertNode(path,position);return properties=properties.insertNode(path,a)}},{key:"normalize",value:function(schema){return schema.normalizeNode(this)}},
{key:"validate",value:function(schema){return schema.validateNode(this)}},{key:"getNodeAtPath",value:function(path){logger.deprecate("0.35.0","The `Node.getNodeAtPath` method has been combined into `Node.getNode`.");return this.getNode(path)}},{key:"getDescendantAtPath",value:function(path){logger.deprecate("0.35.0","The `Node.getDescendantAtPath` has been combined into `Node.getDescendant`.");return this.getDescendant(path)}},{key:"getKeys",value:function(){logger.deprecate("0.35.0","The `Node.getKeys` method is deprecated.");
var keys=this.getKeysAsArray();return new immutable.Set(keys)}},{key:"getKeysAsArray",value:function(){logger.deprecate("0.35.0","The `Node.getKeysAsArray` method is deprecated.");var dict=this.getKeysToPathsTable(),keys=[],key;for(key in dict)this.key!==key&&keys.push(key);return keys}},{key:"areDescendantsSorted",value:function(first,second){var _this7=this;logger.deprecate("0.35.0","The `Node.areDescendantsSorted` method is deprecated. Use the new `PathUtils.compare` helper instead.");first=KeyUtils.create(first);
second=KeyUtils.create(second);var keys=this.getKeysAsArray().filter(function(k){return k!==_this7.key});first=keys.indexOf(first);second=keys.indexOf(second);return-1==first||-1==second?null:first<second}},{key:"isInRange",value:function(range){logger.deprecate("0.35.0","The `Node.isInRange` method is deprecated. Use the new `PathUtils.compare` helper instead.");range=range.normalize(this);var node=this,_range11=range,startKey=_range11.startKey,endKey=_range11.endKey;_range11=_range11.isCollapsed;
if(node.key==startKey||node.key==endKey||node.hasDescendant(startKey)||node.hasDescendant(endKey))return!0;if(_range11)return!1;var memo=!1;node.getTextsAtRange(range).forEach(function(text){node.hasDescendant(text.key)&&(memo=!0);return memo});return memo}}],[{key:"create",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Node.isNode(attrs))return attrs;if(isPlainObject(attrs)){var object=attrs.object;!object&&attrs.kind&&(logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`."),
object=attrs.kind);switch(object){case "block":return Block.create(attrs);case "document":return Document$jscomp$0.create(attrs);case "inline":return Inline.create(attrs);case "text":return Text$jscomp$0.create(attrs);default:throw Error("`Node.create` requires a `object` string.");}}throw Error("`Node.create` only accepts objects or nodes but you passed it: "+attrs);}},{key:"createList",value:function(){var elements=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];if(immutable.List.isList(elements)||
Array.isArray(elements))return immutable.List(elements.map(Node.create));throw Error("`Node.createList` only accepts lists or arrays, but you passed it: "+elements);}},{key:"createProperties",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Block.isBlock(attrs)||Inline.isInline(attrs))return{data:attrs.data,isVoid:attrs.isVoid,type:attrs.type};if("string"==typeof attrs)return{type:attrs};if(isPlainObject(attrs)){var props={};"type"in attrs&&(props.type=attrs.type);
"data"in attrs&&(props.data=Data.create(attrs.data));"isVoid"in attrs&&(props.isVoid=attrs.isVoid);return props}throw Error("`Node.createProperties` only accepts objects, strings, blocks or inlines, but you passed it: "+attrs);}},{key:"fromJSON",value:function(value){var object=value.object;!object&&value.kind&&(logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`."),object=value.kind);switch(object){case "block":return Block.fromJSON(value);case "document":return Document$jscomp$0.fromJSON(value);
case "inline":return Inline.fromJSON(value);case "text":return Text$jscomp$0.fromJSON(value);default:throw Error("`Node.fromJSON` requires an `object` of either 'block', 'document', 'inline' or 'text', but you passed: "+value);}}},{key:"isNode",value:function(any){return!!["BLOCK","DOCUMENT","INLINE","TEXT"].find(function(type){return isType(type,any)})}},{key:"isNodeList",value:function(any){return immutable.List.isList(any)&&any.every(function(item){return Node.isNode(item)})}}]);return Node}();
Node$jscomp$0.fromJS=Node$jscomp$0.fromJSON;var ASSERTS="Child Depth Descendant Node Parent Path".split(" "),_loop=function(method){Node$jscomp$0.prototype["assert"+method]=function(path){for(var _len3=arguments.length,args=Array(1<_len3?_len3-1:0),_key3=1;_key3<_len3;_key3++)args[_key3-1]=arguments[_key3];_len3=this["get"+method].apply(this,[path].concat(args));if(null==_len3)throw Error("`Node.assert"+method+"` could not find node with path or key: "+path);return _len3}},_iteratorNormalCompletion2=
!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=ASSERTS[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0)_loop(_step2.value)}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{!_iteratorNormalCompletion2&&_iterator2.return&&_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2;}}memoize(Node$jscomp$0.prototype,"getBlocksAsArray getBlocksAtRangeAsArray getBlocksByTypeAsArray getDecorations getFirstInvalidDescendant getFirstText getFragmentAtRange getInlinesAsArray getInlinesAtRangeAsArray getInlinesByTypeAsArray getMarksAsArray getMarksAtPosition getOrderedMarksBetweenPositions getInsertMarksAtRange getKeysToPathsTable getLastText getMarksByTypeAsArray getNextBlock getOffset getOffsetAtRange getPreviousBlock getText getTextAtOffset getTextDirection getTextsAsArray getTextsBetweenPositionsAsArray isLeafBlock isLeafInline normalize validate".split(" "));
Object.getOwnPropertyNames(Node$jscomp$0.prototype).forEach(function(method){"constructor"!==method&&(Block.prototype[method]=Node$jscomp$0.prototype[method],Inline.prototype[method]=Node$jscomp$0.prototype[method],Document$jscomp$0.prototype[method]=Node$jscomp$0.prototype[method])});Block.createChildren=Node$jscomp$0.createList;Inline.createChildren=Node$jscomp$0.createList;Document$jscomp$0.createChildren=Node$jscomp$0.createList;var SPACE=/\s/,CHAMELEON=/['\u2018\u2019]/,PUNCTUATION=/[\u0021-\u0023\u0025-\u002A\u002C-\u002F\u003A\u003B\u003F\u0040\u005B-\u005D\u005F\u007B\u007D\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E3B\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/,
TextUtils={getCharLength:getCharLength,getCharOffset:getCharOffset,getCharOffsetBackward:function(text,offset){text=text.slice(0,offset);text=esrever.reverse(text);return getCharOffset(text)},getCharOffsetForward:function(text,offset){text=text.slice(offset);return getCharOffset(text)},getWordOffset:getWordOffset,getWordOffsetBackward:function(text,offset){text=text.slice(0,offset);text=esrever.reverse(text);return getWordOffset(text)},getWordOffsetForward:function(text,offset){text=text.slice(offset);
return getWordOffset(text)},isSurrogate:isSurrogate,isWord:isWord},Changes$1={addMarkAtRange:function(change,range,mark){if(!range.isCollapsed){var normalize=change.getFlag("normalize",3<arguments.length&&void 0!==arguments[3]?arguments[3]:{}),startKey=range.startKey,startOffset=range.startOffset,endKey=range.endKey,endOffset=range.endOffset;change.value.document.getTextsAtRange(range).forEach(function(node){var key=node.key,index=0;node=node.text.length;key==startKey&&(index=startOffset);key==endKey&&
(node=endOffset);key==startKey&&key==endKey&&(node=endOffset-startOffset);change.addMarkByKey(key,index,node,mark,{normalize:normalize})})}},addMarksAtRange:function(change,range,marks){var options=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};marks.forEach(function(mark){return change.addMarkAtRange(range,mark,options)})},deleteAtRange:function(change,range){var options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};if(!range.isCollapsed){change.snapshotSelection();options=
change.getFlag("normalize",options);var startKey=range.startKey,startOffset=range.startOffset,endKey=range.endKey,endOffset=range.endOffset,document=change.value.document,isStartVoid=document.hasVoidParent(startKey),isEndVoid=document.hasVoidParent(endKey),startBlock=document.getClosestBlock(startKey),endBlock=document.getClosestBlock(endKey),isHanging=0==startOffset&&0==endOffset&&0==isStartVoid&&startKey==startBlock.getFirstText().key&&endKey==endBlock.getFirstText().key;isHanging&&isEndVoid&&(endOffset=
document.getPreviousText(endKey),endKey=endOffset.key,endOffset=endOffset.text.length,isEndVoid=document.hasVoidParent(endKey));for(;isStartVoid;){startOffset=document.getClosestVoid(startKey);endBlock=document.getNextText(startKey);change.removeNodeByKey(startOffset.key,{normalize:!1});if(startKey==endKey||!endBlock)return;document=change.value.document;startKey=endBlock.key;startOffset=0;isStartVoid=document.hasVoidParent(startKey)}for(;isEndVoid;)endOffset=document.getClosestVoid(endKey),endBlock=
document.getPreviousText(endKey),change.removeNodeByKey(endOffset.key,{normalize:!1}),document=change.value.document,endKey=endBlock.key,endOffset=endBlock.text.length,isEndVoid=document.hasVoidParent(endKey);if(startKey==endKey&&isHanging)change.removeNodeByKey(startBlock.key,{normalize:options});else if(startKey==endKey)change.removeTextByKey(startKey,startOffset,endOffset-startOffset,{normalize:options});else{startBlock=document.getClosestBlock(startKey);endBlock=document.getClosestBlock(endKey);
var startText=document.getNode(startKey),endText=document.getNode(endKey),startLength=startText.text.length-startOffset,endLength=endOffset;isEndVoid=document.getCommonAncestor(startKey,endKey);var startChild=isEndVoid.getFurthestAncestor(startKey),endChild=isEndVoid.getFurthestAncestor(endKey);isStartVoid=document.getParent(startBlock.key);var startParentIndex=isStartVoid.nodes.indexOf(startBlock),endParentIndex=isStartVoid.nodes.indexOf(endBlock),child=void 0;for(child=startText;child.key!=startChild.key;)startText=
document.getParent(child.key),child=startText.nodes.indexOf(child),startText.nodes.slice(child+1).reverse().forEach(function(node){change.removeNodeByKey(node.key,{normalize:!1})}),child=startText;startChild=isEndVoid.nodes.indexOf(startChild);child=isEndVoid.nodes.indexOf(endChild);isEndVoid.nodes.slice(startChild+1,child).reverse().forEach(function(node){change.removeNodeByKey(node.key,{normalize:!1})});for(child=endText;child.key!=endChild.key;)endText=document.getParent(child.key),startChild=
endText.nodes.indexOf(child),endText.nodes.slice(0,startChild).reverse().forEach(function(node){change.removeNodeByKey(node.key,{normalize:!1})}),child=endText;0!=startLength&&change.removeTextByKey(startKey,startOffset,startLength,{normalize:!1});0!=endLength&&change.removeTextByKey(endKey,0,endOffset,{normalize:!1});startBlock.key!=endBlock.key&&(document=change.value.document,startKey=document.getFurthestOnlyChildAncestor(endBlock.key),endParentIndex!=startParentIndex+1&&change.moveNodeByKey(endBlock.key,
isStartVoid.key,startParentIndex+1,{normalize:!1}),isHanging?change.removeNodeByKey(startBlock.key,{normalize:!1}):change.mergeNodeByKey(endBlock.key,{normalize:!1}),startKey&&change.removeNodeByKey(startKey.key,{normalize:!1}));options&&change.normalizeNodeByKey(isEndVoid.key)}}},deleteCharBackwardAtRange:function(change,range,options){var startKey=range.startKey,startOffset=range.startOffset,startBlock=change.value.document.getClosestBlock(startKey);startKey=startBlock.getOffset(startKey);startOffset=
TextUtils.getCharOffsetBackward(startBlock.text,startKey+startOffset);change.deleteBackwardAtRange(range,startOffset,options)},deleteLineBackwardAtRange:function(change,range,options){var startKey=range.startKey,startOffset=range.startOffset;startKey=change.value.document.getClosestBlock(startKey).getOffset(startKey);change.deleteBackwardAtRange(range,startKey+startOffset,options)},deleteWordBackwardAtRange:function(change,range,options){var startKey=range.startKey,startOffset=range.startOffset,startBlock=
change.value.document.getClosestBlock(startKey);startKey=startBlock.getOffset(startKey);startOffset=TextUtils.getWordOffsetBackward(startBlock.text,startKey+startOffset);change.deleteBackwardAtRange(range,startOffset,options)},deleteBackwardAtRange:function(change,range){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1;if(0!==n){var normalize=change.getFlag("normalize",3<arguments.length&&void 0!==arguments[3]?arguments[3]:{}),document=change.value.document,_range=range,startKey=_range.startKey;
_range=_range.focusOffset;if(range.isExpanded)change.deleteAtRange(range,{normalize:normalize});else{var voidParent=document.getClosestVoid(startKey);if(voidParent)change.removeNodeByKey(voidParent.key,{normalize:normalize});else if((voidParent=document.getClosestBlock(startKey))&&voidParent.isEmpty&&1!==document.nodes.size)change.removeNodeByKey(voidParent.key,{normalize:normalize});else if(!range.isAtStartOf(document)){startKey=document.getDescendant(startKey);if(range.isAtStartOf(startKey)){var prev=
document.getPreviousText(startKey.key),prevBlock=document.getClosestBlock(prev.key),prevVoid=document.getClosestVoid(prev.key);if(prevVoid){change.removeNodeByKey(prevVoid.key,{normalize:normalize});return}if(1==n&&prevBlock!=voidParent){range=range.merge({anchorKey:prev.key,anchorOffset:prev.text.length});change.deleteAtRange(range,{normalize:normalize});return}}if(n<_range)range=range.merge({focusOffset:_range-n,isBackward:!0});else{voidParent=startKey;for(startKey=0;n>_range;)if(voidParent=document.getPreviousText(voidParent.key),
_range+=voidParent.text.length,n<=_range){startKey=_range-n;break}range=range.merge({focusKey:voidParent.key,focusOffset:startKey,isBackward:!0})}change.deleteAtRange(range,{normalize:normalize})}}}},deleteCharForwardAtRange:function(change,range,options){var startKey=range.startKey,startOffset=range.startOffset,startBlock=change.value.document.getClosestBlock(startKey);startKey=startBlock.getOffset(startKey);startOffset=TextUtils.getCharOffsetForward(startBlock.text,startKey+startOffset);change.deleteForwardAtRange(range,
startOffset,options)},deleteLineForwardAtRange:function(change,range,options){var startKey=range.startKey,startOffset=range.startOffset,startBlock=change.value.document.getClosestBlock(startKey);startKey=startBlock.getOffset(startKey);change.deleteForwardAtRange(range,startBlock.text.length-(startKey+startOffset),options)},deleteWordForwardAtRange:function(change,range,options){var startKey=range.startKey,startOffset=range.startOffset,startBlock=change.value.document.getClosestBlock(startKey);startKey=
startBlock.getOffset(startKey);startOffset=TextUtils.getWordOffsetForward(startBlock.text,startKey+startOffset);change.deleteForwardAtRange(range,startOffset,options)},deleteForwardAtRange:function(change,range){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1;if(0!==n){var normalize=change.getFlag("normalize",3<arguments.length&&void 0!==arguments[3]?arguments[3]:{}),document=change.value.document,_range2=range,startKey=_range2.startKey;_range2=_range2.focusOffset;if(range.isExpanded)change.deleteAtRange(range,
{normalize:normalize});else{var voidParent=document.getClosestVoid(startKey);if(voidParent)change.removeNodeByKey(voidParent.key,{normalize:normalize});else if((voidParent=document.getClosestBlock(startKey))&&voidParent.isEmpty&&1!==document.nodes.size)n=document.getNextBlock(voidParent.key),change.removeNodeByKey(voidParent.key,{normalize:normalize}),n&&n.key&&change.moveToStartOf(n);else if(!range.isAtEndOf(document)){startKey=document.getDescendant(startKey);if(range.isAtEndOf(startKey)){var next=
document.getNextText(startKey.key),_nextBlock=document.getClosestBlock(next.key),nextVoid=document.getClosestVoid(next.key);if(nextVoid){change.removeNodeByKey(nextVoid.key,{normalize:normalize});return}if(1==n&&_nextBlock!=voidParent){range=range.merge({focusKey:next.key,focusOffset:0});change.deleteAtRange(range,{normalize:normalize});return}}if(n<=startKey.text.length-_range2)range=range.merge({focusOffset:_range2+n});else{voidParent=startKey;next=_range2;for(_range2=startKey.text.length-_range2;n>
_range2;)if(voidParent=document.getNextText(voidParent.key),startKey=_range2+voidParent.text.length,n<=startKey){next=n-_range2;break}else _range2=startKey;range=range.merge({focusKey:voidParent.key,focusOffset:next})}change.deleteAtRange(range,{normalize:normalize})}}}},insertBlockAtRange:function(change,range,block){var options=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};block=Block.create(block);options=change.getFlag("normalize",options);range.isExpanded&&(change.deleteAtRange(range),
range=range.collapseToStart());var document=change.value.document,_range3=range,startKey=_range3.startKey,startOffset=_range3.startOffset,startBlock=document.getClosestBlock(startKey),startInline=document.getClosestInline(startKey);_range3=document.getParent(startBlock.key);var index=_range3.nodes.indexOf(startBlock);startBlock.isVoid?(startKey=range.isAtEndOf(startBlock)?1:0,change.insertNodeByKey(_range3.key,index+startKey,block,{normalize:options})):startBlock.isEmpty?change.insertNodeByKey(_range3.key,
index+1,block,{normalize:options}):range.isAtStartOf(startBlock)?change.insertNodeByKey(_range3.key,index,block,{normalize:options}):(range.isAtEndOf(startBlock)||(startInline&&startInline.isVoid&&(startKey=(startOffset=range.isAtEndOf(startInline))?document.getNextText(startKey):document.getPreviousText(startKey),document=startOffset?range.moveToStartOf(startKey):range.moveToEndOf(startKey),startKey=document.startKey,startOffset=document.startOffset),change.splitDescendantsByKey(startBlock.key,startKey,
startOffset,{normalize:!1})),change.insertNodeByKey(_range3.key,index+1,block,{normalize:options}));options&&change.normalizeNodeByKey(_range3.key)},insertFragmentAtRange:function(change,range,fragment){var options=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{},normalize=change.getFlag("normalize",options);range.isExpanded&&(change.deleteAtRange(range,{normalize:!1}),range=change.value.document.getDescendant(range.startKey)?range.collapseToStart():range.collapseTo(range.endKey,0));if(fragment.nodes.size){fragment=
fragment.mapDescendants(function(child){return child.regenerateKey()});var _range4=range,startKey=_range4.startKey,startOffset=_range4.startOffset,document=change.value.document,startText=document.getDescendant(startKey),startBlock=document.getClosestBlock(startText.key),startChild=startBlock.getFurthestAncestor(startText.key),isAtStart=range.isAtStartOf(startBlock),parent=document.getParent(startBlock.key),index=parent.nodes.indexOf(startBlock);startText=fragment.getBlocks();document=fragment.nodes.first();
var lastChild=fragment.nodes.last();_range4=startText.first();var lastBlock=startText.last();if(_range4==lastBlock&&_range4.isVoid)change.insertBlockAtRange(range,_range4,options);else if(document.hasBlockChildren()||lastChild.hasBlockChildren())fragment.nodes.reverse().forEach(function(node){change.insertBlockAtRange(range,node,options)});else{if(_range4!=lastBlock){startText=fragment.getFurthest(_range4.key,function(p){return 1==p.nodes.size})||_range4;var startIndex=parent.nodes.indexOf(startBlock);
fragment=fragment.removeNode(startText.key);fragment.nodes.forEach(function(node,i){change.insertNodeByKey(parent.key,startIndex+i+1,node,{normalize:!1})})}0!=startOffset&&change.splitDescendantsByKey(startChild.key,startKey,startOffset,{normalize:!1});document=change.value.document;startText=document.getDescendant(startKey);startBlock=document.getClosestBlock(startKey);startChild=startBlock.getFurthestAncestor(startText.key);if(_range4!=lastBlock){var nextChild=isAtStart?startChild:startBlock.getNextSibling(startChild.key);
startKey=nextChild?startBlock.nodes.skipUntil(function(n){return n.key==nextChild.key}):immutable.List();var lastIndex=lastBlock.nodes.size;startKey.forEach(function(node,i){change.moveNodeByKey(node.key,lastBlock.key,lastIndex+i,{normalize:!1})})}if(startBlock.isEmpty)change.removeNodeByKey(startBlock.key,{normalize:!1}),change.insertNodeByKey(parent.key,index,_range4,{normalize:!1});else{startKey=startBlock.getFurthestAncestor(startText.key);var inlineIndex=startBlock.nodes.indexOf(startKey);_range4.nodes.forEach(function(inline,
i){change.insertNodeByKey(startBlock.key,inlineIndex+i+(0==startOffset?0:1),inline,{normalize:!1})})}normalize&&change.normalizeNodeByKey(parent.key)}}},insertInlineAtRange:function(change,range,inline){var normalize=change.getFlag("normalize",3<arguments.length&&void 0!==arguments[3]?arguments[3]:{});inline=Inline.create(inline);range.isExpanded&&(change.deleteAtRange(range,{normalize:!1}),range=range.collapseToStart());var document=change.value.document,_range5=range,startKey=_range5.startKey;_range5=
_range5.startOffset;var parent=document.getParent(startKey);document=document.assertDescendant(startKey);document=parent.nodes.indexOf(document);parent.isVoid||(change.splitNodeByKey(startKey,_range5,{normalize:!1}),change.insertNodeByKey(parent.key,document+1,inline,{normalize:!1}),normalize&&change.normalizeNodeByKey(parent.key))},insertTextAtRange:function(change,range,text,marks){var normalize=(4<arguments.length&&void 0!==arguments[4]?arguments[4]:{}).normalize,document=change.value.document,
startKey=range.startKey,key=startKey,offset=range.startOffset;document.getParent(startKey).isVoid||(range.isExpanded&&(change.deleteAtRange(range,{normalize:!1}),change.value.startKey!==key&&(key=change.value.startKey,offset=change.value.startOffset)),void 0===normalize&&(normalize=range.isExpanded&&marks&&0!==marks.size),change.insertTextByKey(key,offset,text,marks,{normalize:!1}),normalize&&(normalize=document.getCommonAncestor(startKey,range.endKey),document=document.getAncestors(normalize.key).push(normalize).findLast(function(n){return change.value.document.getDescendant(n.key)}),
change.normalizeNodeByKey(document?document.key:startKey)))},removeMarkAtRange:function(change,range,mark){if(!range.isCollapsed){var normalize=change.getFlag("normalize",3<arguments.length&&void 0!==arguments[3]?arguments[3]:{}),texts=change.value.document.getTextsAtRange(range),startKey=range.startKey,startOffset=range.startOffset,endKey=range.endKey,endOffset=range.endOffset;texts.forEach(function(node){var key=node.key,index=0;node=node.text.length;key==startKey&&(index=startOffset);key==endKey&&
(node=endOffset);key==startKey&&key==endKey&&(node=endOffset-startOffset);change.removeMarkByKey(key,index,node,mark,{normalize:normalize})})}},setBlocksAtRange:function(change,range,properties){var normalize=change.getFlag("normalize",3<arguments.length&&void 0!==arguments[3]?arguments[3]:{}),document=change.value.document,blocks=document.getBlocksAtRange(range),startKey=range.startKey,startOffset=range.startOffset,endKey=range.endKey,endOffset=range.endOffset,isCollapsed=range.isCollapsed,isStartVoid=
document.hasVoidParent(startKey),startBlock=document.getClosestBlock(startKey);document=document.getClosestBlock(endKey);(0==isCollapsed&&0==startOffset&&0==endOffset&&0==isStartVoid&&startKey==startBlock.getFirstText().key&&endKey==document.getFirstText().key?blocks.slice(0,-1):blocks).forEach(function(block){change.setNodeByKey(block.key,properties,{normalize:normalize})})},setBlockAtRange:function(){logger.deprecate("slate@0.33.0","The `setBlockAtRange` method of Slate changes has been renamed to `setBlocksAtRange`.");
Changes$1.setBlocksAtRange.apply(Changes$1,arguments)},setInlinesAtRange:function(change,range,properties){var normalize=change.getFlag("normalize",3<arguments.length&&void 0!==arguments[3]?arguments[3]:{});change.value.document.getInlinesAtRange(range).forEach(function(inline){change.setNodeByKey(inline.key,properties,{normalize:normalize})})},setInlineAtRange:function(){logger.deprecate("slate@0.33.0","The `setInlineAtRange` method of Slate changes has been renamed to `setInlinesAtRange`.");Changes$1.setInlinesAtRange.apply(Changes$1,
arguments)},splitBlockAtRange:function(change,range){var height=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,normalize=change.getFlag("normalize",3<arguments.length&&void 0!==arguments[3]?arguments[3]:{}),_range6=range,startKey=_range6.startKey,startOffset=_range6.startOffset,endOffset=_range6.endOffset;_range6=_range6.endKey;for(var document=change.value.document,node=document.assertDescendant(startKey),parent=document.getClosestBlock(node.key),h=0;parent&&"block"==parent.object&&h<height;)node=
parent,parent=document.getClosestBlock(parent.key),h++;change.splitDescendantsByKey(node.key,startKey,startOffset,{normalize:normalize&&range.isCollapsed});range.isExpanded&&(range.isBackward&&(range=range.flip()),height=change.value.document.getNextBlock(node.key),range=range.moveAnchorToStartOf(height),startKey===_range6&&(range=range.moveFocusTo(range.anchorKey,endOffset-startOffset)),change.deleteAtRange(range,{normalize:normalize}))},splitInlineAtRange:function(change,range){var height=2<arguments.length&&
void 0!==arguments[2]?arguments[2]:Infinity,normalize=change.getFlag("normalize",3<arguments.length&&void 0!==arguments[3]?arguments[3]:{});range.isExpanded&&(change.deleteAtRange(range,{normalize:normalize}),range=range.collapseToStart());var _range7=range,startKey=_range7.startKey;_range7=_range7.startOffset;for(var document=change.value.document,node=document.assertDescendant(startKey),parent=document.getClosestInline(node.key),h=0;parent&&"inline"==parent.object&&h<height;)node=parent,parent=
document.getClosestInline(parent.key),h++;change.splitDescendantsByKey(node.key,startKey,_range7,{normalize:normalize})},toggleMarkAtRange:function(change,range,mark){var options=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};range.isCollapsed||(mark=Mark.create(mark),options=change.getFlag("normalize",options),change.value.document.getActiveMarksAtRange(range).some(function(m){return m.equals(mark)})?change.removeMarkAtRange(range,mark,{normalize:options}):change.addMarkAtRange(range,
mark,{normalize:options}))},unwrapBlockAtRange:function(change,range,properties){var options=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};properties=Node$jscomp$0.createProperties(properties);options=change.getFlag("normalize",options);var document=change.value.document,blocks=document.getBlocksAtRange(range);blocks.map(function(block){return document.getClosest(block.key,function(parent){return"block"!=parent.object||null!=properties.type&&parent.type!=properties.type||null!=properties.isVoid&&
parent.isVoid!=properties.isVoid||null!=properties.data&&!parent.data.isSuperset(properties.data)?!1:!0})}).filter(function(exists){return exists}).toOrderedSet().toList().forEach(function(block){var first=block.nodes.first(),last=block.nodes.last(),parent=document.getParent(block.key),index=parent.nodes.indexOf(block),children=block.nodes.filter(function(child){return blocks.some(function(b){return child==b||child.hasDescendant(b.key)})}),firstMatch=children.first(),lastMatch=children.last();first==
firstMatch&&last==lastMatch?(block.nodes.forEach(function(child,i){change.moveNodeByKey(child.key,parent.key,index+i,{normalize:!1})}),change.removeNodeByKey(block.key,{normalize:!1})):last==lastMatch?block.nodes.skipUntil(function(n){return n==firstMatch}).forEach(function(child,i){change.moveNodeByKey(child.key,parent.key,index+1+i,{normalize:!1})}):first==firstMatch?block.nodes.takeUntil(function(n){return n==lastMatch}).push(lastMatch).forEach(function(child,i){change.moveNodeByKey(child.key,
parent.key,index+i,{normalize:!1})}):(first=firstMatch.getFirstText(),change.splitDescendantsByKey(block.key,first.key,0,{normalize:!1}),document=change.value.document,children.forEach(function(child,i){if(0==i){var extra=child;child=document.getNextBlock(child.key);change.removeNodeByKey(extra.key,{normalize:!1})}change.moveNodeByKey(child.key,parent.key,index+1+i,{normalize:!1})}))});options&&change.normalizeDocument()},unwrapInlineAtRange:function(change,range,properties){var options=3<arguments.length&&
void 0!==arguments[3]?arguments[3]:{};properties=Node$jscomp$0.createProperties(properties);options=change.getFlag("normalize",options);var document=change.value.document;document.getTextsAtRange(range).map(function(text){return document.getClosest(text.key,function(parent){return"inline"!=parent.object||null!=properties.type&&parent.type!=properties.type||null!=properties.isVoid&&parent.isVoid!=properties.isVoid||null!=properties.data&&!parent.data.isSuperset(properties.data)?!1:!0})}).filter(function(exists){return exists}).toOrderedSet().toList().forEach(function(inline){var parent=
change.value.document.getParent(inline.key),index=parent.nodes.indexOf(inline);inline.nodes.forEach(function(child,i){change.moveNodeByKey(child.key,parent.key,index+i,{normalize:!1})})});options&&change.normalizeDocument()},wrapBlockAtRange:function(change,range,block){var options=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};block=Block.create(block);block=block.set("nodes",block.nodes.clear());options=change.getFlag("normalize",options);var document=change.value.document,blocks=document.getBlocksAtRange(range),
firstblock=blocks.first(),lastblock=blocks.last(),parent=void 0,siblings=void 0,index=void 0;1===blocks.length?(parent=document.getParent(firstblock.key),siblings=blocks):parent=document.getClosest(firstblock.key,function(p1){return!!document.getClosest(lastblock.key,function(p2){return p1==p2})});null==parent&&(parent=document);null==siblings&&(blocks=parent.nodes.reduce(function(ind,node,i){if(node==firstblock||node.hasDescendant(firstblock.key))ind[0]=i;if(node==lastblock||node.hasDescendant(lastblock.key))ind[1]=
i;return ind},[]),index=blocks[0],siblings=parent.nodes.slice(blocks[0],blocks[1]+1));null==index&&(index=parent.nodes.indexOf(siblings.first()));change.insertNodeByKey(parent.key,index,block,{normalize:!1});siblings.forEach(function(node,i){change.moveNodeByKey(node.key,block.key,i,{normalize:!1})});options&&change.normalizeNodeByKey(parent.key)},wrapInlineAtRange:function(change,range,inline){var options=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{},document=change.value.document,normalize=
change.getFlag("normalize",options),startKey=range.startKey,startOffset=range.startOffset,endKey=range.endKey,endOffset=range.endOffset;if(range.isCollapsed)return startOffset=document.getClosestInline(startKey),startOffset.isVoid?change.wrapInlineByKey(startOffset.key,inline,options):void 0;inline=Inline.create(inline);inline=inline.set("nodes",inline.nodes.clear());var blocks=document.getBlocksAtRange(range);options=document.getClosestBlock(startKey);var endBlock=document.getClosestBlock(endKey),
startInline=document.getClosestInline(startKey),endInline=document.getClosestInline(endKey),startChild=options.getFurthestAncestor(startKey),endChild=endBlock.getFurthestAncestor(endKey);startInline&&startInline==endInline||(change.splitDescendantsByKey(endChild.key,endKey,endOffset,{normalize:!1}),change.splitDescendantsByKey(startChild.key,startKey,startOffset,{normalize:!1}));document=change.value.document;options=document.getDescendant(options.key);endBlock=document.getDescendant(endBlock.key);
startChild=options.getFurthestAncestor(startKey);endChild=endBlock.getFurthestAncestor(endKey);document=options.nodes.indexOf(startChild);startChild=endBlock.nodes.indexOf(endChild);if(startInline&&startInline==endInline)options=options.getTextsAtRange(range).get(0).splitText(startOffset)[1].splitText(endOffset-startOffset)[0],inline=inline.set("nodes",immutable.List([options])),Changes$1.insertInlineAtRange(change,range,inline,{normalize:!1}),options=inline.getFirstText().key,change.select({anchorKey:options,
focusKey:options,anchorOffset:0,focusOffset:endOffset-startOffset,isFocused:!0});else if(options==endBlock){document=change.value.document;options=document.getClosestBlock(startKey);startChild=options.getFurthestAncestor(startKey);var startInner=document.getNextSibling(startChild.key);startOffset=options.nodes.indexOf(startInner);var endInner=startKey==endKey?startInner:options.getFurthestAncestor(endKey);endOffset=options.nodes.skipUntil(function(n){return n==startInner}).takeUntil(function(n){return n==
endInner}).push(endInner);var node$jscomp$0=inline.regenerateKey();change.insertNodeByKey(options.key,startOffset,node$jscomp$0,{normalize:!1});endOffset.forEach(function(child,i){change.moveNodeByKey(child.key,node$jscomp$0.key,i,{normalize:!1})});normalize&&change.normalizeNodeByKey(options.key)}else{startOffset=options.nodes.slice(document+1);endOffset=endBlock.nodes.slice(0,startChild+1);var startNode=inline.regenerateKey(),endNode=inline.regenerateKey();change.insertNodeByKey(options.key,document+
1,startNode,{normalize:!1});change.insertNodeByKey(endBlock.key,startChild,endNode,{normalize:!1});startOffset.forEach(function(child,i){change.moveNodeByKey(child.key,startNode.key,i,{normalize:!1})});endOffset.forEach(function(child,i){change.moveNodeByKey(child.key,endNode.key,i,{normalize:!1})});normalize&&change.normalizeNodeByKey(options.key).normalizeNodeByKey(endBlock.key);blocks.slice(1,-1).forEach(function(block){var node=inline.regenerateKey();change.insertNodeByKey(block.key,0,node,{normalize:!1});
block.nodes.forEach(function(child,i){change.moveNodeByKey(child.key,node.key,i,{normalize:!1})});normalize&&change.normalizeNodeByKey(block.key)})}},wrapTextAtRange:function(change,range,prefix){var suffix=3<arguments.length&&void 0!==arguments[3]?arguments[3]:prefix,normalize=change.getFlag("normalize",4<arguments.length&&void 0!==arguments[4]?arguments[4]:{}),startKey=range.startKey,endKey=range.endKey,start=range.collapseToStart(),end=range.collapseToEnd();startKey==endKey&&(end=end.move(prefix.length));
change.insertTextAtRange(start,prefix,[],{normalize:normalize});change.insertTextAtRange(end,suffix,[],{normalize:normalize})}},Changes$2={addMarkByPath:function(change,path,offset,length,mark,options){mark=Mark.create(mark);var value=change.value,leaves=value.document.assertNode(path).getLeaves(),operations=[],by=offset+length,o=0;leaves.forEach(function(leaf){var ax=o,ay=ax+leaf.text.length;o+=leaf.text.length;ay<offset||by<ax||leaf.marks.has(mark)||(leaf=Math.max(ax,offset),operations.push({type:"add_mark",
value:value,path:path,offset:leaf,length:Math.min(ay,by)-leaf,mark:mark}))});change.applyOperations(operations);change.normalizeParentByPath(path,options)},insertFragmentByPath:function(change,path,index,fragment,options){fragment.nodes.forEach(function(node,i){change.insertNodeByPath(path,index+i,node)});change.normalizeNodeByPath(path,options)},insertNodeByPath:function(change,path,index,node,options){change.applyOperation({type:"insert_node",value:change.value,path:path.concat(index),node:node});
change.normalizeNodeByPath(path,options)},insertTextByPath:function(change,path,offset,text,marks,options){var value=change.value,node=value.document.assertNode(path);marks=marks||node.getMarksAtIndex(offset);change.applyOperation({type:"insert_text",value:value,path:path,offset:offset,text:text,marks:marks});change.normalizeParentByPath(path,options)},mergeNodeByPath:function(change,path,options){var value=change.value,document=value.document,original=document.getDescendant(path);document=document.getPreviousSibling(path);
if(!document)throw Error('Unable to merge node with path "'+path+'", because it has no previous sibling.');change.applyOperation({type:"merge_node",value:value,path:path,position:"text"==document.object?document.text.length:document.nodes.size,properties:{type:original.type,data:original.data},target:null});change.normalizeParentByPath(path,options)},moveNodeByPath:function(change,path,newPath,newIndex,options){change.applyOperation({type:"move_node",value:change.value,path:path,newPath:newPath.concat(newIndex)});
path=PathUtils.relate(path,newPath);change.normalizeNodeByPath(path,options)},removeMarkByPath:function(change,path,offset,length,mark,options){mark=Mark.create(mark);var value=change.value,leaves=value.document.assertNode(path).getLeaves(),operations=[],by=offset+length,o=0;leaves.forEach(function(leaf){var ax=o,ay=ax+leaf.text.length;o+=leaf.text.length;ay<offset||by<ax||!leaf.marks.has(mark)||(leaf=Math.max(ax,offset),operations.push({type:"remove_mark",value:value,path:path,offset:leaf,length:Math.min(ay,
by)-leaf,mark:mark}))});change.applyOperations(operations);change.normalizeParentByPath(path,options)},removeAllMarksByPath:function(change,path,options){path=change.state.document.assertNode(path);("text"===path.object?[path]:path.getTextsAsArray()).forEach(function(text){text.getMarksAsArray().forEach(function(mark){change.removeMarkByKey(text.key,0,text.text.length,mark,options)})})},removeNodeByPath:function(change,path,options){var value=change.value,node=value.document.assertNode(path);change.applyOperation({type:"remove_node",
value:value,path:path,node:node});change.normalizeParentByPath(path,options)},setTextByPath:function(change,path,text,marks,options){var end=change.value.document.assertNode(path).text.length;change.replaceTextByPath(path,0,end,text,marks,options)},replaceTextByPath:function(change,path,offset,length,text,marks,options){var document=change.value.document,node=document.assertNode(path);length+offset>node.text.length&&(length=node.text.length-offset);node=Range$jscomp$0.create({anchorPath:path,focusPath:path,
anchorOffset:offset,focusOffset:offset+length}).normalize(document);document=document.getActiveMarksAtRange(node);change.removeTextByPath(path,offset,length,{normalize:!1});marks?document&&(document=document.filter(function(activeMark){return!marks.find(function(m){return activeMark.type===m.type})}),marks=document.merge(marks)):marks=document?document:[];change.insertTextByPath(path,offset,text,marks,options)},removeTextByPath:function(change,path,offset,length,options){var value=change.value,document=
value.document,node=document.assertNode(path),leaves=node.getLeaves(),text=node.text,removals=[],by=offset+length,o=0;leaves.forEach(function(leaf){var ax=o,ay=ax+leaf.text.length;o+=leaf.text.length;ay<offset||by<ax||(ax=Math.max(ax,offset),ay=text.slice(ax,Math.min(ay,by)),removals.push({type:"remove_text",value:value,path:path,offset:ax,text:ay,marks:leaf.marks}))});change.applyOperations(removals.reverse());length=document.getClosestBlock(node.key);change.normalizeNodeByKey(length.key,options)},
replaceNodeByPath:function(change,path,newNode,options){newNode=Node$jscomp$0.create(newNode);var index=path.last(),parentPath=PathUtils.lift(path);change.removeNodeByPath(path,{normalize:!1});change.insertNodeByPath(parentPath,index,newNode,{normalize:!1});change.normalizeParentByPath(path,options)},setMarkByPath:function(change,path,offset,length,mark,properties,options){mark=Mark.create(mark);properties=Mark.createProperties(properties);change.applyOperation({type:"set_mark",value:change.value,
path:path,offset:offset,length:length,mark:mark,properties:properties});change.normalizeParentByPath(path,options)},setNodeByPath:function(change,path,properties,options){properties=Node$jscomp$0.createProperties(properties);var value=change.value,node=value.document.assertNode(path);change.applyOperation({type:"set_node",value:value,path:path,node:node,properties:properties});change.normalizeNodeByPath(path,options)},splitNodeByPath:function(change,path,position){var options=3<arguments.length&&
void 0!==arguments[3]?arguments[3]:{},_options$target=options.target;_options$target=void 0===_options$target?null:_options$target;var value=change.value,node=value.document.getDescendant(path);change.applyOperation({type:"split_node",value:value,path:path,position:position,properties:{type:node.type,data:node.data},target:_options$target});change.normalizeParentByPath(path,options)},splitDescendantsByPath:function(change,path,textPath,textOffset,options){if(path.equals(textPath))change.splitNodeByPath(textPath,
textOffset,options);else{var document=change.value.document,node=document.assertNode(path),text=document.assertNode(textPath),previous=void 0,index=void 0;document.getAncestors(textPath).skipUntil(function(a){return a.key==node.key}).reverse().unshift(text).forEach(function(n){var prevIndex=null==index?null:index;index=previous?n.nodes.indexOf(previous)+1:textOffset;previous=n;change.splitNodeByKey(n.key,index,{normalize:!1,target:prevIndex})});change.normalizeParentByPath(path,options)}},unwrapInlineByPath:function(change,
path,properties,options){var value=change.value,selection=value.selection;value=value.document.assertNode(path);path=value.getFirstText();value=value.getLastText();selection=selection.moveToRangeOf(path,value);change.unwrapInlineAtRange(selection,properties,options)},unwrapBlockByPath:function(change,path,properties,options){var value=change.value,selection=value.selection;value=value.document.assertNode(path);path=value.getFirstText();value=value.getLastText();selection=selection.moveToRangeOf(path,
value);change.unwrapBlockAtRange(selection,properties,options)},unwrapNodeByPath:function(change,path,options){var document=change.value.document;document.assertNode(path);var parentPath=PathUtils.lift(path),parent=document.assertNode(parentPath),index=path.last();document=parentPath.last();var grandPath=PathUtils.lift(parentPath),isFirst=0===index,isLast=index===parent.nodes.size-1;1===parent.nodes.size?(change.moveNodeByPath(path,grandPath,document+1,{normalize:!1}),change.removeNodeByPath(parentPath,
options)):isFirst?change.moveNodeByPath(path,grandPath,document,options):isLast?change.moveNodeByPath(path,grandPath,document+1,options):(change.splitNodeByPath(parentPath,index,{normalize:!1}),path=PathUtils.increment(path,1,parentPath.size-1),path=path.set(path.size-1,0),change.moveNodeByPath(path,grandPath,document+1,{normalize:!1}),change.normalizeNodeByPath(grandPath,options))},wrapBlockByPath:function(change,path,block,options){block=Block.create(block);block=block.set("nodes",block.nodes.clear());
var parentPath=PathUtils.lift(path),index=path.last(),newPath=PathUtils.increment(path);change.insertNodeByPath(parentPath,index,block,{normalize:!1});change.moveNodeByPath(newPath,path,0,options)},wrapInlineByPath:function(change,path,inline,options){inline=Inline.create(inline);inline=inline.set("nodes",inline.nodes.clear());var parentPath=PathUtils.lift(path),index=path.last(),newPath=PathUtils.increment(path);change.insertNodeByPath(parentPath,index,inline,{normalize:!1});change.moveNodeByPath(newPath,
path,0,options)},wrapNodeByPath:function(change,path,node){node=Node$jscomp$0.create(node);"block"==node.object?change.wrapBlockByPath(path,node):"inline"==node.object&&change.wrapInlineByPath(path,node)}},CHANGES="addMark insertFragment insertNode insertText mergeNode removeMark removeAllMarks removeNode setText replaceText removeText replaceNode setMark setNode splitNode unwrapInline unwrapBlock unwrapNode wrapBlock wrapInline wrapNode".split(" "),_loop$1=function(method){Changes$2[method+"ByKey"]=
function(change,key){for(var _len3=arguments.length,args=Array(2<_len3?_len3-2:0),_key3=2;_key3<_len3;_key3++)args[_key3-2]=arguments[_key3];_len3=change.value.document.assertPath(key);change[method+"ByPath"].apply(change,[_len3].concat(args))}},_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=CHANGES[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0)_loop$1(_step.value)}catch(err$0){_didIteratorError=
!0,_iteratorError=err$0}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError;}}Changes$2.moveNodeByKey=function(change,key,newKey){for(var _len=arguments.length,args=Array(3<_len?_len-3:0),_key=3;_key<_len;_key++)args[_key-3]=arguments[_key];_key=change.value.document;_len=_key.assertPath(key);_key=_key.assertPath(newKey);change.moveNodeByPath.apply(change,[_len,_key].concat(args))};Changes$2.splitDescendantsByKey=function(change,
key,textKey){for(var _len2=arguments.length,args=Array(3<_len2?_len2-3:0),_key2=3;_key2<_len2;_key2++)args[_key2-3]=arguments[_key2];_key2=change.value.document;_len2=_key2.assertPath(key);_key2=_key2.assertPath(textKey);change.splitDescendantsByPath.apply(change,[_len2,_key2].concat(args))};var debug=Debug("slate:history"),DEFAULTS$8={redos:new immutable.Stack,undos:new immutable.Stack},History$jscomp$0=function(_Record){function History(){classCallCheck(this,History);return possibleConstructorReturn(this,
(History.__proto__||Object.getPrototypeOf(History)).apply(this,arguments))}inherits(History,_Record);createClass(History,[{key:"save",value:function(operation){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},history=this,_history=history,undos=_history.undos;_history=_history.redos;var merge=options.merge;options=options.skip;var prevBatch=undos.peek(),prevOperation=prevBatch&&prevBatch.last();null==options&&(options=prevOperation?"set_selection"==operation.type&&"set_selection"==
prevOperation.type:!1);if(options)return history;null==merge&&(merge=prevOperation?"set_selection"==operation.type&&"set_selection"==prevOperation.type||"insert_text"==operation.type&&"insert_text"==prevOperation.type&&operation.offset==prevOperation.offset+prevOperation.text.length&&isEqual(operation.path,prevOperation.path)||"remove_text"==operation.type&&"remove_text"==prevOperation.type&&operation.offset+operation.text.length==prevOperation.offset&&isEqual(operation.path,prevOperation.path):!1);
debug("save",{operation:operation,merge:merge});merge&&prevBatch?(merge=prevBatch.push(operation),undos=undos.pop(),undos=undos.push(merge)):(merge=new immutable.List([operation]),undos=undos.push(merge));100<undos.size&&(undos=undos.take(100));_history=_history.clear();return history=history.set("undos",undos).set("redos",_history)}},{key:"toJSON",value:function(){return{object:this.object,redos:this.redos.toJSON(),undos:this.undos.toJSON()}}},{key:"toJS",value:function(){return this.toJSON()}},
{key:"object",get:function(){return"history"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}}],[{key:"create",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(History.isHistory(attrs))return attrs;if(isPlainObject(attrs))return History.fromJSON(attrs);throw Error("`History.create` only accepts objects or histories, but you passed it: "+attrs);}},{key:"createOperationsList",
value:function(){var operations=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];if(immutable.List.isList(operations))return operations;if(Array.isArray(operations))return new immutable.List(operations);throw Error("`History.createList` only accepts arrays or lists, but you passed it: "+operations);}},{key:"fromJSON",value:function(object){var _object$redos=object.redos;object=object.undos;object=void 0===object?[]:object;return new History({redos:new immutable.Stack((void 0===_object$redos?
[]:_object$redos).map(this.createOperationsList)),undos:new immutable.Stack(object.map(this.createOperationsList))})}}]);return History}(immutable.Record(DEFAULTS$8));History$jscomp$0.fromJS=History$jscomp$0.fromJSON;History$jscomp$0.isHistory=isType.bind(null,"HISTORY");History$jscomp$0.prototype[MODEL_TYPES.HISTORY]=!0;var Stack=function(_Record){function Stack(){classCallCheck(this,Stack);return possibleConstructorReturn(this,(Stack.__proto__||Object.getPrototypeOf(Stack)).apply(this,arguments))}
inherits(Stack,_Record);createClass(Stack,[{key:"getPluginsWith",value:function(property){return this.plugins.filter(function(plugin){return null!=plugin[property]})}},{key:"find",value:function(property){for(var plugins=this.getPluginsWith(property),_len=arguments.length,args=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];_len=!0;_key=!1;var _iteratorError=void 0;try{for(var _iterator=plugins[Symbol.iterator](),_step;!(_len=(_step=_iterator.next()).done);_len=!0){var plugin=
_step.value,ret=plugin[property].apply(plugin,args);if(null!=ret)return ret}}catch(err$1){_key=!0,_iteratorError=err$1}finally{try{!_len&&_iterator.return&&_iterator.return()}finally{if(_key)throw _iteratorError;}}}},{key:"map",value:function(property){for(var plugins=this.getPluginsWith(property),array=[],_len2=arguments.length,args=Array(1<_len2?_len2-1:0),_key2=1;_key2<_len2;_key2++)args[_key2-1]=arguments[_key2];_len2=!0;_key2=!1;var _iteratorError2=void 0;try{for(var _iterator2=plugins[Symbol.iterator](),
_step2;!(_len2=(_step2=_iterator2.next()).done);_len2=!0){var plugin=_step2.value,ret=plugin[property].apply(plugin,args);null!=ret&&array.push(ret)}}catch(err$2){_key2=!0,_iteratorError2=err$2}finally{try{!_len2&&_iterator2.return&&_iterator2.return()}finally{if(_key2)throw _iteratorError2;}}return array}},{key:"run",value:function(property){for(var plugins=this.getPluginsWith(property),_len3=arguments.length,args=Array(1<_len3?_len3-1:0),_key3=1;_key3<_len3;_key3++)args[_key3-1]=arguments[_key3];
_len3=!0;_key3=!1;var _iteratorError3=void 0;try{for(var _iterator3=plugins[Symbol.iterator](),_step3;!(_len3=(_step3=_iterator3.next()).done);_len3=!0){var plugin=_step3.value;if(null!=plugin[property].apply(plugin,args))break}}catch(err$3){_key3=!0,_iteratorError3=err$3}finally{try{!_len3&&_iterator3.return&&_iterator3.return()}finally{if(_key3)throw _iteratorError3;}}}},{key:"render",value:function(property,props){for(var _len4=arguments.length,args=Array(2<_len4?_len4-2:0),_key4=2;_key4<_len4;_key4++)args[_key4-
2]=arguments[_key4];return this.getPluginsWith(property).reduceRight(function(children,plugin){if(!plugin[property])return children;plugin=plugin[property].apply(plugin,[props].concat(args));return null==plugin?children:props.children=plugin},void 0===props.children?null:props.children)}},{key:"object",get:function(){return"stack"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}}],[{key:"create",
value:function(){var _attrs$plugins=(0<arguments.length&&void 0!==arguments[0]?arguments[0]:{}).plugins;return new Stack({plugins:void 0===_attrs$plugins?[]:_attrs$plugins})}},{key:"isStack",value:function(any){return!(!any||!any[MODEL_TYPES.STACK])}}]);return Stack}(immutable.Record({plugins:[]}));Stack.prototype[MODEL_TYPES.STACK]=!0;memoize(Stack.prototype,["getPluginsWith"]);var SlateError=function(_Error){function SlateError(code){var attrs=1<arguments.length&&void 0!==arguments[1]?arguments[1]:
{};classCallCheck(this,SlateError);var _this=possibleConstructorReturn(this,(SlateError.__proto__||Object.getPrototypeOf(SlateError)).call(this,code));_this.code=code;for(var key in attrs)_this[key]=attrs[key];Error.captureStackTrace?Error.captureStackTrace(_this,_this.constructor):_this.stack=Error().stack;return _this}inherits(SlateError,_Error);return SlateError}(Error),debug$1=Debug("slate:schema"),CORE_RULES=[{match:{object:"document"},nodes:[{match:{object:"block"}}]},{match:{object:"block",
first:{object:"block"}},nodes:[{match:{object:"block"}}]},{match:{object:"block",first:[{object:"inline"},{object:"text"}]},nodes:[{match:[{object:"inline"},{object:"text"}]}]},{match:{object:"inline"},nodes:[{match:[{object:"inline"},{object:"text"}]}]},{match:[{object:"block"},{object:"inline"}],nodes:[{min:1}],normalize:function(change,error){"child_required"===error.code&&change.insertNodeByKey(error.node.key,0,Text$jscomp$0.create(),{normalize:!1})}},{match:{object:"inline",isVoid:!1,nodes:[{match:{object:"text"}}]},
text:/[\w\W]+/},{match:{object:"block"},first:[{object:"block"},{object:"text"}],last:[{object:"block"},{object:"text"}],normalize:function(change,error){var code=error.code;error=error.node;var text=Text$jscomp$0.create();if("first_child_object_invalid"===code)code=0;else if("last_child_object_invalid"===code)code=error.nodes.size;else return;change.insertNodeByKey(error.key,code,text,{normalize:!1})}},{match:{object:"inline"},first:[{object:"block"},{object:"text"}],last:[{object:"block"},{object:"text"}],
previous:[{object:"block"},{object:"text"}],next:[{object:"block"},{object:"text"}],normalize:function(change,error){var code=error.code,node=error.node,index=error.index;error=Text$jscomp$0.create();if("first_child_object_invalid"===code)code=0;else if("last_child_object_invalid"===code)code=node.nodes.size;else if("previous_sibling_object_invalid"===code)code=index;else if("next_sibling_object_invalid"===code)code=index+1;else return;change.insertNodeByKey(node.key,code,error,{normalize:!1})}},
{match:{object:"text"},next:[{object:"block"},{object:"inline"}],normalize:function(change,error){"next_sibling_object_invalid"===error.code&&change.mergeNodeByKey(error.next.key,{normalize:!1})}}],DEFAULTS$10={stack:Stack.create(),rules:[]},Schema=function(_Record){function Schema(){classCallCheck(this,Schema);return possibleConstructorReturn(this,(Schema.__proto__||Object.getPrototypeOf(Schema)).apply(this,arguments))}inherits(Schema,_Record);createClass(Schema,[{key:"validateNode",value:function(node){var rules=
this.rules.filter(function(r){return!validateRules(node,r.match)});if(rules=validateRules(node,rules,this.rules,{every:!0}))return new SlateError(rules.code,rules)}},{key:"testNode",value:function(node){return!this.validateNode(node)}},{key:"assertNode",value:function(node){if(node=this.validateNode(node))throw node;}},{key:"normalizeNode",value:function(node){var ret=this.stack.find("normalizeNode",node);if(ret)return ret;if("text"!=node.object){var error=this.validateNode(node);if(error)return function(change){debug$1("normalizing",
{error:error});var rule=error.rule,size=change.operations.size;rule.normalize&&rule.normalize(change,error);change.operations.size===size&&defaultNormalize(change,error)}}}},{key:"toJSON",value:function(){return{object:this.object,rules:this.rules}}},{key:"toJS",value:function(){return this.toJSON()}},{key:"object",get:function(){return"schema"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}}],[{key:"create",
value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Schema.isSchema(attrs))return attrs;if(isPlainObject(attrs))return Schema.fromJSON(attrs);throw Error("`Schema.create` only accepts objects or schemas, but you passed it: "+attrs);}},{key:"fromJSON",value:function(object){if(Schema.isSchema(object))return object;var plugins=object.plugins?object.plugins:[{schema:object}];object=[].concat(CORE_RULES);var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=
void 0;try{for(var _iterator=plugins[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var _plugin$schema=_step.value.schema,schema=void 0===_plugin$schema?{}:_plugin$schema,_schema$blocks=schema.blocks,blocks=void 0===_schema$blocks?{}:_schema$blocks,_schema$inlines=schema.inlines,inlines=void 0===_schema$inlines?{}:_schema$inlines;schema.rules&&(object=object.concat(schema.rules));schema.document&&object.push(_extends({match:[{object:"document"}]},
schema.document));for(var key in blocks)object.push(_extends({match:[{object:"block",type:key}]},blocks[key]));for(var _key in inlines)object.push(_extends({match:[{object:"inline",type:_key}]},inlines[_key]))}}catch(err$4){_didIteratorError=!0,_iteratorError=err$4}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError;}}_iterator=Stack.create({plugins:plugins});return new Schema({stack:_iterator,rules:object})}},{key:"isSchema",
value:function(any){return!(!any||!any[MODEL_TYPES.SCHEMA])}}]);return Schema}(immutable.Record(DEFAULTS$10));Schema.fromJS=Schema.fromJSON;Schema.prototype[MODEL_TYPES.SCHEMA]=!0;var DEFAULTS$11={data:new immutable.Map,decorations:null,document:Document$jscomp$0.create(),history:History$jscomp$0.create(),schema:Schema.create(),selection:Range$jscomp$0.create()},Value=function(_Record){function Value(){classCallCheck(this,Value);return possibleConstructorReturn(this,(Value.__proto__||Object.getPrototypeOf(Value)).apply(this,
arguments))}inherits(Value,_Record);createClass(Value,[{key:"change",value:function(){return new Change(_extends({},0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},{value:this}))}},{key:"addMark",value:function(path,offset,length,mark){var document=this.document;document=document.addMark(path,offset,length,mark);return this.set("document",document)}},{key:"insertNode",value:function(path,node){var value=this,document=value.document;document=document.insertNode(path,node);value=value.set("document",
document);return value=value.mapRanges(function(range){return range.merge({anchorPath:null,focusPath:null})})}},{key:"insertText",value:function(path,offset,text,marks){var value=this,document=value.document;document=document.insertText(path,offset,text,marks);value=value.set("document",document);var node=document.assertNode(path);value=value.clearAtomicRanges(node.key,offset);value=value.mapRanges(function(range){var anchorOffset=range.anchorOffset,isBackward=range.isBackward,isAtomic=range.isAtomic;
return range.anchorKey===node.key&&(anchorOffset>offset||!(anchorOffset!==offset||isAtomic&&isBackward))?range.moveAnchor(text.length):range});return value=value.mapRanges(function(range){var focusOffset=range.focusOffset,isBackward=range.isBackward,isAtomic=range.isAtomic;return range.focusKey===node.key&&(focusOffset>offset||focusOffset==offset&&(!isAtomic||isBackward))?range.moveFocus(text.length):range})}},{key:"mergeNode",value:function(path){var value=this,document=value.document,newDocument=
document.mergeNode(path);path=document.resolvePath(path);var withPath=PathUtils.decrement(path),one=document.getNode(withPath),two=document.getNode(path);value=value.set("document",newDocument);return value=value.mapRanges(function(range){if("text"===two.object){var max=one.text.length;range.anchorKey===two.key&&(range=range.moveAnchorTo(one.key,max+range.anchorOffset));range.focusKey===two.key&&(range=range.moveFocusTo(one.key,max+range.focusOffset))}return range=range.merge({anchorPath:null,focusPath:null})})}},
{key:"moveNode",value:function(path,newPath){var value=this,document=value.document;document=document.moveNode(path,newPath,2<arguments.length&&void 0!==arguments[2]?arguments[2]:0);value=value.set("document",document);return value=value.mapRanges(function(range){return range.merge({anchorPath:null,focusPath:null})})}},{key:"removeMark",value:function(path,offset,length,mark){var document=this.document;document=document.removeMark(path,offset,length,mark);return this.set("document",document)}},{key:"removeNode",
value:function(path){var value=this,document=value.document,node=document.assertNode(path),first="text"==node.object?node:node.getFirstText()||node,last="text"==node.object?node:node.getLastText()||node,prev=document.getPreviousText(first.key),next=document.getNextText(last.key);document=document.removeNode(path);value=value.set("document",document);return value=value.mapRanges(function(range){var _range=range,endKey=_range.endKey;node.hasNode(_range.startKey)&&(range=prev?range.moveStartTo(prev.key,
prev.text.length):next?range.moveStartTo(next.key,0):range.deselect());node.hasNode(endKey)&&(range=prev?range.moveEndTo(prev.key,prev.text.length):next?range.moveEndTo(next.key,0):range.deselect());return range=range.merge({anchorPath:null,focusPath:null})})}},{key:"removeText",value:function(path,offset,text){var value=this,document=value.document;document=document.removeText(path,offset,text);value=value.set("document",document);var node=document.assertNode(path),length=text.length,rangeOffset=
offset+length;value=value.clearAtomicRanges(node.key,offset,offset+length);value=value.mapRanges(function(range){return range.anchorKey===node.key?range.anchorOffset>=rangeOffset?range.moveAnchor(-length):range.anchorOffset>offset?range.moveAnchorTo(range.anchorKey,offset):range:range});return value=value.mapRanges(function(range){return range.focusKey===node.key?range.focusOffset>=rangeOffset?range.moveFocus(-length):range.focusOffset>offset?range.moveFocusTo(range.focusKey,offset):range:range})}},
{key:"setNode",value:function(path,properties){var value=this,document=value.document;document=document.setNode(path,properties);return value=value.set("document",document)}},{key:"setMark",value:function(path,offset,length,mark,properties){var value=this,document=value.document;document=document.setMark(path,offset,length,mark,properties);return value=value.set("document",document)}},{key:"setSelection",value:function(properties){var value=this,_value11=value,document=_value11.document;_value11=
_value11.selection;_value11=_value11.merge(properties);_value11=_value11.normalize(document);return value=value.set("selection",_value11)}},{key:"splitNode",value:function(path,position,properties){var value=this,document=value.document,newDocument=document.splitNode(path,position,properties),node=document.assertNode(path);value=value.set("document",newDocument);return value=value.mapRanges(function(range){var next=newDocument.getNextText(node.key),_range2=range,startOffset=_range2.startOffset,endKey=
_range2.endKey,endOffset=_range2.endOffset;node.key===_range2.startKey&&position<=startOffset&&(range=range.moveStartTo(next.key,startOffset-position));node.key===endKey&&position<=endOffset&&(range=range.moveEndTo(next.key,endOffset-position));return range=range.merge({anchorPath:null,focusPath:null})})}},{key:"mapRanges",value:function(iterator){var value=this,_value13=value,document=_value13.document,selection=_value13.selection;_value13=_value13.decorations;if(selection){var next=selection.isSet?
iterator(selection):selection;next||(next=selection.deselect());next!==selection&&(next=next.normalize(document));value=value.set("selection",next)}_value13&&(selection=_value13.map(function(decoration){var n=decoration.isSet?iterator(decoration):decoration;n&&n!==decoration&&(n=n.normalize(document));return n}),selection=selection.filter(function(decoration){return!!decoration}),selection=selection.size?selection:null,value=value.set("decorations",selection));return value}},{key:"clearAtomicRanges",
value:function(key,start){var end=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return this.mapRanges(function(range){var startOffset=range.startOffset,endKey=range.endKey,endOffset=range.endOffset;return range.isAtomic&&range.startKey===key?startOffset<start&&(endKey!==key||endOffset>start)||null!=end&&startOffset<end&&(endKey!==key||endOffset>end)?null:range:range})}},{key:"toJSON",value:function(){var options=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},object={object:this.object,
document:this.document.toJSON(options)};options.preserveData&&(object.data=this.data.toJSON(options));options.preserveDecorations&&(object.decorations=this.decorations?this.decorations.toArray().map(function(d){return d.toJSON(options)}):null);options.preserveHistory&&(object.history=this.history.toJSON(options));options.preserveSelection&&(object.selection=this.selection.toJSON(options));options.preserveSchema&&(object.schema=this.schema.toJSON(options));return object}},{key:"toJS",value:function(options){return this.toJSON(options)}},
{key:"object",get:function(){return"value"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}},{key:"hasUndos",get:function(){return 0<this.history.undos.size}},{key:"hasRedos",get:function(){return 0<this.history.redos.size}},{key:"isBlurred",get:function(){return this.selection.isBlurred}},{key:"isFocused",get:function(){return this.selection.isFocused}},{key:"isCollapsed",get:function(){return this.selection.isCollapsed}},
{key:"isExpanded",get:function(){return this.selection.isExpanded}},{key:"isBackward",get:function(){return this.selection.isBackward}},{key:"isForward",get:function(){return this.selection.isForward}},{key:"startKey",get:function(){return this.selection.startKey}},{key:"endKey",get:function(){return this.selection.endKey}},{key:"startPath",get:function(){return this.selection.startPath}},{key:"endPath",get:function(){return this.selection.endPath}},{key:"startOffset",get:function(){return this.selection.startOffset}},
{key:"endOffset",get:function(){return this.selection.endOffset}},{key:"anchorKey",get:function(){return this.selection.anchorKey}},{key:"focusKey",get:function(){return this.selection.focusKey}},{key:"anchorPath",get:function(){return this.selection.anchorPath}},{key:"focusPath",get:function(){return this.selection.focusPath}},{key:"anchorOffset",get:function(){return this.selection.anchorOffset}},{key:"focusOffset",get:function(){return this.selection.focusOffset}},{key:"startBlock",get:function(){return this.startKey&&
this.document.getClosestBlock(this.startKey)}},{key:"endBlock",get:function(){return this.endKey&&this.document.getClosestBlock(this.endKey)}},{key:"anchorBlock",get:function(){return this.anchorKey&&this.document.getClosestBlock(this.anchorKey)}},{key:"focusBlock",get:function(){return this.focusKey&&this.document.getClosestBlock(this.focusKey)}},{key:"startInline",get:function(){return this.startKey&&this.document.getClosestInline(this.startKey)}},{key:"endInline",get:function(){return this.endKey&&
this.document.getClosestInline(this.endKey)}},{key:"anchorInline",get:function(){return this.anchorKey&&this.document.getClosestInline(this.anchorKey)}},{key:"focusInline",get:function(){return this.focusKey&&this.document.getClosestInline(this.focusKey)}},{key:"startText",get:function(){return this.startKey&&this.document.getDescendant(this.startKey)}},{key:"endText",get:function(){return this.endKey&&this.document.getDescendant(this.endKey)}},{key:"anchorText",get:function(){return this.anchorKey&&
this.document.getDescendant(this.anchorKey)}},{key:"focusText",get:function(){return this.focusKey&&this.document.getDescendant(this.focusKey)}},{key:"nextBlock",get:function(){return this.endKey&&this.document.getNextBlock(this.endKey)}},{key:"previousBlock",get:function(){return this.startKey&&this.document.getPreviousBlock(this.startKey)}},{key:"nextInline",get:function(){return this.endKey&&this.document.getNextInline(this.endKey)}},{key:"previousInline",get:function(){return this.startKey&&this.document.getPreviousInline(this.startKey)}},
{key:"nextText",get:function(){return this.endKey&&this.document.getNextText(this.endKey)}},{key:"previousText",get:function(){return this.startKey&&this.document.getPreviousText(this.startKey)}},{key:"characters",get:function(){return this.selection.isUnset?new immutable.List:this.document.getCharactersAtRange(this.selection)}},{key:"marks",get:function(){return this.selection.isUnset?new immutable.Set:this.selection.marks||this.document.getMarksAtRange(this.selection)}},{key:"activeMarks",get:function(){return this.selection.isUnset?
new immutable.Set:this.selection.marks||this.document.getActiveMarksAtRange(this.selection)}},{key:"blocks",get:function(){return this.selection.isUnset?new immutable.List:this.document.getBlocksAtRange(this.selection)}},{key:"fragment",get:function(){return this.selection.isUnset?Document$jscomp$0.create():this.document.getFragmentAtRange(this.selection)}},{key:"inlines",get:function(){return this.selection.isUnset?new immutable.List:this.document.getInlinesAtRange(this.selection)}},{key:"texts",
get:function(){return this.selection.isUnset?new immutable.List:this.document.getTextsAtRange(this.selection)}},{key:"isEmpty",get:function(){return this.isCollapsed?!0:0!=this.endOffset&&0!=this.startOffset?!1:this.fragment.isEmpty}},{key:"isInVoid",get:function(){return this.isExpanded?!1:this.document.hasVoidParent(this.startKey)}}],[{key:"create",value:function(){var attrs=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:
{};if(Value.isValue(attrs))return attrs;if(isPlainObject(attrs))return Value.fromJSON(attrs,options);throw Error("`Value.create` only accepts objects or values, but you passed it: "+attrs);}},{key:"createProperties",value:function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Value.isValue(a))return{data:a.data,decorations:a.decorations,schema:a.schema};if(isPlainObject(a)){var p={};"data"in a&&(p.data=Data.create(a.data));"decorations"in a&&(p.decorations=Range$jscomp$0.createList(a.decorations));
"schema"in a&&(p.schema=Schema.create(a.schema));return p}throw Error("`Value.createProperties` only accepts objects or values, but you passed it: "+a);}},{key:"fromJSON",value:function(object){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_object$document=object.document;_object$document=void 0===_object$document?{}:_object$document;var _object$selection=object.selection;_object$selection=void 0===_object$selection?{}:_object$selection;var _object$schema=object.schema;_object$schema=
void 0===_object$schema?{}:_object$schema;var _object$history=object.history;_object$history=void 0===_object$history?{}:_object$history;var data=new immutable.Map;_object$document=Document$jscomp$0.fromJSON(_object$document);_object$selection=Range$jscomp$0.fromJSON(_object$selection);_object$schema=Schema.fromJSON(_object$schema);_object$history=History$jscomp$0.fromJSON(_object$history);if(options.plugins){var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=
options.plugins[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var plugin=_step.value;plugin.data&&(data=data.merge(plugin.data))}}catch(err$10){_didIteratorError=!0,_iteratorError=err$10}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError;}}}"data"in object&&(data=data.merge(object.data));_object$selection.isUnset&&(_iterator=_object$document.getFirstText())&&
(_object$selection=_object$selection.collapseToStartOf(_iterator));_object$selection=_object$selection.normalize(_object$document);_object$document=new Value({data:data,document:_object$document,selection:_object$selection,schema:_object$schema,history:_object$history});!1!==options.normalize&&(_object$document=_object$document.change({save:!1}).normalize().value);return _object$document}},{key:"isValue",value:function(value){return!(!value||!value[MODEL_TYPES.VALUE])}}]);return Value}(immutable.Record(DEFAULTS$11));
Value.fromJS=Value.fromJSON;Value.prototype[MODEL_TYPES.VALUE]=!0;var OPERATION_ATTRIBUTES={add_mark:["value","path","offset","length","mark"],insert_node:["value","path","node"],insert_text:["value","path","offset","text","marks"],merge_node:["value","path","position","properties","target"],move_node:["value","path","newPath"],remove_mark:["value","path","offset","length","mark"],remove_node:["value","path","node"],remove_text:["value","path","offset","text","marks"],set_mark:"value path offset length mark properties".split(" "),
set_node:["value","path","node","properties"],set_selection:["value","selection","properties"],set_value:["value","properties"],split_node:["value","path","position","properties","target"]},Operation=function(_Record){function Operation(){classCallCheck(this,Operation);return possibleConstructorReturn(this,(Operation.__proto__||Object.getPrototypeOf(Operation)).apply(this,arguments))}inherits(Operation,_Record);createClass(Operation,[{key:"toJSON",value:function(){var type=this.type,json={object:this.object,
type:type},ATTRIBUTES=OPERATION_ATTRIBUTES[type],_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=ATTRIBUTES[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var key=_step.value,value=this[key];if("document"!=key&&"selection"!=key&&"value"!=key&&("node"!=key||"insert_node"==type)){if("mark"==key||"marks"==key||"node"==key)value=value.toJSON();"properties"==key&&"merge_node"==type&&(ATTRIBUTES=
{},"data"in value&&(ATTRIBUTES.data=value.data.toJS()),"type"in value&&(ATTRIBUTES.type=value.type),value=ATTRIBUTES);"properties"==key&&"set_mark"==type&&(ATTRIBUTES={},"data"in value&&(ATTRIBUTES.data=value.data.toJS()),"type"in value&&(ATTRIBUTES.type=value.type),value=ATTRIBUTES);"properties"==key&&"set_node"==type&&(ATTRIBUTES={},"data"in value&&(ATTRIBUTES.data=value.data.toJS()),"isVoid"in value&&(ATTRIBUTES.isVoid=value.isVoid),"type"in value&&(ATTRIBUTES.type=value.type),value=ATTRIBUTES);
"properties"==key&&"set_selection"==type&&(ATTRIBUTES={},"anchorOffset"in value&&(ATTRIBUTES.anchorOffset=value.anchorOffset),"anchorPath"in value&&(ATTRIBUTES.anchorPath=value.anchorPath&&value.anchorPath.toJSON()),"focusOffset"in value&&(ATTRIBUTES.focusOffset=value.focusOffset),"focusPath"in value&&(ATTRIBUTES.focusPath=value.focusPath&&value.focusPath.toJSON()),"isBackward"in value&&(ATTRIBUTES.isBackward=value.isBackward),"isFocused"in value&&(ATTRIBUTES.isFocused=value.isFocused),"marks"in value&&
(ATTRIBUTES.marks=value.marks&&value.marks.toJSON()),value=ATTRIBUTES);"properties"==key&&"set_value"==type&&(ATTRIBUTES={},"data"in value&&(ATTRIBUTES.data=value.data.toJS()),"decorations"in value&&(ATTRIBUTES.decorations=value.decorations.toJS()),"schema"in value&&(ATTRIBUTES.schema=value.schema.toJS()),value=ATTRIBUTES);"properties"==key&&"split_node"==type&&(ATTRIBUTES={},"data"in value&&(ATTRIBUTES.data=value.data.toJS()),"type"in value&&(ATTRIBUTES.type=value.type),value=ATTRIBUTES);json[key]=
value}}}catch(err$11){_didIteratorError=!0,_iteratorError=err$11}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError;}}return json}},{key:"toJS",value:function(options){return this.toJSON(options)}},{key:"object",get:function(){return"operation"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}}],[{key:"create",value:function(){var attrs=
0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(Operation.isOperation(attrs))return attrs;if(isPlainObject(attrs))return Operation.fromJSON(attrs);throw Error("`Operation.create` only accepts objects or operations, but you passed it: "+attrs);}},{key:"createList",value:function(){var elements=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];if(immutable.List.isList(elements)||Array.isArray(elements))return new immutable.List(elements.map(Operation.create));throw Error("`Operation.createList` only accepts arrays or lists, but you passed it: "+
elements);}},{key:"fromJSON",value:function(object){if(Operation.isOperation(object))return object;var type=object.type,ATTRIBUTES=OPERATION_ATTRIBUTES[type],attrs={type:type};if(!ATTRIBUTES)throw Error('`Operation.fromJSON` was passed an unrecognized operation type: "'+type+'"');var _iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=ATTRIBUTES[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=
!0){var key=_step2.value,v=object[key];if(void 0===v){if("document"==key)continue;if("selection"==key)continue;if("value"==key)continue;if("node"==key&&"insert_node"!=type)continue;throw Error('`Operation.fromJSON` was passed a "'+type+'" operation without the required "'+key+'" attribute.');}if("path"===key||"newPath"===key)v=PathUtils.create(v);"mark"===key&&(v=Mark.create(v));"marks"===key&&null!=v&&(v=Mark.createSet(v));"node"===key&&(v=Node$jscomp$0.create(v));"selection"===key&&(v=Range$jscomp$0.create(v));
"value"===key&&(v=Value.create(v));"properties"===key&&"merge_node"===type&&(v=Node$jscomp$0.createProperties(v));"properties"===key&&"set_mark"===type&&(v=Mark.createProperties(v));"properties"===key&&"set_node"===type&&(v=Node$jscomp$0.createProperties(v));"properties"===key&&"set_selection"===type&&(v=Range$jscomp$0.createProperties(v));"properties"===key&&"set_value"===type&&(v=Value.createProperties(v));"properties"===key&&"split_node"===type&&(v=Node$jscomp$0.createProperties(v));attrs[key]=
v}}catch(err$12){_didIteratorError2=!0,_iteratorError2=err$12}finally{try{!_iteratorNormalCompletion2&&_iterator2.return&&_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2;}}return new Operation(attrs)}},{key:"isOperation",value:function(any){return!(!any||!any[MODEL_TYPES.OPERATION])}},{key:"isOperationList",value:function(any){return immutable.List.isList(any)&&any.every(function(item){return Operation.isOperation(item)})}}]);return Operation}(immutable.Record({length:void 0,
mark:void 0,marks:void 0,newPath:void 0,node:void 0,offset:void 0,path:void 0,position:void 0,properties:void 0,selection:void 0,target:void 0,text:void 0,type:void 0,value:void 0}));Operation.fromJS=Operation.fromJSON;Operation.prototype[MODEL_TYPES.OPERATION]=!0;var debug$2=Debug("slate:operation:invert"),Changes$4={select:function(change,properties){var options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};properties=Range$jscomp$0.createProperties(properties);options=options.snapshot;
options=void 0===options?!1:options;var value=change.value,document=value.document,selection=value.selection,props={},sel=selection.toJSON();document=selection.merge(properties).normalize(document);properties=pick(document,Object.keys(properties));for(var k in properties)if(0!=options||properties[k]!=sel[k])props[k]=properties[k];k=["anchorKey","anchorOffset","focusKey","focusOffset"].some(function(p){return props.hasOwnProperty(p)});sel.marks&&properties.marks==sel.marks&&k&&(props.marks=null);isEmpty(props)||
change.applyOperation({type:"set_selection",value:value,properties:props,selection:sel},options?{skip:!1,merge:!1}:{})},selectAll:function(change){var value=change.value;value=value.selection.moveToRangeOf(value.document);change.select(value)},snapshotSelection:function(change){change.select(change.value.selection,{snapshot:!0})},moveAnchorCharBackward:function(change){var value=change.value,document=value.document,anchorText=value.anchorText,anchorBlock=value.anchorBlock;value=value.selection.anchorOffset;
var previousText=document.getPreviousText(anchorText.key);anchorText=document.hasVoidParent(anchorText.key);document=previousText&&document.hasVoidParent(previousText.key);!anchorText&&0<value?change.moveAnchor(-1):previousText&&(change.moveAnchorToEndOf(previousText),anchorText||document||!anchorBlock.hasNode(previousText.key)||change.moveAnchor(-1))},moveAnchorCharForward:function(change){var value=change.value,document=value.document,anchorText=value.anchorText,anchorBlock=value.anchorBlock;value=
value.selection.anchorOffset;var nextText=document.getNextText(anchorText.key),isInVoid=document.hasVoidParent(anchorText.key);document=nextText&&document.hasVoidParent(nextText.key);!isInVoid&&value<anchorText.text.length?change.moveAnchor(1):nextText&&(change.moveAnchorToStartOf(nextText),isInVoid||document||!anchorBlock.hasNode(nextText.key)||change.moveAnchor(1))},moveFocusCharBackward:function(change){var value=change.value,document=value.document,focusText=value.focusText,focusBlock=value.focusBlock;
value=value.selection.focusOffset;var previousText=document.getPreviousText(focusText.key);focusText=document.hasVoidParent(focusText.key);document=previousText&&document.hasVoidParent(previousText.key);!focusText&&0<value?change.moveFocus(-1):previousText&&(change.moveFocusToEndOf(previousText),focusText||document||!focusBlock.hasNode(previousText.key)||change.moveFocus(-1))},moveFocusCharForward:function(change){var value=change.value,document=value.document,focusText=value.focusText,focusBlock=
value.focusBlock;value=value.selection.focusOffset;var nextText=document.getNextText(focusText.key),isInVoid=document.hasVoidParent(focusText.key);document=nextText&&document.hasVoidParent(nextText.key);!isInVoid&&value<focusText.text.length?change.moveFocus(1):nextText&&(change.moveFocusToStartOf(nextText),isInVoid||document||!focusBlock.hasNode(nextText.key)||change.moveFocus(1))}};["Forward","Backward"].forEach(function(direction$$1){var anchor="moveAnchorChar"+direction$$1,focus="moveFocusChar"+
direction$$1;Changes$4["moveChar"+direction$$1]=function(change){change[anchor]()[focus]()};Changes$4["moveStartChar"+direction$$1]=function(change){if(change.value.isBackward)change[focus]();else change[anchor]()};Changes$4["moveEndChar"+direction$$1]=function(change){if(change.value.isBackward)change[anchor]();else change[focus]()};Changes$4["extendChar"+direction$$1]=function(change){change["moveFocusChar"+direction$$1]()};Changes$4["collapseChar"+direction$$1]=function(change){change["Forward"==
direction$$1?"collapseToEnd":"collapseToStart"]()["moveChar"+direction$$1]()}});[["collapseLineBackward","collapseToStartOfBlock"],["collapseLineForward","collapseToEndOfBlock"],["extendLineBackward","extendToStartOfBlock"],["extendLineForward","extendToEndOfBlock"]].forEach(function(_ref){_ref=slicedToArray(_ref,2);var method=_ref[1];Changes$4[_ref[0]]=function(change){for(var _len=arguments.length,args=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];change[method].apply(change,
[change].concat(args))}});"blur collapseTo collapseToAnchor collapseToEnd collapseToEndOf collapseToFocus collapseToStart collapseToStartOf extend extendTo extendToEndOf extendToStartOf flip focus move moveAnchor moveAnchorOffsetTo moveAnchorTo moveAnchorToEndOf moveAnchorToStartOf moveEnd moveEndOffsetTo moveEndTo moveFocus moveFocusOffsetTo moveFocusTo moveFocusToEndOf moveFocusToStartOf moveOffsetsTo moveStart moveStartOffsetTo moveStartTo moveTo moveToEnd moveToEndOf moveToRangeOf moveToStart moveToStartOf deselect".split(" ").forEach(function(method){Changes$4[method]=
function(change){for(var _len2=arguments.length,args=Array(1<_len2?_len2-1:0),_key2=1;_key2<_len2;_key2++)args[_key2-1]=arguments[_key2];_len2="deselect"!=method;var value=change.value;_key2=value.document;value=value.selection;args=value[method].apply(value,args);_len2&&(args=args.normalize(_key2));change.select(args)}});var DIRECTIONS=["Next","Previous"],OBJECTS=["Block","Inline","Text"];"moveTo moveAnchorTo moveFocusTo moveStartTo moveEndTo collapseTo extendTo".split(" ").forEach(function(prefix){var edges=
["Start","End"];"moveTo"==prefix&&edges.push("Range");edges.forEach(function(edge){var method=""+prefix+edge+"Of";OBJECTS.forEach(function(object){var getNode="Text"==object?"getNode":"getClosest"+object;Changes$4[""+method+object]=function(change){var value=change.value;if(value=value.document[getNode](value.selection.startKey))change[method](value)};DIRECTIONS.forEach(function(direction$$1){var getDirectionNode="get"+direction$$1+object,directionKey="Next"==direction$$1?"startKey":"endKey";Changes$4[""+
method+direction$$1+object]=function(change){var value=change.value,document=value.document;if(value=document[getNode](value.selection[directionKey]))if(document=document[getDirectionNode](value.key))change[method](document)}})})})});var Changes$7=_extends({},Changes,Changes$1,Changes$2,{redo:function(change){var value=change.value,history=value.history;if(history){var _history=history,undos=_history.undos;_history=_history.redos;if(value=_history.peek())_history=_history.pop(),undos=undos.push(value),
value.forEach(function(op){var _op=op,properties=_op.properties;"set_selection"==_op.type&&(op=op.set("properties",omit(properties,"isFocused")));change.applyOperation(op,{save:!1})}),value=change.value,history=history.set("undos",undos).set("redos",_history),value=value.set("history",history),change.value=value}},undo:function(change){var value=change.value,history=value.history;if(history){var _history2=history,undos=_history2.undos;_history2=_history2.redos;if(value=undos.peek())undos=undos.pop(),
_history2=_history2.push(value),value.slice().reverse().map(invertOperation).forEach(function(inverse){var _inverse=inverse,properties=_inverse.properties;"set_selection"==_inverse.type&&(inverse=inverse.set("properties",omit(properties,"isFocused")));change.applyOperation(inverse,{save:!1})}),value=change.value,history=history.set("undos",undos).set("redos",_history2),value=value.set("history",history),change.value=value}}},Changes$4,{setValue:function(change,properties){var options=2<arguments.length&&
void 0!==arguments[2]?arguments[2]:{};properties=Value.createProperties(properties);change.applyOperation({type:"set_value",properties:properties,value:change.value},options)}},{normalize:function(change,options){change.normalizeDocument(options)},normalizeDocument:function(change,options){change.normalizeNodeByKey(change.value.document.key,options)},normalizeNodeByKey:function(change,key){if(change.getFlag("normalize",2<arguments.length&&void 0!==arguments[2]?arguments[2]:{})){var value=change.value,
schema=value.schema;value=value.document.assertNode(key);normalizeNodeAndChildren(change,value,schema);change.normalizeAncestorsByKey(key)}},normalizeAncestorsByKey:function(change,key){var value=change.value,schema=value.schema;(key=value.document.getAncestors(key))&&key.forEach(function(ancestor){change.value.document.getDescendant(ancestor.key)&&normalizeNode(change,ancestor,schema)})},normalizeParentByKey:function(change,key,options){key=change.value.document.getParent(key);change.normalizeNodeByKey(key.key,
options)},normalizeNodeByPath:function(change,path){if(change.getFlag("normalize",2<arguments.length&&void 0!==arguments[2]?arguments[2]:{})){var value=change.value,document=value.document,schema=value.schema;value=document.assertNode(path);normalizeNodeAndChildren(change,value,schema);document=change.value.document;(value=document.getAncestors(path))&&value.forEach(function(ancestor){change.value.document.getDescendant(ancestor.key)&&normalizeNode(change,ancestor,schema)})}},normalizeParentByPath:function(change,
path,options){path=PathUtils.lift(path);change.normalizeNodeByPath(path,options)}}),debug$3=Debug("slate:operation:apply"),debug$4=Debug("slate:change"),Change=function(){function Change(attrs){classCallCheck(this,Change);this.value=attrs.value;this.operations=new immutable.List;this.flags=_extends({normalize:!0},pick(attrs,["merge","save","normalize"]))}createClass(Change,[{key:"applyOperation",value:function(operation){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},operations=
this.operations,flags=this.flags,value=this.value,history=value.history;isPlainObject(operation)&&(operation=_extends({},operation,{value:value}));operation=Operation.create(operation);flags=options=_extends({},flags,options);options=flags.merge;options=void 0===options?0==operations.size?null:!0:options;var _options$save=flags.save;_options$save=void 0===_options$save?!0:_options$save;flags=flags.skip;flags=void 0===flags?null:flags;debug$4("apply",{operation:operation,save:_options$save,merge:options});
value=applyOperation(value,operation);history&&_options$save&&(history=history.save(operation,{merge:options,skip:flags}),value=value.set("history",history));this.value=value;this.operations=operations.push(operation);return this}},{key:"applyOperations",value:function(operations,options){var _this=this;operations.forEach(function(op){return _this.applyOperation(op,options)});return this}},{key:"call",value:function(fn){for(var _len=arguments.length,args=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)args[_key-
1]=arguments[_key];fn.apply(void 0,[this].concat(args));return this}},{key:"withoutNormalization",value:function(fn){var original=this.flags.normalize;this.setOperationFlag("normalize",!1);fn(this);this.setOperationFlag("normalize",original);this.normalizeDocument();return this}},{key:"setOperationFlag",value:function(key,value){this.flags[key]=value;return this}},{key:"getFlag",value:function(key){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};return void 0!==options[key]?
options[key]:this.flags[key]}},{key:"unsetOperationFlag",value:function(key){delete this.flags[key];return this}},{key:"object",get:function(){return"change"}},{key:"kind",get:function(){logger.deprecate("slate@0.32.0","The `kind` property of Slate objects has been renamed to `object`.");return this.object}}]);return Change}();Change.isChange=isType.bind(null,"CHANGE");Change.prototype[MODEL_TYPES.CHANGE]=!0;Object.keys(Changes$7).forEach(function(type){Change.prototype[type]=function(){for(var _len2=
arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];debug$4(type,{args:args});this.call.apply(this,[Changes$7[type]].concat(args));return this}});var Operations={apply:applyOperation,invert:invertOperation},index$jscomp$0={Block:Block,Changes:Changes$7,Character:Character,Data:Data,Document:Document$jscomp$0,History:History$jscomp$0,Inline:Inline,KeyUtils:KeyUtils,Leaf:Leaf,Mark:Mark,Node:Node$jscomp$0,Operation:Operation,Operations:Operations,PathUtils:PathUtils,
Range:Range$jscomp$0,resetKeyGenerator:resetKeyGenerator,resetMemoization:resetMemoization,Schema:Schema,setKeyGenerator:setKeyGenerator,Stack:Stack,Text:Text$jscomp$0,TextUtils:TextUtils,useMemoization:useMemoization,Value:Value};exports.Block=Block;exports.Change=Change;exports.Changes=Changes$7;exports.Character=Character;exports.Data=Data;exports.Document=Document$jscomp$0;exports.History=History$jscomp$0;exports.Inline=Inline;exports.KeyUtils=KeyUtils;exports.Leaf=Leaf;exports.Mark=Mark;exports.Node=
Node$jscomp$0;exports.Operation=Operation;exports.Operations=Operations;exports.PathUtils=PathUtils;exports.Range=Range$jscomp$0;exports.resetKeyGenerator=resetKeyGenerator;exports.resetMemoization=resetMemoization;exports.Schema=Schema;exports.setKeyGenerator=setKeyGenerator;exports.Stack=Stack;exports.Text=Text$jscomp$0;exports.TextUtils=TextUtils;exports.useMemoization=useMemoization;exports.Value=Value;exports.default=index$jscomp$0}
//# sourceMappingURL=module$node_modules$slate$lib$slate.js.map

{
"version":3,
"file":"module$node_modules$fbjs$lib$camelize.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAYvH,IAAIC,eAAiB,OAiBrBH,OAAAC,QAAA,CANAG,QAAiB,CAACC,MAAD,CAAS,CACxB,MAAOA,OAAAC,QAAA,CAAeH,cAAf,CAA+B,QAAS,CAACI,CAAD,CAAIC,SAAJ,CAAe,CAC5D,MAAOA,UAAAC,YAAA,EADqD,CAAvD,CADiB,CAvB6F;",
"sources":["node_modules/fbjs/lib/camelize.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$camelize\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_hyphenPattern","camelize","string","replace","_","character","toUpperCase"]
}

{"version":3,"file":"lib.plugins.backspace.js","sources":["lib/plugins/backspace.cljs"],"mappings":";;AAEA,8CAAA,9CAAMA,oGAAiBC;AAAvB,AACE,oDAAA,7CAACC,iDAAIC;;AAEP,yCAAA,zCAAMC,0FAAYH;AAAlB,AACE,oDAAA,7CAACC,yDAAcG;;AAEjB,oCAAA,pCAAMC,gFAAaC,MAAMN;AAAzB,AACE,GAAM,uDAAA,vDAACC,6CAAEM;AAAT,AACE,oBAAM,iBAAAC,oBAAK,AAACT,4CAAgBC;AAAtB,AAAA,oBAAAQ;AACK,OAACC,cAAI,AAACN,uCAAWH;;AADtBQ;;;AAAN,AAEE,AAAiBF;;AACjB,wBAAA,jBAAYN;;AAHd;;;AADF;;;AAMF,AAAA;;;kCAAA,0CAAAU,5EAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,8DAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,AAAA,gEAAA,hEAAMD,2EAEFE;AAFJ,AAAA,kDAAA,8DAGeT;;;AAHf,AAAA,gEAAA,hEAAMO;AAAN,AAKG,qEAAA,9DAACG;;;AALJ,AAAA,0DAAA,1DAAMH;;AAAN","names":["lib.plugins.backspace/start-of-block?","change","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","change/value.startOffset","lib.plugins.backspace/paragraph?","change/value.startBlock.type","lib.plugins.backspace/on-key-down","event","event/key","and__3938__auto__","cljs.core/not","var_args","G__26515","lib.plugins.backspace/backspace","js/Error","options","lib.plugins.backspace.backspace.cljs$core$IFn$_invoke$arity$1"],"sourcesContent":["(ns lib.plugins.backspace)\n\n(defn start-of-block? [change]\n  (= 0 change.value.startOffset))\n\n(defn paragraph? [change]\n  (= \"paragraph\" change.value.startBlock.type))\n\n(defn on-key-down [event change]\n  (when (= event.key \"Backspace\")\n    (when (and (start-of-block? change)\n               (not (paragraph? change)))\n      (.preventDefault event)\n      (.setBlocks change \"paragraph\"))))\n\n(defn backspace\n  \"Handles backspace related tranformations. Mostly converting non paragraph blocks back into paragraphs at the appropriate time.\"\n  ([options]\n   {:onKeyDown on-key-down})\n  ([]\n   (backspace {})))\n"]}
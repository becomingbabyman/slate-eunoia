{"version":3,"file":"reagent.ratom.js","sources":["reagent/ratom.cljs"],"mappings":"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","names":["js/reagent","js/reagent.ratom","js/reagent.ratom.debug","reagent.ratom/debug","js/reagent.ratom.generation","reagent.ratom/generation","js/reagent.ratom.-running","reagent.ratom/-running","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","and__3938__auto__","i","or__3949__auto__","reagent.ratom/in-context","obj","f","*ratom-context*34381","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5461__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","reagent.ratom/remove-w","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","reagent.ratom/notify-w","a","p1__34392#","p2__34393#","p3__34394#","cljs.core/reduce-kv","G__34395","k","reagent.ratom/pr-atom","writer","opts","s","cljs.core/-write","cljs.core/pr-writer","*ratom-context*34399","cljs.core/-deref","js/reagent.ratom.rea-queue","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/flush!","q","n__4408__auto__","reagent.impl.batching/ratom-flush","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4192__auto__","writer__4193__auto__","opt__4194__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","js/Error","old-value","cljs.core/-reset!","more","cljs.core.apply.cljs$core$IFn$_invoke$arity$5","_","new-meta","goog/getUid","var_args","G__34424","reagent.ratom/atom","args-arr__4546__auto__","len__4531__auto__","i__4532__auto__","argseq__4547__auto__","cljs.core/IndexedSeq","p__34426","map__34427","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","seq34422","G__34423","cljs.core/first","cljs.core/next","self__4518__auto__","reagent.ratom/cache-key","reagent.ratom/cached-reaction","destroy","m","G__34433","G__34434","G__34435","reagent.ratom/make-reaction","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/dec","v","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5459__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__34447","G__34448","G__34449","args__4534__auto__","argseq__4535__auto__","reagent.ratom/track","seq34451","G__34452","cljs.core/ifn?","reagent.ratom/track!","seq34460","G__34461","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*34472","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core/reset!","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","G__34474","G__34476","G__34477","G__34478","G__34479","G__34480","reagent.ratom/cursor","src","cljs.core/vector?","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","x__4243__auto__","m__4244__auto__","reagent/ratom.dispose!","goog/typeOf","cljs.core/missing-protocol","reagent/ratom.add-on-dispose!","reagent.ratom/IDisposable","reagent.ratom/dispose!","reagent.ratom/add-on-dispose!","reagent/ratom.run","reagent.ratom/IRunnable","reagent.ratom/run","reagent.ratom/handle-reaction-change","sender","p__34674","map__34676","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","cljs.core/fn?","oldval","G__34692","G__34695","G__34696","G__34697","G__34698","G__34699","*ratom-context*34653","cljs.core/set","seq__34654","cljs.core/seq","chunk__34655","count__34656","i__34657","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","cljs.core/-add-watch","seq__34660","chunk__34661","count__34662","i__34663","cljs.core/-remove-watch","e34667","e","check","on-set","on-dispose","no-cache","non-reactive","wg","seq__34683","chunk__34684","count__34685","i__34686","fexpr__34691","p__34762","map__34763","seq34760","G__34761","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","reagent/debug.has-console","reagent/debug.tracking","reagent/debug.track-console","js/console","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"],"sourcesContent":["(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom :refer [with-let]])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [dbg log warn error dev? time]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture [f r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher! [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)]\n    (let [len (alength a)]\n      (loop [i 0]\n        (when (< i len)\n          (let [k (aget a i)\n                f (aget a (inc i))]\n            (f k this old new))\n          (recur (+ 2 i)))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(def ^{:private true :const true} cache-key \"reagReactionCache\")\n\n(defn- cached-reaction [f o k obj destroy]\n  (let [m (aget o cache-key)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (aget o cache-key) _\n                                       (dissoc _ k)\n                                       (aset o cache-key _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (aset o cache-key (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [this sender old new]\n  (._handle-change this sender old new))\n\n\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n(defn run-in-reaction [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (aset obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n"]}
{"version":3,"file":"shadow.cljs.devtools.client.browser.js","sources":["shadow/cljs/devtools/client/browser.cljs"],"mappings":"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","names":["js/shadow","js/shadow.cljs","js/shadow.cljs.devtools","js/shadow.cljs.devtools.client","js/shadow.cljs.devtools.client.browser","js/shadow.cljs.devtools.client.browser.active-modules-ref","shadow.cljs.devtools.client.browser/active-modules-ref","cljs.core/volatile!","js/shadow.cljs.devtools.client.browser.repl-ns-ref","shadow.cljs.devtools.client.browser/repl-ns-ref","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","shadow.cljs.devtools.client.browser/module-loaded","name","cljs.core/-vreset!","cljs.core/-deref","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","js/shadow.cljs.devtools.client.browser.socket-ref","shadow.cljs.devtools.client.browser/socket-ref","var_args","args__4534__auto__","len__4531__auto__","i__4532__auto__","argseq__4535__auto__","cljs.core/IndexedSeq","shadow.cljs.devtools.client.browser/devtools-msg","seq35792","G__35793","cljs.core/first","cljs.core/next","self__4518__auto__","msg","args","js/console","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","cljs.core.into.cljs$core$IFn$_invoke$arity$2","shadow.cljs.devtools.client.browser/ws-msg","temp__5455__auto__","cljs.core/deref","s","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","js/console.warn","js/shadow.cljs.devtools.client.browser.scripts-to-load","shadow.cljs.devtools.client.browser/scripts-to-load","shadow.cljs.devtools.client.browser/loaded?","js/goog.isProvided_","shadow.cljs.devtools.client.browser/goog-is-loaded?","js/$CLJS.SHADOW_ENV.isLoaded","shadow.cljs.devtools.client.browser/goog-base-rc","p__35797","map__35798","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","shadow.cljs.devtools.client.browser/src-is-loaded?","resource-id","output-name","src","or__3949__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","shadow.cljs.devtools.client.browser/module-is-active?","module","cljs.core/contains?","shadow.cljs.devtools.client.browser/script-eval","code","js/goog.globalEval","shadow.cljs.devtools.client.browser/do-js-load","sources","seq__35800","cljs.core/seq","chunk__35801","count__35802","i__35803","map__35804","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","map__35806","resource-name","js","js/$CLJS.SHADOW_ENV.setLoaded","shadow.cljs.devtools.client.browser.devtools_msg.cljs$core$IFn$_invoke$arity$variadic","shadow.cljs.devtools.client.env/before-load-src","shadow.cljs.devtools.client.browser/do-js-reload","complete-fn","failure-fn","shadow.cljs.devtools.client.env.do_js_reload.cljs$core$IFn$_invoke$arity$4","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","fn-sym","shadow.cljs.devtools.client.browser/do-js-requires","js-requires","seq__35820","chunk__35821","count__35822","i__35823","js-ns","require-str","shadow.cljs.devtools.client.browser/load-sources","callback","cljs.core/empty?","G__35838","G__35839","G__35840","G__35841","G__35842","G__35843","goog.net.XhrIo/send","shadow.cljs.devtools.client.env/files-url","res","req","content","cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$1","p__35845","map__35846","shadow.cljs.devtools.client.browser/handle-build-complete","info","reload-info","map__35848","compiled","warnings","iter__4324__auto__","s__35851","cljs.core/LazySeq","xs__6012__auto__","map__35856","iterys__4320__auto__","s__35853","c__4322__auto__","size__4323__auto__","b__35855","cljs.core/chunk-buffer","i__35854","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__35852","cljs.core/cons","cljs.core/rest","fs__4321__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","iter__35850","cljs.core/not","warning","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core.distinct.cljs$core$IFn$_invoke$arity$1","seq__35858","chunk__35859","count__35860","i__35861","map__35862","map__35864","line","column","w","shadow.cljs.devtools.client.env/autoload","shadow.cljs.devtools.client.hud/load-end-success","shadow.cljs.devtools.client.env/ignore-warnings","sources-to-get","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","p__35872","map__35873","rc","shadow.cljs.devtools.client.env/module-format","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","p__35869","map__35870","ns","p__35866","map__35867","p1__35844#","shadow.cljs.devtools.client.hud/load-failure","shadow.cljs.devtools.client.browser/page-load-uri","js/goog.global.document","goog.Uri/parse","js/document.location.href","p__35911","map__35912","shadow.cljs.devtools.client.browser/handle-asset-watch","updates","seq__35914","chunk__35916","count__35917","i__35918","path","clojure.string/ends-with?","seq__35920","chunk__35923","count__35924","i__35925","seq__35932","chunk__35935","count__35936","i__35937","node","cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1","js/document.querySelectorAll","node-uri","G__35928","G__35930","G__35940","G__35942","node-uri-resolved","node-abs","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1","new-link","G__35929","G__35931","G__35941","G__35943","cljs.core.rand.cljs$core$IFn$_invoke$arity$0","goog.dom/insertSiblingAfter","goog.dom/removeNode","shadow.cljs.devtools.client.browser/get-ua-product","goog.userAgent.product/SAFARI","goog.userAgent.product/CHROME","goog.userAgent.product/FIREFOX","goog.userAgent.product/IE","shadow.cljs.devtools.client.browser/get-asset-root","loc","js/goog.Uri","cbp","js/CLOSURE_BASE_PATH","clojure.string/replace","shadow.cljs.devtools.client.browser/repl-error","e","js/console.error","shadow.cljs.devtools.client.env/repl-error","p__36038","map__36039","shadow.cljs.devtools.client.browser/repl-invoke","id","result","shadow.cljs.devtools.client.env/repl-call","js/eval","p__36041","map__36042","shadow.cljs.devtools.client.browser/repl-require","reload-namespaces","sources-to-load","p__36044","map__36045","provides","and__3938__auto__","cljs.core/some","p__36047","map__36048","shadow.cljs.devtools.client.browser/repl-init","repl-state","cljs.core/reset!","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","p__36050","map__36051","shadow.cljs.devtools.client.browser/repl-set-ns","shadow.cljs.devtools.client.browser/close-reason-ref","p__36053","map__36054","shadow.cljs.devtools.client.browser/handle-message","type","shadow.cljs.devtools.client.hud/connection-error-clear!","G__36056","cljs.core/Keyword","shadow.cljs.devtools.client.hud/hud-warnings","shadow.cljs.devtools.client.hud/load-end","shadow.cljs.devtools.client.hud/hud-error","shadow.cljs.devtools.client.hud/hud-hide","shadow.cljs.devtools.client.hud/load-start","cljs.core/vreset!","shadow.cljs.devtools.client.env/build-id","shadow.cljs.devtools.client.browser/compile","text","G__36058","G__36059","G__36060","G__36061","G__36062","shadow.cljs.devtools.client.env/ssl","shadow.cljs.devtools.client.env/server-host","shadow.cljs.devtools.client.env/server-port","shadow.cljs.devtools.client.env/proc-id","actions","shadow.cljs.devtools.client.browser/heartbeat!","js/Date.now","js/setTimeout","shadow.cljs.devtools.client.browser/ws-connect","print-fn","cljs.core/*print-fn*","ws-url","shadow.cljs.devtools.client.env/ws-url","socket","js/WebSocket","shadow.cljs.devtools.client.env/process-ws-msg","js/goog","js/goog.constructNamespace_","shadow.cljs.devtools.client.env/set-print-fns!","shadow.cljs.devtools.client.hud/connection-error","shadow.cljs.devtools.client.env/reset-print-fns!","shadow.cljs.devtools.client.env/enabled","js/window.addEventListener"],"sourcesContent":["(ns shadow.cljs.devtools.client.browser\n  (:require\n    [cljs.reader :as reader]\n    [clojure.string :as str]\n    [goog.dom :as gdom]\n    [goog.userAgent.product :as product]\n    [goog.Uri]\n    [goog.net.XhrIo :as xhr]\n    [shadow.cljs.devtools.client.env :as env]\n    [shadow.cljs.devtools.client.console]\n    [shadow.cljs.devtools.client.hud :as hud]\n    ))\n\n(defonce active-modules-ref\n  (volatile! #{}))\n\n(defonce repl-ns-ref (atom nil))\n\n(defn module-loaded [name]\n  (vswap! active-modules-ref conj (keyword name)))\n\n(defonce socket-ref (volatile! nil))\n\n(defn devtools-msg [msg & args]\n  (.apply (.-log js/console) nil (into-array (into [(str \"%cshadow-cljs: \" msg) \"color: blue;\"] args))))\n\n(defn ws-msg [msg]\n  (if-let [s @socket-ref]\n    (.send s (pr-str msg))\n    (js/console.warn \"WEBSOCKET NOT CONNECTED\" (pr-str msg))))\n\n(defonce scripts-to-load (atom []))\n\n(def loaded? js/goog.isProvided_)\n\n(defn goog-is-loaded? [name]\n  (js/$CLJS.SHADOW_ENV.isLoaded name))\n\n(def goog-base-rc\n  [:shadow.build.classpath/resource \"goog/base.js\"])\n\n(defn src-is-loaded? [{:keys [resource-id output-name] :as src}]\n  ;; FIXME: don't like this special case handling, but goog/base.js will always be loaded\n  ;; but not as a separate file\n  (or (= goog-base-rc resource-id)\n      (goog-is-loaded? output-name)))\n\n(defn module-is-active? [module]\n  (contains? @active-modules-ref module))\n\n(defn script-eval [code]\n  (js/goog.globalEval code))\n\n(defn do-js-load [sources]\n  (doseq [{:keys [resource-id output-name resource-name js] :as src} sources]\n    ;; should really stop using this and rather maintain our own record\n    ;; but without this hot-reload will reload shadow-js files with each cycle\n    ;; since they don't set it\n    (js/$CLJS.SHADOW_ENV.setLoaded output-name)\n\n    (devtools-msg \"load JS\" resource-name)\n    (env/before-load-src src)\n    (script-eval (str js \"\\n//# sourceURL=\" resource-name))))\n\n(defn do-js-reload [msg sources complete-fn failure-fn]\n  (env/do-js-reload\n    (assoc msg\n      :log-missing-fn\n      (fn [fn-sym]\n        (devtools-msg (str \"can't find fn \" fn-sym)))\n      :log-call-async\n      (fn [fn-sym]\n        (devtools-msg (str \"call async \" fn-sym)))\n      :log-call\n      (fn [fn-sym]\n        (devtools-msg (str \"call \" fn-sym))))\n    #(do-js-load sources)\n    complete-fn\n    failure-fn))\n\n(defn do-js-requires\n  \"when (require '[\\\"some-str\\\" :as x]) is done at the REPL we need to manually call the shadow.js.require for it\n   since the file only adds the shadow$provide. only need to do this for shadow-js.\"\n  [js-requires]\n  (doseq [js-ns js-requires]\n    (let [require-str (str \"var \" js-ns \" = shadow.js.require(\\\"\" js-ns \"\\\");\")]\n      (script-eval require-str))))\n\n(defn load-sources [sources callback]\n  (if (empty? sources)\n    (callback [])\n    (xhr/send\n      (env/files-url)\n      (fn [res]\n        (this-as ^goog req\n          (let [content\n                (-> req\n                    (.getResponseText)\n                    (reader/read-string))]\n            (callback content)\n            )))\n      \"POST\"\n      (pr-str {:client :browser\n               :sources (into [] (map :resource-id) sources)})\n      #js {\"content-type\" \"application/edn; charset=utf-8\"})))\n\n(defn handle-build-complete [{:keys [info reload-info] :as msg}]\n  (let [{:keys [sources compiled]}\n        info\n\n        warnings\n        (->> (for [{:keys [resource-name warnings] :as src} sources\n                   :when (not (:from-jar src))\n                   warning warnings]\n               (assoc warning :resource-name resource-name))\n             (distinct)\n             (into []))]\n\n    (doseq [{:keys [msg line column resource-name] :as w} warnings]\n      (js/console.warn (str \"BUILD-WARNING in \" resource-name \" at [\" line \":\" column \"]\\n\\t\" msg)))\n\n    (if-not env/autoload\n      (hud/load-end-success)\n      ;; load all files for current build:\n      ;; of modules that are active\n      ;; and are either not loaded yet\n      ;; or specifically marked for reload\n      (when (or (empty? warnings) env/ignore-warnings)\n        (let [sources-to-get\n              (->> sources\n                   (filter\n                     (fn [{:keys [module] :as rc}]\n                       (or (= \"js\" env/module-format)\n                           (module-is-active? module))))\n                   ;; don't reload namespaces that have ^:dev/never-reload meta\n                   (remove (fn [{:keys [ns]}]\n                             (contains? (:never-load reload-info) ns)))\n                   (filter\n                     (fn [{:keys [ns resource-id] :as src}]\n                       (or (contains? (:always-load reload-info) ns)\n                           (not (src-is-loaded? src))\n                           (and (contains? compiled resource-id)\n                                ;; never reload files from jar\n                                ;; they can't be hot-swapped so the only way they get re-compiled\n                                ;; is if they have warnings, which we can't to anything about\n                                (not (:from-jar src))))))\n                   (into []))]\n\n          (if-not (seq sources-to-get)\n            (hud/load-end-success)\n            (load-sources sources-to-get #(do-js-reload msg % hud/load-end-success hud/load-failure))\n            ))))))\n\n;; capture this once because the path may change via pushState\n(def ^goog page-load-uri\n  (when js/goog.global.document\n    (goog.Uri/parse js/document.location.href)))\n\n(defn handle-asset-watch [{:keys [updates] :as msg}]\n  (doseq [path updates\n          ;; FIXME: could support images?\n          :when (str/ends-with? path \"css\")]\n    (doseq [node (array-seq (js/document.querySelectorAll \"link[rel=\\\"stylesheet\\\"]\"))\n            :let [^goog node-uri (goog.Uri/parse (.getAttribute node \"href\"))\n                  node-uri-resolved (.resolve page-load-uri node-uri)\n                  node-abs (.getPath ^goog node-uri-resolved)]\n            :when (and (or (= (.hasSameDomainAs page-load-uri node-uri))\n                           (not (.hasDomain node-uri)))\n                       (= node-abs path))]\n\n      (let [new-link\n            (doto (.cloneNode node true)\n              (.setAttribute \"href\" (str path \"?r=\" (rand))))]\n\n        (devtools-msg \"load CSS\" path)\n        (gdom/insertSiblingAfter new-link node)\n        (gdom/removeNode node)\n        ))))\n\n;; from https://github.com/clojure/clojurescript/blob/master/src/main/cljs/clojure/browser/repl.cljs\n;; I don't want to pull in all its other dependencies just for this function\n(defn get-ua-product []\n  (cond\n    product/SAFARI :safari\n    product/CHROME :chrome\n    product/FIREFOX :firefox\n    product/IE :ie))\n\n(defn get-asset-root []\n  (let [loc (js/goog.Uri. js/document.location.href)\n        cbp (js/goog.Uri. js/CLOSURE_BASE_PATH)\n        s (.toString (.resolve loc cbp))]\n    ;; FIXME: stacktrace starts with file:/// but resolve returns file:/\n    ;; how does this look on windows?\n    (str/replace s #\"^file:/\" \"file:///\")\n    ))\n\n(defn repl-error [e]\n  (js/console.error \"repl/invoke error\" e)\n  (-> (env/repl-error e)\n      (assoc :ua-product (get-ua-product)\n             :asset-root (get-asset-root))))\n\n(defn repl-invoke [{:keys [id js]}]\n  (let [result (env/repl-call #(js/eval js) repl-error)]\n    (-> result\n        (assoc :id id)\n        (ws-msg))))\n\n(defn repl-require [{:keys [id sources reload-namespaces js-requires] :as msg}]\n  (let [sources-to-load\n        (->> sources\n             (remove (fn [{:keys [provides] :as src}]\n                       (and (src-is-loaded? src)\n                            (not (some reload-namespaces provides)))))\n             (into []))]\n\n    (load-sources\n      sources-to-load\n      (fn [sources]\n        (do-js-load sources)\n        (when (seq js-requires)\n          (do-js-requires js-requires))\n        (ws-msg {:type :repl/require-complete :id id})\n        ))))\n\n(defn repl-init [{:keys [repl-state id]}]\n  (reset! repl-ns-ref (get-in repl-state [:current :ns]))\n  (load-sources\n    ;; maybe need to load some missing files to init REPL\n    (->> (:repl-sources repl-state)\n         (remove src-is-loaded?)\n         (into []))\n    (fn [sources]\n      (do-js-load sources)\n      (ws-msg {:type :repl/init-complete :id id})\n      (devtools-msg \"REPL init successful\"))))\n\n(defn repl-set-ns [{:keys [id ns]}]\n  (reset! repl-ns-ref ns)\n  (ws-msg {:type :repl/set-ns-complete :id id :ns ns}))\n\n(def close-reason-ref (volatile! nil))\n\n;; FIXME: core.async-ify this\n(defn handle-message [{:keys [type] :as msg}]\n  ;; (js/console.log \"ws-msg\" msg)\n  (hud/connection-error-clear!)\n  (case type\n    :asset-watch\n    (handle-asset-watch msg)\n\n    :repl/invoke\n    (repl-invoke msg)\n\n    :repl/require\n    (repl-require msg)\n\n    :repl/set-ns\n    (repl-set-ns msg)\n\n    :repl/init\n    (repl-init msg)\n\n    :build-complete\n    (do (hud/hud-warnings msg)\n        (handle-build-complete msg))\n\n    :build-failure\n    (do (hud/load-end)\n        (hud/hud-error msg))\n\n    :build-init\n    (hud/hud-warnings msg)\n\n    :build-start\n    (do (hud/hud-hide)\n        (hud/load-start))\n\n    :pong\n    nil\n\n    :client/stale\n    (vreset! close-reason-ref \"Stale Client! You are not using the latest compilation output!\")\n\n    :client/no-worker\n    (vreset! close-reason-ref (str \"watch for build \\\"\" env/build-id \"\\\" not running\"))\n\n    ;; default\n    :ignored))\n\n(defn compile [text callback]\n  (xhr/send\n    (str \"http\" (when env/ssl \"s\") \"://\" env/server-host \":\" env/server-port \"/worker/compile/\" env/build-id \"/\" env/proc-id \"/browser\")\n    (fn [res]\n      (this-as ^goog req\n        (let [actions\n              (-> req\n                  (.getResponseText)\n                  (reader/read-string))]\n          (when callback\n            (callback actions)))))\n    \"POST\"\n    (pr-str {:input text})\n    #js {\"content-type\" \"application/edn; charset=utf-8\"}))\n\n(defn heartbeat! []\n  (when-let [s @socket-ref]\n    (.send s (pr-str {:type :ping :v (js/Date.now)}))\n    (js/setTimeout heartbeat! 30000)))\n\n\n(defn ws-connect []\n  (let [print-fn\n        cljs.core/*print-fn*\n\n        ws-url\n        (env/ws-url :browser)\n\n        socket\n        (js/WebSocket. ws-url)]\n\n    (vreset! socket-ref socket)\n\n    (set! (.-onmessage socket)\n      (fn [e]\n        (env/process-ws-msg (. e -data) handle-message)\n        ))\n\n    (set! (.-onopen socket)\n      (fn [e]\n        (hud/connection-error-clear!)\n        (vreset! close-reason-ref nil)\n        ;; :module-format :js already patches provide\n        (when (= \"goog\" env/module-format)\n          ;; patch away the already declared exception\n          (set! (.-provide js/goog) js/goog.constructNamespace_))\n\n        (env/set-print-fns! ws-msg)\n\n        (devtools-msg \"WebSocket connected!\")\n        ))\n\n    (set! (.-onclose socket)\n      (fn [e]\n        ;; not a big fan of reconnecting automatically since a disconnect\n        ;; may signal a change of config, safer to just reload the page\n        (devtools-msg \"WebSocket disconnected!\")\n        (hud/connection-error (or @close-reason-ref \"Connection closed!\"))\n        (vreset! socket-ref nil)\n        (env/reset-print-fns!)\n        ))\n\n    (set! (.-onerror socket)\n      (fn [e]\n        (hud/connection-error \"Connection failed!\")\n        (devtools-msg \"websocket error\" e)))\n\n    (js/setTimeout heartbeat! 30000)\n    ))\n\n(when ^boolean env/enabled\n  ;; disconnect an already connected socket, happens if this file is reloaded\n  ;; pretty much only for me while working on this file\n  (when-let [s @socket-ref]\n    (devtools-msg \"connection reset!\")\n    (set! (.-onclose s) (fn [e]))\n    (.close s)\n    (vreset! socket-ref nil))\n\n  ;; for /browser-repl in case the page is reloaded\n  ;; otherwise the browser seems to still have the websocket open\n  ;; when doing the reload\n  (js/window.addEventListener \"beforeunload\"\n    (fn []\n      (when-let [s @socket-ref]\n        (.close s))))\n\n  (ws-connect))\n"]}
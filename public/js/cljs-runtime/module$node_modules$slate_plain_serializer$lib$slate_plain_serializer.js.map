{
"version":3,
"file":"module$node_modules$slate_plain_serializer$lib$slate_plain_serializer.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/slate-plain-serializer/lib/slate-plain-serializer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$slate_plain_serializer$lib$slate_plain_serializer\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar slate = require('slate');\nvar immutable = require('immutable');\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Deserialize a plain text `string` to a Slate value.\n *\n * @param {String} string\n * @param {Object} options\n *   @property {Boolean} toJSON\n *   @property {String|Object|Block} defaultBlock\n *   @property {Array|Set} defaultMarks\n * @return {Value}\n */\n\nfunction deserialize(string) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$defaultBlock = options.defaultBlock,\n      defaultBlock = _options$defaultBlock === undefined ? 'line' : _options$defaultBlock,\n      _options$defaultMarks = options.defaultMarks,\n      defaultMarks = _options$defaultMarks === undefined ? [] : _options$defaultMarks,\n      _options$toJSON = options.toJSON,\n      toJSON = _options$toJSON === undefined ? false : _options$toJSON;\n\n\n  if (immutable.Set.isSet(defaultMarks)) {\n    defaultMarks = defaultMarks.toArray();\n  }\n\n  defaultBlock = slate.Node.createProperties(defaultBlock);\n  defaultMarks = defaultMarks.map(slate.Mark.createProperties);\n\n  var json = {\n    object: 'value',\n    document: {\n      object: 'document',\n      data: {},\n      nodes: string.split('\\n').map(function (line) {\n        return _extends({}, defaultBlock, {\n          object: 'block',\n          isVoid: false,\n          data: {},\n          nodes: [{\n            object: 'text',\n            leaves: [{\n              object: 'leaf',\n              text: line,\n              marks: defaultMarks\n            }]\n          }]\n        });\n      })\n    }\n  };\n\n  var ret = toJSON ? json : slate.Value.fromJSON(json);\n  return ret;\n}\n\n/**\n * Serialize a Slate `value` to a plain text string.\n *\n * @param {Value} value\n * @return {String}\n */\n\nfunction serialize(value) {\n  return serializeNode(value.document);\n}\n\n/**\n * Serialize a `node` to plain text.\n *\n * @param {Node} node\n * @return {String}\n */\n\nfunction serializeNode(node) {\n  if (node.object == 'document' || node.object == 'block' && slate.Block.isBlockList(node.nodes)) {\n    return node.nodes.map(serializeNode).join('\\n');\n  } else {\n    return node.text;\n  }\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nvar index = {\n  deserialize: deserialize,\n  serialize: serialize\n};\n\nexports.default = index;\n//# sourceMappingURL=slate-plain-serializer.js.map\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","serializeNode","node","object","slate","Block","isBlockList","nodes","map","join","text","Object","defineProperty","value","immutable","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","index","deserialize","string","options","undefined","_options$defaultBlock","defaultBlock","_options$defaultMarks","defaultMarks","_options$toJSON","toJSON","Set","isSet","toArray","Node","createProperties","Mark","json","document","data","split","line","isVoid","leaves","marks","ret","Value","fromJSON","serialize"]
}

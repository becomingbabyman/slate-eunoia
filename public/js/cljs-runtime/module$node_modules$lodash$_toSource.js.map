{
"version":3,
"file":"module$node_modules$lodash$_toSource.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,qCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAKtH,IAAIC,aAHYC,QAAAC,UAGGC,SAqBnBN,OAAAC,QAAA,CAZAM,QAAiB,CAACC,IAAD,CAAO,CACtB,GAAY,IAAZ,EAAIA,IAAJ,CAAkB,CAChB,GAAI,CACF,MAAOL,aAAAM,KAAA,CAAkBD,IAAlB,CADL,CAEF,MAAOE,CAAP,CAAU,EAEV,MAAQF,KAAR,CAAe,EALD,CAQlB,MAAO,EATe,CAd8F;",
"sources":["node_modules/lodash/_toSource.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_toSource\"] = function(global,process,require,module,exports,shadow$shims) {\n/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","funcToString","Function","prototype","toString","toSource","func","call","e"]
}

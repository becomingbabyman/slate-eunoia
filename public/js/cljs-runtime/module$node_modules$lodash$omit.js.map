{
"version":3,
"file":"module$node_modules$lodash$omit.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,gCAAA,CAAoD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAC7GC,SAAWJ,OAAA,CAAQ,sCAAR,CADkG,CAE7GK,UAAYL,OAAA,CAAQ,uCAAR,CAFiG,CAG7GM,UAAYN,OAAA,CAAQ,uCAAR,CAHiG,CAI7GO,SAAWP,OAAA,CAAQ,sCAAR,CAJkG,CAK7GQ,WAAaR,OAAA,CAAQ,wCAAR,CALgG,CAM7GS,gBAAkBT,OAAA,CAAQ,6CAAR,CAClBU,OAAAA,CAAWV,OAAA,CAAQ,sCAAR,CANf;IAOIW,aAAeX,OAAA,CAAQ,0CAAR,CA2BfY,QAAAA,CAAOF,MAAA,CAAS,QAAQ,CAACG,MAAD,CAASC,KAAT,CAAgB,CAC1C,IAAIC,OAAS,EACb,IAAc,IAAd,EAAIF,MAAJ,CACE,MAAOE,OAET,KAAIC,OAAS,CAAA,CACbF,MAAA,CAAQV,QAAA,CAASU,KAAT,CAAgB,QAAQ,CAACG,IAAD,CAAO,CACrCA,IAAA,CAAOV,QAAA,CAASU,IAAT,CAAeJ,MAAf,CACPG,OAAA,GAAWA,MAAX,CAAkC,CAAlC,CAAoBC,IAAAC,OAApB,CACA,OAAOD,KAH8B,CAA/B,CAKRT,WAAA,CAAWK,MAAX,CAAmBF,YAAA,CAAaE,MAAb,CAAnB,CAAyCE,MAAzC,CACIC,OAAJ,GACED,MADF,CACWV,SAAA,CAAUU,MAAV,CAAkB,CAAlB,CAA0EN,eAA1E,CADX,CAIA,KADA,IAAIS,OAASJ,KAAAI,OACb,CAAOA,MAAA,EAAP,CAAA,CACEZ,SAAA,CAAUS,MAAV,CAAkBD,KAAA,CAAMI,MAAN,CAAlB,CAEF,OAAOH,OAnBmC,CAAjC,CAsBXd,OAAAC,QAAA,CAAiBU,OAzDgG;",
"sources":["node_modules/lodash/omit.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$omit\"] = function(global,process,require,module,exports,shadow$shims) {\nvar arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","arrayMap","baseClone","baseUnset","castPath","copyObject","customOmitClone","flatRest","getAllKeysIn","omit","object","paths","result","isDeep","path","length"]
}

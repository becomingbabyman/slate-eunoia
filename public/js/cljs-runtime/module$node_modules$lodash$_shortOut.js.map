{
"version":3,
"file":"module$node_modules$lodash$_shortOut.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,qCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMtH,IAAIC,UAAYC,IAAAC,IA+BhBL,OAAAC,QAAA,CApBAK,QAAiB,CAACC,IAAD,CAAO,CAAA,IAClBC,MAAQ,CADU,CAElBC,WAAa,CAEjB,OAAO,SAAQ,EAAG,CAAA,IACZC,MAAQP,SAAA,EADI,CAEZQ,UApBOC,EAoBPD,EAAwBD,KAAxBC,CAAgCF,UAAhCE,CAEJF,WAAA,CAAaC,KACb,IAAgB,CAAhB,CAAIC,SAAJ,CACE,IAzBUE,GAyBV,EAAI,EAAEL,KAAN,CACE,MAAOM,UAAA,CAAU,CAAV,CADT,CADF,IAKEN,MAAA,CAAQ,CAEV,OAAOD,KAAAQ,MAAA,CAAWC,IAAAA,EAAX,CAAsBF,SAAtB,CAZS,CAJI,CAjB8F;",
"sources":["node_modules/lodash/_shortOut.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_shortOut\"] = function(global,process,require,module,exports,shadow$shims) {\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","nativeNow","Date","now","shortOut","func","count","lastCalled","stamp","remaining","HOT_SPAN","HOT_COUNT","arguments","apply","undefined"]
}
